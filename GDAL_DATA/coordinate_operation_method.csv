coord_op_method_code,coord_op_method_name,reverse_op,formula,example,remarks,information_source,data_source,revision_date,change_id,deprecated
1024,Popular Visualisation Pseudo Mercator,1,"Note: These formulas have been transcribed from EPSG Guidance Note #7-2. Users are encouraged to use that document rather than the text which follows as reference because limitations in the transcription will be avoided.

This method is utilised by some popular web mapping and visualisation applications. It applies standard Mercator (Spherical) formulas (method code 1026) to ellipsoidal coordinates and the sphere radius is taken to be the semi-major axis of the ellipsoid. This approach only approximates to the more rigorous application of ellipsoidal formulas to ellipsoidal coordinates (as given in EPSG dataset coordinate operation method codes 9804 and 9805).  Unlike either the spherical or ellipsoidal Mercator projection methods, this method is not conformal: scale factor varies as a function of azimuth, which creates angular distortion. Despite angular distortion there is no convergence in the meridian. 

The formulas to derive projected Easting and Northing coordinates from ellipsoidal latitude (lat) and longitude (lon) first derive the radius of the sphere (R) from:
	R = a

Then applying spherical Mercator formulae:

	E = FE + R(lon - lonO)              
	N = FN + R ln[tan(pi/4 + lat/2)]                   
where FE and FN are false easting and false nothing at the projection origin, other symbols are as listed above and logarithms are natural.

If latitude lat = 90º, N is infinite. The above formula for N will fail near to the pole, and should not be used poleward of 88º.

The reverse formulas to derive latitude and longitude on the sphere from E and N values are:
	D = -(N-FN)/R = (FN-N)/R
	lat = pi/2 - 2 atan(e^D) where e=base of natural logarithms, 2.7182818...
	lon = [(E - FE)/R] + lonO


If q_alpha is the scale factor at a given azimuth alpha, it is a function of R', the radius of curvature at that azimuth derived from:
	R' = rho nu / (nu cos^2alpha + rho sin^2alpha)
	q_alpha = R / (R' cos lat)
where rho and nu are the radii of curvature of the ellipsoid at latitude lat in the plane of the meridian and perpendicular to the meridian respectively;
rho = a(1 - e^2)/(1 - e^2 sin^2(lat))^3/2
nu = a /(1 - e^2 sin^2(lat))^1/2

Then when the azimuth is 0º, 180º, 90º or 270º the scale factors in the meridian (h) and on the parallel (k) are:
	q_0 = q_180  = h = R / (rho cos(lat))
	q_90 = q_270 = k = R / (nu cos(lat))
which demonstrates the non-conformallity of the Pseudo Mercator method.

Maximum angular distortion omega is a function of latitude and is found from:
	omega = 2 asin{[ABS(h - k)] / (h + k)}","For Projected Coordinate Reference System: WGS 84 / Pseudo-Mercator

Parameters:
Ellipsoid:	WGS 84	a = 6378137.0 metres		1/f = 298.2572236
			
Latitude of natural origin (latO) = 0°00'00.000""N = 0.0 rad
Longitude of natural origin (lonO) = 0°00'00.000""E = 0.0 rad
False easting (FE) = 0.00 metres	
False northing (FN) = 0.00 metres	

Forward calculation for the same coordinate values as used for the Mercator (1SP) (Spherical) example (method code 9841): 
Latitude (lat) = 24°22'54.433""N	= 0.425542460 rad
Longitude (lon) = 100°20'00.000""W = -1.751147016 rad

	R  = 6378137.0
whence 
	E = -11 169 055.58 m
	N =   2 800 000.00 m
and 
	h  = 1.1034264
	k  = 1.0972914
	omega = 0°19'10.01""


Reverse calculation for a point 10km north on the grid (-11 169 055.58 m E, 2 810 000.00m N) first gives:
	D = -0.44056752

Then	Latitude (lat) = 0.426970023 rad = 24°27'48.889""N
	Longitude (lon) = -1.751147016 rad = 100°20'00.000""W",Applies spherical formulas to the ellipsoid. As such does not have the properties of a true Mercator projection.,OGP Guidance Note 7-2,OGP,2009/06/07,2008.114 2009.023,0
1025,Geographic3D to GravityRelatedHeight (EGM2008),0,"This transformation involves the application of a geoid-ellipsoid separation value interpolated from a geoid model. The model provides separation values at the nodes on a regular grid of latitude and longitude intersection points. The geodetic latitude and longitude used to interpolate within the grid are not affected by this transformation.

The grid is referenced to a specific geographic CRS (the source CRS) and interpolation must be made in this system.

Calculation of the separation is achieved through a bi-linear interpolation of the grid, using the latitude and longitude of the point. This step provides the geoid-ellipsoid separation (N) above the ellipsoid of the source Geographic 3D CRS.

Then:
           H = h - N

where h = the height above the ellipsoid in the source geographic 3D CRS
and     H = the geoid height in the target vertical CRS.",(none),"For earlier EGM84 and EGM96 models see Geographic3D to GravityRelatedHeight (EGM), method code 9661.","EPSG guidance note #7-2, http://www.epsg.org",OGP,2009/01/30,2008.097,0
1026,Mercator (Spherical),1,"Note: These formulas have been transcribed from EPSG Guidance Note #7-2. Users are encouraged to use that document rather than the text which follows as reference because limitations in the transcription will be avoided.

The formulas to derive projected Easting and Northing coordinates from spherical latitude lat and longitude lon are:
	E = FE   R (lon - lonO)              
	N = FN   R ln[tan(pi/4   lat/2)]                   
where lonO is the longitude of natural origin and FE and FN are false easting and false nothing.

R is the radius of the sphere and will normally be one of the CRS parameters. If the figure of the earth used is an ellipsoid rather than a sphere then R should be calculated as the radius of the conformal sphere at the projection origin at latitude latO using the formula for Rc given in EPSG Guidance Note 7-2, section 1.2, table 3. Note however that if applying spherical formula to ellipsoidal coordinates, the projection properties are not preserved.

If latitude lat = 90º, N is infinite. The above formula for N will fail near to the pole, and should not be used poleward of 88º.

The reverse formulas to derive latitude and longitude on the sphere from E and N values are:
	D = -(N - FN)/R = (FN - N)/R
	lat = pi/2 -  2 atan(e^D) where e=base of natural logarithms, 2.7182818...
	lon = [(E - FE)/R] + lonO

Note that in these formulas, the parameter latitude of natural origin (*O) is not used. However for the Merctor (Spherical) method, for completeness in CRS labelling the EPSG dataset includes this parameter, which must have a value of zero.","For Projected Coordinate Reference System: World Spherical Mercator (Note: CRS not in EPSG dataset)

Parameters:
Sphere:	R = 6371007.0 metres
			
Latitude of natural origin (latO) = 0°00'00.000""N = 0.0 rad
Longitude of natural origin (lonO) = 0°00'00.000""E = 0.0 rad
False easting (FE) = 0.00 metres	
False northing (FN) = 0.00 metres	

Forward calculation for: 
Latitude (lat) = 24°22'54.433""N	= 0.425542460 rad
Longitude (lon) = 100°20'00.000""W = -1.751147016 rad

whence 
	E = -11 156 569.90 m
	N =   2 796 869.94 m

Reverse calculation for the same point (-11 156 569.90 m E, 2 796 869.94m N) first gives:
	D = -0.438999665

Then	Latitude (lat) = 0.425542460 rad = 24°22'54.433""N
	Longitude (lon) = -1.751147016 rad = 100°20'00.000""W",,"EPSG guidance note #7-2, http://www.epsg.org",OGP,2009/06/07,2008.114 2009.023,0
1027,Lambert Azimuthal Equal Area (Spherical),1,"See information source.

R is the radius of the sphere and will normally be one of the CRS parameters. If the figure of the earth used is an ellipsoid rather than a sphere then R should be calculated as the radius of the authalic sphere using the formula for RA given in EPSG Guidance Note 7-2, section 1.2, table 3. Note however that if applying spherical formula to ellipsoidal coordinates, the authalic projection properties are not preserved.",See information source.,This is the spherical form of the projection.  See coordinate operation method Lambert Azimuthal Equal Area (code 9820) for ellipsoidal form.  Differences of several tens of metres result from comparison of the two methods.,"USGS Professional Paper 1395, ""Map Projections - A Working Manual"" by John P. Snyder.",OGP,2009/06/07,2009.007 2009.023,0
1028,Equidistant Cylindrical,1,See EPSG Guidance Note #7-2.,See EPSG Guidance Note #7-2.,"See method code 1029 for spherical development. See also Pseudo Plate Carree, method code 9825.",ESRI,OGP,2009/06/07,2009.023,0
1029,Equidistant Cylindrical (Spherical),1,"Note: These formulas have been transcribed from EPSG Guidance Note #7-2. Users are encouraged to use that document rather than the text which follows as reference because limitations in the transcription will be avoided.



This method has one of the simplest formulas available. If the latitude of natural origin (lat1) is at the equator the method is also known as Plate Carrée. It is not used for rigorous topographic mapping because its distortion characteristics are unsuitable. Formulas are included to distinguish this map projection method from an approach sometimes mistakenly called by the same name and used for simple computer display of geographic coordinates - see Pseudo Plate Carrée (coordinate operation method code 9825).



For the forward calculation:



E =  FE + R . (lon - lonO) . cos(lat1)

N =  FN + R . lat



where lat1, lonO, lat and lon are expressed in radians.



R is the radius of the sphere and will normally be one of the CRS parameters. If the figure of the earth used is an ellipsoid rather than a sphere then R should be calculated as the radius of the conformal sphere at the projection origin at latitude lat1 using the formula for RC given in EPSG Guidance Note 7-2, section 1.2, table 3. Note however that if applying spherical formula to ellipsoidal coordinates, the equidistant projection properties are not preserved.



For the reverse calculation:



lat = (N - FN)/ R  

lon = lonO + ([E - FE] / R cos(lat1))



where R is as for the forward method.",See information source.,"See method code 1028 for ellipsoidal development. If the latitude of natural origin is at the equator, also known as Plate Carrée. See also Pseudo Plate Carree, method code 9825.","US Geological Survey Professional Paper 1395; ""Map Projections - A Working Manual"";  J. Snyder.",OGP,2009/06/07,2009.023,0
1030,Geographic3D to GravityRelatedHeight (NZgeoid2009),0,"This transformation involves the application of a geoid-ellipsoid separation value interpolated from a quasigeoid model. The model provides separation values at the nodes on a regular grid of latitude and longitude intersection points. The geodetic latitude and longitude used to interpolate within the grid are not affected by this transformation.

The grid is referenced to a specific geographic CRS (the source CRS) and interpolation must be made in this system.

Calculation of the separation is achieved through a bi-linear interpolation of the grid, using the latitude and longitude of the point. This step provides the geoid-ellipsoid separation (N) above the ellipsoid of the source Geographic 3D CRS.

Then:
           H = h - N

where h = the height above the ellipsoid in the source geographic 3D CRS
and     H = the geoid height in the target vertical CRS.",(none),,"EPSG guidance note #7-2, http://www.epsg.org",OGP,2009/10/17,2009.081,0
1031,Geocentric translations (geocentric domain),1,"Note: These formulas have been transcribed from EPSG Guidance Note #7-2. Users are encouraged to use that document rather than the text which follows as reference because limitations in the transcription will be avoided.

Xt = Xs + dX;  Yt = Ys + dY;  Zt = Zs + dZ","Given a three parameter datum shift from WGS 84 to ED50 for this North Sea area is given as 
dX = +84.87m, dY = +96.49m, dZ = +116.95m. 

The given WGS 84 geocentric values are:

   XA = 3771 793.97m
   YA =   140 253.34m
   ZA = 5124 304.35m

Applying the three geocentric translations to these source CRS coordinates we obtain new geocentric values now related to the target CRS ED50:

   XB = 3771 878.84m
   YB =   140 349.83m
   ZB = 5124 421.30m",This method allows calculation of geocentric coords in the target system by adding the parameter values to the corresponding coordinates of the point in the source system. See methods 1035 and 9603 for similar tfms operating between other CRSs types.,"EPSG guidance note #7-2, http://www.epsg.org",OGP,2009/11/17,2009.083,0
1032,Coordinate Frame Rotation (geocentric domain),1,"<<<<<This text is continued from the description of the Position Vector Transformation formula>>>>>

Note: These formulas have been transcribed from EPSG Guidance Note #7-2. Users are encouraged to use that document rather than the text which follows as reference because limitations in the transcription will be avoided.

Although being common practice particularly in the European E&P industry, the Position Vector Transformation sign convention is not universally accepted.  A variation on this formula is also used, particularly in the USA E&P industry.  That formula is based on the same definition of translation and scale parameters, but a different definition of the rotation parameters.  The associated convention is known as the ""Coordinate Frame Rotation"" convention. 
The formula is:

   (Xt)             (  1      +Rz      -Ry)     (Xs)      (dX)
   (Yt)  =  M *  ( -Rz       1      +Rx)  * (Ys)  +  (dY)
   (Zt)              ( +Ry   -Rx        1 )     (Zs)       (dZ)

and the parameters are defined as:

(dX, dY, dZ)   : Translation vector, to be added to the point's position vector in the source coordinate reference system in order to transform from source coordinate reference system to target coordinate reference system; also: the coordinates of the origin of source coordinate reference system in the target frame.

(Rx, Ry, Rz)   : Rotations to be applied to the coordinate reference frame.  The sign convention is such that a positive rotation of the frame about an axis is defined as a clockwise rotation of the coordinate reference frame when viewed from the origin of the Cartesian coordinate reference system in the positive direction of that axis, that is a positive rotation about the Z-axis only from source coordinate reference system to target coordinate reference system will result in a smaller longitude value for the point in the target coordinate reference system. Although rotation angles may be quoted in any angular unit of measure, the formula as given here requires the angles to be provided in radians.

M                  : The scale factor to be applied to the position vector in the source coordinate reference system  in order to obtain the correct scale of the target coordinate reference system. M = (1+dS*10^-6), where dS is the scale correction expressed in parts per million.

In the absence of rotations the two formulas are identical; the difference is solely in the rotations. The name of the second method reflects this.

Note that the same rotation that is defined as positive in the first method is consequently negative in the second and vice versa.  It is therefore crucial that the convention underlying the definition of the rotation parameters is clearly understood and is communicated when exchanging datum transformation parameters, so that the parameters may be associated with the correct coordinate transformation method (algorithm).","The same example as for the Position Vector Transformation (coordinate operation method 1033) can be calculated, however the following transformation parameters have to be applied to achieve the same input and output in terms of coordinate values:

Transformation parameters Coordinate Frame Rotation convention:
dX (m) = 0.000 
dY (m) = 0.000 
dZ (m) = +4.5 
RX ("") = 0.000
RY ("") = 0.000
RZ ("") = -0.554 = -0.000002685868 radians
Scale (ppm) = +0.219

Please note that only the rotation has changed sign as compared to the Position Vector Transformation.",Note the analogy with the Position Vector tfm (code 1033) but beware of the differences!  The Position Vector convention is used by IAG and recommended by ISO 19111. See methods 1038 and 9607 for similar tfms operating between other CRSs types.,"EPSG guidance note #7-2, http://www.epsg.org",OGP,2009/11/17,2009.083,0
1033,Position Vector transformation (geocentric domain),1,"Note: These formulas have been transcribed from EPSG Guidance Note #7-2. Users are encouraged to use that document rather than the text which follows as reference because limitations in the transcription will be avoided.

The transformation between source and target CRS geocentric coordinates is usually described as a simplified 7-parameter Helmert transformation, expressed in matrix form with 7 parameters, in what is known as the ""Bursa-Wolf"" formula:

   (Xt)             (  1       -Rz    +Ry)      (Xs)     (dX)
   (Yt)  =  M *  ( +Rz      1      -Rx)  *  (Ys)  + (dY)
   (Zt)              ( -Ry   +Rx       1 )      (Zs)      (dZ)

The parameters are commonly referred to defining the transformation ""from source coordinate reference system to target coordinate reference system"", whereby (Xs, Ys, Zs) are the coordinates of the point in the source geocentric coordinate reference system and (Xt, Yt, Zt) are the coordinates of the point in the target geocentric coordinate reference system.  But that does not define the parameters uniquely; neither is the definition of the parameters implied in the formula, as is often believed.  However, the following definition, which is consistent with the 'Position Vector Transformation' convention is common E&P survey practice, 

(dX, dY, dZ)   :Translation vector, to be added to the point's position vector in the source coordinate reference system in order to transform from source system to target system; also: the coordinates of the origin of the source coordinate reference system in the target coordinate reference system.

(Rx, Ry, Rz)   :Rotations to be applied to the point's vector.  The sign convention is such that a positive rotation about an axis is defined as a clockwise rotation of the position vector when viewed from the origin of the Cartesian coordinate reference system in the positive direction of that axis; e.g. a positive rotation about the Z-axis only from source system to target system will result in a larger longitude value for the point in the target system.  Although rotation angles may be quoted in any angular unit of measure, the formula as given here requires the angles to be provided in radians.

M                  :The scale correction to be made to the position vector in the source coordinate reference system in order to obtain the correct scale in the target coordinate reference system. M = (1 + dS*10^-6), where dS is the scale correction expressed in parts per million. 

<<<<<This text continues in the description of the Coordinate Frame Rotation formula>>>>>","Input point: 
Coordinate reference system: WGS 72  
Cartesian geocentric coords:
    X = 3 657 660.66 (m)  
    Y =    255 768.55 (m)
    Z = 5 201 382.11 (m)

Transformation parameters WGS 72 to WGS 84:
   dX (m) = 0.000 
   dY (m) = 0.000 
   dZ (m) = +4.5
   RX ("") = 0.000 = 0.0 radians
   RY ("") = 0.000 = 0.0 radians
   RZ ("") = +0.554 = 0.000002685868 radians
   Scale (ppm) = +0.219

Application of this 7 parameter Position Vector Transformation results in WGS 84 geocentric coordinates of:
   X = 3 657 660.78 (m)
   Y =    255 778.43 (m)
   Z =  5 201 387.75 (m)",Note the analogy with the Coordinate Frame Rotation (code 1032) but beware of the differences!  The Position Vector convention is used by IAG and recommended by ISO 19111. See methods 1037 and 9606 for similar tfms operating between other CRSs types.,"EPSG guidance note #7-2, http://www.epsg.org",OGP,2009/11/17,2009.083,0
1034,Molodensky-Badekas (geocentric domain),1,"Note: These formulas have been transcribed from EPSG Guidance Note #7-2. Users are encouraged to use that document rather than the text which follows as reference because limitations in the transcription will be avoided.

To eliminate high correlation between the translations and rotations in the derivation of parameter values for the Helmert transformation methods (coordinate operation method codes 1032 and 1033), instead of the rotations being derived about the geocentric coordinate reference system origin they may be derived at a location within the points used in the determination. Three additional parameters, the coordinates of the rotation point, are then required. The formula is:

   (Xt)             (  1       +Rz    -Ry)      (Xs - Xp)      (Xp)       (dX)
   (Yt)  =  M *  ( -Rz      1      +Rx)  *  (Ys - Yp)  +  (Yp)  +  (dY)
   (Zt)              ( +Ry   -Rx       1 )      (Zs - Zp)      (Zp)       (dZ)

and the parameters are defined as:

(dX, dY, dZ)   : Translation vector, to be added to the point's position vector in the source coordinate system in order to transform from source coordinate reference system to target coordinate reference system; also: the coordinates of the origin of source coordinate reference system in the target frame.

(Rx, Ry, Rz)   : Rotations to be applied to the coordinate reference frame.  The sign convention is such that a positive rotation of the frame about an axis is defined as a clockwise rotation of the coordinate reference frame when viewed from the origin of the Cartesian coordinate system in the positive direction of that axis, that is a positive rotation about the Z-axis only from source coordinate reference system to target coordinate reference system will result in a smaller longitude value for the point in the target coordinate reference system. Although rotation angles may be quoted in any angular unit of measure, the formula as given here requires the angles to be provided in radians.

(Xp, Yp, Zp)   : Coordinates of the point about which the coordinate reference frame is rotated, given in the source Cartesian coordinate reference system. 

M                  : The scale factor to be applied to the position vector in the source coordinate reference system  in order to obtain the correct scale of the target coordinate reference system. M = (1+dS*10^-6), where dS is the scale correction expressed in parts per million.

Reversibility.
The Molodensky-Badekas transformation in a strict mathematical sense is not reversible, i.e. in principle the same parameter values cannot be used to execute the reverse transformation. This is because the evaluation point coordinates are in the forward direction source coordinate reference system and the rotations have been derived about this point. They should not be applied about the point having the same coordinate values in the target coordinate reference system, as is required for the reverse transformation. However, in practical application there are exceptions when applied to the approximation of small differences between the geometry of a set of points in two different coordinate reference systems. The typical vector difference in coordinate values is in the order of 6*10^1 to 6*10^2 metres, whereas the evaluation point on or near the surface of the earth is 6.3*10^6 metres from the origin of the coordinate systems at the Earth's centre. This difference of four or five orders of magnitude allows the transformation in practice to be considered reversible. Note that in the reverse transformation, only the signs of the translations and rotation parameter values are reversed; the coordinates of the evaluation point remain unchanged.","Input point: 
Coordinate reference system: La Canoa 

Cartesian geocentric coords:
   XS =  2 550 408.965 m
   YS = -5 749 912.266 m
   ZS =   1 054 891.114 m

Transformation parameters La Canoa to REGVEN:
   dX  = -270.933 m
   dY  = +115.599 m
   dZ  = -360.226 m
   RX   = -5.266 sec = -0.000025530288 radians
   RY  = -1.238 sec = -0.000006001993 radians
   RZ  = +2.381 sec =  0.000011543414 radians
   dS   = -5.109 ppm
   Ordinate 1 of evaluation point  = 2464351.59 m
   Ordinate 2 of evaluation point = -5783466.61 m
   Ordinate 3 of evaluation point =    974809.81 m

Application of the 10 parameter Molodenski-Badekas Transformation results in REGVEN geocentric coordinates of:
   XT =  2 550 138.467 m
   YT = -5 749 799.862 m
   ZT  =  1 054 530.826 m",The Coordinate Frame Rotation is a specific case of the Molodenski-Badekas tfm in which the evaluation point is at the geocentre where geocentric coordinate values are zero. See methods 1039 and 9636 for similar tfms operating between other CRSs types.,"EPSG guidance note #7-2, http://www.epsg.org",OGP,2009/11/17,2009.083,0
1035,Geocentric translations  (geog3D domain),1,"Note: These formulas have been transcribed from EPSG Guidance Note #7-2. Users are encouraged to use that document rather than the text which follows as reference because limitations in the transcription will be avoided.

Transformation of coordinates from one geographic coordinate reference system into another is often carried out as a concatenation of the following operations:

  (geographical to geocentric) + (geocentric to geocentric) + (geocentric to geographic)

The Coordinate Frame Rotation (geog2D domain) transformation has 3 steps:

(i) geographic 3D coordinates are converted to geocentric coordinates using EPSG coordinate operation method code 9602;

(ii) the middle step of the concatenated transformation, from geocentric coordinates to geocentric coordinates, uses the Geocentric translations(geocentric domain) method, EPSG method code 1031;

(iii) finally the geocentric coordinates are converted to geographic 3D using EPSG coordinate operation method code 9602.","(For the geocentric step only). Given a three parameter datum shift from WGS 84 to ED50 for this North Sea area is given as 
dX = +84.87m, dY = +96.49m, dZ = +116.95m. 

The WGS84 geographical coordinates convert to the following WGS 84 geocentric values using 
the above formulas for X, Y, Z:

   XA = 3771 793.97m
   YA =   140 253.34m
   ZA = 5124 304.35m

Applying the given datum shifts to these, we obtain new geocentric values now related 
to ED50:

   XB = 3771 878.84m
   YB =   140 349.83m
   ZB = 5124 421.30m",See methods 1031 and 9603 for similar tfms operating between other CRSs types.,"EPSG guidance note #7-2, http://www.epsg.org",OGP,2009/11/17,2009.083,0
1036,Cartesian Grid Offsets from Form Function,1,See information source. The Cartesian offset to be applied is determined through interpolation within an irregular grid of points at which coordinates in both source and target coordinate reference systems are given. The interpolation uses a finite element method form function procedure. The interpolation uses a finite element method form function procedure described in the Information Source.,,Used in German state of Schleswig-Holstein.,"Zeitschrift fur Vermessungswesen (ZfV, the Journal of the German Association of Surveying) volume 128 of April 2003 pages 244-250 and volume 129 of April 2004 pages 258-260.",OGP,2009/11/14,2009.071,0
1037,Position Vector transformation (geog3D domain),1,"Note: These formulas have been transcribed from EPSG Guidance Note #7-2. Users are encouraged to use that document rather than the text which follows as reference because limitations in the transcription will be avoided.

Transformation of coordinates from one geographic coordinate reference system into another is often carried out as a concatenation of the following operations:

  (geographical to geocentric) + (geocentric to geocentric) + (geocentric to geographic)

The Position Vector(geog3D domain) transformation has 3 steps:

(i) geographic 3D coordinates are converted to geocentric coordinates using EPSG coordinate operation method code 9602;

(ii) the middle step of the concatenated transformation, from geocentric coordinates to geocentric coordinates, uses the Position Vector(geocentric domain) method, EPSG method code 1033;

(iii) finally the geocentric coordinates are converted to geographic 3D using EPSG coordinate operation method code 9602.","Input point: 
Coordinate reference system: WGS 72 (geographic 3D)
  Latitude =   55 deg 00 min 00 sec N
  Longitude =  4 deg 00 min 00 sec E
  Ellipsoidal height hS  =  0 m

This transforms to Cartesian geocentric coords:
    X = 3 657 660.66 (m)  
    Y =    255 768.55 (m)
    Z = 5 201 382.11 (m)

Transformation parameters WGS 72 to WGS 84:
   dX (m) = 0.000 
   dY (m) = 0.000 
   dZ (m) = +4.5
   RX ("") = 0.000 = 0.0 radians
   RY ("") = 0.000 = 0.0 radians
   RZ ("") = +0.554 = 0.000002685868 radians
   Scale (ppm) = +0.219

Application of the 7 parameter Position Vector Transformation results in WGS 84 coordinates of:
   X = 3 657 660.78 (m)
   Y =    255 778.43 (m)
   Z = 5 201 387.75 (m)

This converts into:
   Latitude =   55 deg 00 min 00.090 sec N
   Longitude =  4 deg 00 min 00.554 sec E
   Ellipsoidal height =  +3.22 m
on the WGS 84 geographic 3D coordinate reference system.",Note the analogy with the Coordinate Frame Rotation (code 1038) but beware of the differences!  The Position Vector convention is used by IAG and recommended by ISO 19111. See methods 1033 and 9606 for similar tfms operating between other CRSs types.,"EPSG guidance note #7-2, http://www.epsg.org",OGP,2009/11/17,2009.083,0
1038,Coordinate Frame Rotation (geog3D domain),1,"Note: These formulas have been transcribed from EPSG Guidance Note #7-2. Users are encouraged to use that document rather than the text which follows as reference because limitations in the transcription will be avoided.

Transformation of coordinates from one geographic coordinate reference system into another is often carried out as a concatenation of the following operations:

  (geographical to geocentric) + (geocentric to geocentric) + (geocentric to geographic)

The Coordinate Frame Rotation (geog3D domain) transformation has 3 steps:

(i) geographic 3D coordinates are converted to geocentric coordinates using EPSG coordinate operation method code 9602;

(ii) the middle step of the concatenated transformation, from geocentric coordinates to geocentric coordinates, uses the Coordinate Frame Rotation (geocentric domain) method, EPSG method code 1032;

(iii) finally the geocentric coordinates are converted to geographic 3D using EPSG coordinate operation method code 9602.","The same example as for the Position Vector Transformation (coordinate operation method 1037) can be calculated, however the following transformation parameters have to be applied to achieve the same input and output in terms of coordinate values:

Transformation parameters Coordinate Frame Rotation convention:
dX (m) = 0.000 
dY (m) = 0.000 
dZ (m) = +4.5 
RX ("") = 0.000
RY ("") = 0.000
RZ ("") = -0.554 = -0.000002685868 radians
Scale (ppm) = +0.219

Please note that only the rotation has changed sign as compared to the Position Vector Transformation.",Note the analogy with the Position Vector tfm (code 1037) but beware of the differences!  The Position Vector convention is used by IAG and recommended by ISO 19111. See methods 1032 and 9607 for similar tfms operating between other CRSs types.,"EPSG guidance note #7-2, http://www.epsg.org",OGP,2009/11/17,2009.083,0
1039,Molodensky-Badekas (geog3D domain),1,"Note: These formulas have been transcribed from EPSG Guidance Note #7-2. Users are encouraged to use that document rather than the text which follows as reference because limitations in the transcription will be avoided.

Transformation of coordinates from one geographic coordinate reference system into another is often carried out as a concatenation of the following operations:

  (geographical to geocentric) + (geocentric to geocentric) + (geocentric to geographic)

The Molodensky-Badekas (geog3D domain) transformation has 3 steps:

(i) geographic 3D coordinates are converted to geocentric coordinates using EPSG coordinate operation method code 9602;

(ii) the middle step of the concatenated transformation, from geocentric coordinates to geocentric coordinates, uses the Molodensky-Badekas (geocentric domain) method, EPSG method code 1034;

(iii) finally the geocentric coordinates are converted to geographic 3D using EPSG coordinate operation method code 9602.","Input point: 
Coordinate reference system: La Canoa (geographic 3D)
  Latitude =     9 deg 35 min 00.386 sec N
  Longitude = 66 deg 04 min 48.091 sec W
  Ellipsoidal height hS  =  201.465 m

This transforms to Cartesian geocentric coords:
   XS =  2 550 408.965 m
   YS = -5 749 912.266 m
   ZS =   1 054 891.114 m

Transformation parameters La Canoa to REGVEN:
   dX  = -270.933 m
   dY  = +115.599 m
   dZ  = -360.226 m
   RX   = -5.266 sec = -0.000025530288 radians
   RY  = -1.238 sec = -0.000006001993 radians
   RZ  = +2.381 sec =  0.000011543414 radians
   dS   = -5.109 ppm
   Ordinate 1 of evaluation point  = 2464351.59 m
   Ordinate 2 of evaluation point = -5783466.61 m
   Ordinate 3 of evaluation point =    974809.81 m

Application of the Molodenski-Badekas (geocentric domain) Transformation results in REGVEN geocentric coordinates of:
   XT =  2 550 138.467 m
   YT = -5 749 799.862 m
   ZT  =  1 054 530.826 m

This converts into:
   Latitude =       9 deg 34 min 49.001 sec N
   Longitude =  66 deg 04 min 54.705 sec W
   Ellipsoidal height =  -18.10 m
on the REGVEN geographic 3D coordinate reference system.",See methods 1034 and 9636 for similar tfms operating between other CRSs types.,"EPSG guidance note #7-2, http://www.epsg.org",OGP,2009/11/17,2009.083,0
1040,GNTRANS,1,"GNTRANS is a multistage three-dimensional transformation approach. Starting with a conventional seven-parameter transformation, the next stage functionally models the residuals at identical points using a unique, continuous spline surface. The final stage is a stochastic prediction to describe remaining discrepancies. For application and to improve performance, topocentric coordinate offsets are interpolated from a regular grid derived from the above transformation to determine coordinates of an arbitrary input point in the target system and vice-versa.",,,Geo++.,OGP,2010/03/30,2010.037,0
1041,Krovak (North Orientated),1,"Note: These formulas have been transcribed from EPSG Guidance Note #7-2. Users are encouraged to use that document rather than the text which follows as reference because limitations in the transcription will be avoided.

From the defining parameters the following constants for the projection may be calculated :

A = a(1 - e^2)^0.5 / [1 - e^2 sin^2.(latC)]
B = {1 + [e^2 * cos^4(latC) / (1 - e^2)]}^0.5
gammao = asin[sin(latC) / B]
to = tan(pi/4 + gammao/2).[(1 + e sin(latC)) / (1 - e sin(latC))]^(e.B/2) / [tan(pi/4 + latC/2)]^B
n = sin(latp)
ro = kp.A / tan(latp)

To derive the projected Southing and Westing coordinates of a point with geographical coordinates (lat, lon) the formulas for the Krovak are:

U = 2(atan{to.tan^B(lat/2 + pi/4) / [(1 + e sin(lat)) / (1 - e sin(lat))]^[e.B/2]} - pi/4)
V = B(lonO - lon) where lonO and lon must both be referenced to the same prime meridian.
T = asin[cos(alphaC).sin(U) + sin(alphaC).cos(U). cos(V)]
D = asin[cos(U).sin(V)/cos(T)]
theta = n.D
r = ro.tan^n(pi/4 + latp/2) / tan^n(T/2 + pi/4)
Xp = r.cos(theta)
Yp = r.sin(theta)
Southing = Xp + FN
Westing = Yp + FE

Then Easting = -Westing
     Northing = -Southing

The reverse formulas to derive the latitude and longitude of a point from its Easting and Northing values are:
Southing = -Northing
Westing = -Easting
Xp' = Southing  FN
Yp' = Westing  FE
r' = [(Yp')^2 + (Xp')^2]^(1/2)  
theta' = atan[Yp'/Xp']
D' = theta' / sin(latp)
T' = 2{atan[((ro / r')^(1/n)).tan(pi/4 + latp/2)] - pi/4}
U' = asin[cos(alphaC).sin(T') - sin(alphaC).cos(T').cos(D')]
V' = asin(cos(T').sin(D') / cos(U'))

Then latitude lat is found by iteration using U' as the value for lat(j-1) in the first iteration:
lat(j) = 2*(atan{to^(-1/B) tan^(1/B).(U'/2 + pi/4).[(1 + e sin(lat(j-1)) / (1 - e sin(lat(j-1))]^(e/2)} - pi/4) 

Then
lon = lonO - V' / B where lon is referenced to the same prime meridian as lonO.","For Projected Coordinate Reference System: S-JTSK (Ferro) / Krovak East North

Parameters:
Ellipsoid  Bessel 1841   a = 6377397.155m  1/f = 299.15281
    then    e = 0.081696831        e^2 = 0.006674372

Latitude of projection centre = 49°30'00""N =  0.863937979 rad
Longitude of Origin = 42°30'00""E of Ferro = 0.741764932 rad
Co-latitude of cone axis = 30°17'17.303"" = 0.528627762 rad
Latitude of pseudo standard parallel = 78°30'00""N = 1.370083463 rad
Scale factor on pseudo Standard Parallel (ko) = 0.9999
False Easting = 0.00 m
False Northing = 0.00 m

Calculated projection constants:
A = 6380703.611
B = 1.000597498
gammao = 0.863239103
to = 1.003419164
n = 0.979924705
ro = 1298039.005

Forward calculation for: 
Latitude = 50°12'32.442""N = 0.876312568 rad
Longitude = 34°30'59.179""E of Ferro = 0.602425500 rad

Then the forward calculation first gives

U = 0.875596951
V = 0.139422687
T = 1.386275051
D = 0.506554626
theta = 0.496385392
r = 1194731.005
Xp = 1050538.634
Yp = 568990.995
Southing = 1050538.634
Westing = 568990.995
 
Then 
Easting  (X) =  -568991.00 m
Northing (Y) = -1050538.64 m

Reverse calculation for the same Easting and Northing:

Southing = 1050538.634
Westing = 568990.995
Xp' = 1050538.634
Yp' = 568990.995
r' = 1194731.005
theta' = 0.496385392
D' = 0.506554626
T' = 1.386275051
U' = 0.875596951
V' = 0.139422687
lat(iteration 1) = 0.876310603 
lat(iteration 2) = 0.876312562
lat(iteration 3) = 0.876312568

Latitude = 0.876312568 rad = 50°12'32.442""N
Longitude = 0.60242500 rad = 34°30'59.179""E of Ferro.",,"Land Survey Office (ZU), Prague. www.cuzk.cz/zu",OGP,2010/12/07,2010.071 2010.100,0
1042,Krovak Modified,1,"Note: These formulas have been transcribed from EPSG Guidance Note #7-2. Users are encouraged to use that document rather than the text which follows as reference because limitations in the transcription will be avoided.

From the defining parameters the following constants for the projection may be calculated :

A = a(1 - e^2)^0.5 / [1 - e^2 sin^2.(latC)]
B = {1 + [e^2 * cos^4(latC) / (1 - e^2)]}^0.5
gammao = asin[sin(latC) / B]
to = tan(pi/4 + gammao/2).[(1 + e sin(latC)) / (1 - e sin(latC))]^(e.B/2) / [tan(pi/4 + latC/2)]^B
n = sin(latp)
ro = kp.A / tan(latp)

To derive the projected Southing and Westing coordinates of a point with geographical coordinates (lat, lon) the formulas for the Krovak are:

U = 2(atan{to.tan^B(lat/2 + pi/4) / [(1 + e sin(lat)) / (1 - e sin(lat))]^[e.B/2]} - pi/4)
V = B(lonO - lon) where lonO and lon must both be referenced to the same prime meridian.
T = asin[cos(alphaC).sin(U) + sin(alphaC).cos(U). cos(V)]
D = asin[cos(U).sin(V)/cos(T)]
theta = n.D
r = ro.tan^n(pi/4 + latp/2) / tan^n(T/2 + pi/4)
Xp = r.cos(theta)
Yp = r.sin(theta)
Xr = Xp  Xo
Yr = Yp  Yo
dX = C1 + C3.Xr  C4.Yr  2.C6.Xr.Yr + C5.(Xr^2  Yr^2) + C8.Xr.(Xr^2  3.Yr^2)  C7.Yr.(3.Xr^2  Yr^2)  4.C10.Xr.Yr.(Xr^2  Yr^2) + C9.(Xr^4 + Yr^4  6.Xr^2.Yr^2)
dY = C2 + C3.Yr + C4.Xr + 2.C5.Xr.Yr + C6.(Xr^2  Yr^2) + C7.Xr.(Xr^2  3.Yr^2) C8.Yr.(3.Xr^2  Yr^2) + 4.C9.Xr.Yr.(Xr^2  Yr^2) + C10.(Xr^4 + Yr^4  6.Xr^2.Yr^2)
Southing   X = FN + Xp  dX
Westing    Y = FE + Yp  dY

The reverse formulas to derive the latitude and longitude of a point from its Southing and Westing values are:

Xr' = (Southing  FN)  Xo
Yr' = (Westing  FE)  Yo
dX' = C1 + C3.Xr'  C4.Yr'  2.C6.Xr'.Yr' + C5.(Xr'^2  Yr'^2) + C8.Xr'.(Xr'^2  3.Yr'^2)  C7.Yr'.(3.Xr'^2  Yr'^2)  4.C10.Xr'.Yr'.(Xr'^2  Yr'^2) + C9.(Xr'^4 + Yr'^4  6.Xr'^2.Yr'^2)
dY' = C2 + C3.Yr' + C4.Xr' + 2.C5.Xr'.Yr' + C6.(Xr'^2  Yr'^2) + C7.Xr'.(Xr'^2  3.Yr'^2) 
 C8.Yr'.(3.Xr'^2  Yr'^2) + 4.C9.Xr'.Yr'.(Xr'^2  Yr'^2) + C10.(Xr'^4 + Yr'^4  6.Xr'^2.Yr'^2)
Xp' = (Southing  FN) + dX'
Yp' = (Westing  FE) + dY'
r' = [(Yp')^2 + (Xp')^2]^(1/2)  
theta' = atan[Yp'/Xp']
D' = theta' / sin(latp)
T' = 2{atan[((ro / r')^(1/n)).tan(pi/4 + latp/2)] - pi/4}
U' = asin[cos(alphaC).sin(T') - sin(alphaC).cos(T').cos(D')]
V' = asin(cos(T').sin(D') / cos(U'))

Then latitude lat is found by iteration using U' as the value for lat(j-1) in the first iteration:
lat(j) = 2*(atan{tO^(-1/B) tan^(1/B).(U'/2 + pi/4).[(1 + e sin(lat(j-1)) / (1 - e sin(lat(j-1))]^(e/2)} - pi/4) 

Then
lon = lonO - V' / B where lon is referenced to the same prime meridian as lonO.","For Projected Coordinate Reference System: S-JTSK/05 (Ferro) / Modified Krovak

Parameters:
Ellipsoid  Bessel 1841   a = 6377397.155m  1/f = 299.15281
    then    e = 0.081696831        e^2 = 0.006674372

Latitude of projection centre = 49°30'00""N =  0.863937979 rad
Longitude of Origin = 42°30'00""E of Ferro = 0.741764932 rad
Co-latitude of cone axis = 30°17'17.303"" = 0.528627762 rad
Latitude of pseudo standard parallel = 78°30'00""N 1.370083463 rad
Scale factor on pseudo Standard Parallel (ko) = 0.9999
False Easting = 5000000.00 m
False Northing = 5000000.00 m
Ordinate 1 of evaluation point Xo = 1089000.00 m
Ordinate 2 of evaluation point Yo = 654000.00 m
C1 = 2.946529277E-02
C2 = 2.515965696E-02
C3 = 1.193845912E-07
C4 = -4.668270147E-07
C5 = 9.233980362E-12
C6 = 1.523735715E-12
C7 = 1.696780024E-18
C8 = 4.408314235E-18
C9 = -8.331083518E-24
C10 = -3.689471323E-24

Calculated projection constants:
A = 6380703.611
B = 1.000597498
gammao = 0.863239103
to = 1.003419164
n = 0.979924705
ro = 1298039.005

Forward calculation for: 
Latitude = 50°12'32.442""N = 0.876312568 rad
Longitude = 34°30'59.179""E of Ferro = 0.602425500 rad

U = 0.875596951
V = 0.139422687
S = 1.386275051
D = 0.506554626
theta = 0.496385392
r = 1194731.005
Xp = 1050538.634
Yp = 568990.995
Xr = -38461.366
Yr = -85009.005
dX = -0.075
dY = 0.086
and	
Southing X = 6050538.71 m
Westing	 Y = 5568990.91 m

Reverse calculation for the same Southing and Westing:

Xr' = -38461.291
Yr' = -85009.090
dX' = -0.075
dY' = 0.086
Xp' = 1050538.634
Yp' = 568990.995
r' = 1194731.005
theta' = 0.496385392
D' = 0.506554626
T' = 1.386275051
U' = 0.875596951
V' = 0.139422687
lat(iteration 1) = 0.876310603 
lat(iteration 2) = 0.876312562
lat(iteration 3) = 0.876312568

Latitude = 0.876312568 rad = 50°12'32.442""N
Longitude = 0.294083997 rad = 16°50'59.179""E",Incorporates a polynomial transformation which is defined to be exact and for practical purposes is considered to be a map projection.,"Land Survey Office (ZU), Prague. www.cuzk.cz/zu",OGP,2010/12/07,2010.071 2010.100,0
1043,Krovak Modified (North Orientated),1,"Note: These formulas have been transcribed from EPSG Guidance Note #7-2. Users are encouraged to use that document rather than the text which follows as reference because limitations in the transcription will be avoided.

From the defining parameters the following constants for the projection may be calculated :

A = a(1 - e^2)^0.5 / [1 - e^2 sin^2.(latC)]
B = {1 + [e^2 * cos^4(latC) / (1 - e^2)]}^0.5
gammao = asin[sin(latC) / B]
to = tan(pi/4 + gammao/2).[(1 + e sin(latC)) / (1 - e sin(latC))]^(e.B/2) / [tan(pi/4 + latC/2)]^B
n = sin(latp)
ro = kp.A / tan(latp)

To derive the projected Southing and Westing coordinates of a point with geographical coordinates (lat, lon) the formulas for the Krovak are:

U = 2(atan{to.tan^B(lat/2 + pi/4) / [(1 + e sin(lat)) / (1 - e sin(lat))]^[e.B/2]} - pi/4)
V = B(lonO - lon) where lonO and lon must both be referenced to the same prime meridian.
T = asin[cos(alphaC).sin(U) + sin(alphaC).cos(U). cos(V)]
D = asin[cos(U).sin(V)/cos(T)]
theta = n.D
r = ro.tan^n(pi/4 + latp/2) / tan^n(T/2 + pi/4)
Xp = r.cos(theta)
Yp = r.sin(theta)
Xr = Xp  Xo
Yr = Yp  Yo
dX = C1 + C3.Xr  C4.Yr  2.C6.Xr.Yr + C5.(Xr^2  Yr^2) + C8.Xr.(Xr^2  3.Yr^2)  C7.Yr.(3.Xr^2  Yr^2)  4.C10.Xr.Yr.(Xr^2  Yr^2) + C9.(Xr^4 + Yr^4  6.Xr^2.Yr^2)
dY = C2 + C3.Yr + C4.Xr + 2.C5.Xr.Yr + C6.(Xr^2  Yr^2) + C7.Xr.(Xr^2  3.Yr^2) C8.Yr.(3.Xr^2  Yr^2) + 4.C9.Xr.Yr.(Xr^2  Yr^2) + C10.(Xr^4 + Yr^4  6.Xr^2.Yr^2)
Southing = FN + Xp  dX
Westing = FE + Yp  dY
Easting = -(Westing)
Northing = -(Southing)

The reverse formulas to derive the latitude and longitude of a point from its Easting and Northing values are:
Southing = -(Northing)
Westing = -(Easting)

Xr' = (Southing - FN)  Xo
Yr' = (Westing - FE)  Yo
dX' = C1 + C3.Xr'  C4.Yr'  2.C6.Xr'.Yr' + C5.(Xr'^2  Yr'^2) + C8.Xr'.(Xr'^2  3.Yr'^2)  C7.Yr'.(3.Xr'^2  Yr'^2)  4.C10.Xr'.Yr'.(Xr'^2  Yr'^2) + C9.(Xr'^4 + Yr'^4  6.Xr'^2.Yr'^2)
dY' = C2 + C3.Yr' + C4.Xr' + 2.C5.Xr'.Yr' + C6.(Xr'^2  Yr'^2) + C7.Xr'.(Xr'^2  3.Yr'^2) 
 C8.Yr'.(3.Xr'^2  Yr'^2) + 4.C9.Xr'.Yr'.(Xr'^2  Yr'^2) + C10.(Xr'^4 + Yr'^4  6.Xr'^2.Yr'^2)
Xp' = (Southing - FN) + dX'
Yp' = (Westing - FE) + dY'
r' = [(Yp')^2 + (Xp')^2]^(1/2)  
theta' = atan[Yp'/Xp']
D' = theta' / sin(latp)
T' = 2{atan[((ro / r')^(1/n)).tan(pi/4 + latp/2)] - pi/4}
U' = asin[cos(alphaC).sin(T') - sin(alphaC).cos(T').cos(D')]
V' = asin(cos(T').sin(D') / cos(U'))

Then latitude lat is found by iteration using U' as the value for lat(j-1) in the first iteration:
lat(j) = 2*(atan{tO^(-1/B) tan^(1/B).(U'/2 + pi/4).[(1 + e sin(lat(j-1)) / (1 - e sin(lat(j-1))]^(e/2)} - pi/4) 

Then
lon = lonO - V' / B where lon is referenced to the same prime meridian as lonO.","For Projected Coordinate Reference System: S-JTSK (Ferro) / Modified Krovak

Parameters:
Ellipsoid  Bessel 1841   a = 6377397.155m  1/f = 299.15281
    then    e = 0.081696831        e^2 = 0.006674372

Latitude of projection centre = 49°30'00""N =  0.863937979 rad
Longitude of Origin = 42°30'00""E of Ferro = 0.741764932 rad
Co-latitude of cone axis = 30°17'17.303"" = 0.528627762 rad
Latitude of pseudo standard parallel = 78°30'00""N = 1.370083463 rad
Scale factor on pseudo Standard Parallel (ko) = 0.9999
False Easting = 0.00 m
False Northing = 0.00 m
Ordinate 1 of evaluation point Xo = 1089000.00 m
Ordinate 2 of evaluation point Yo = 654000.00 m
C1 = 2.946529277E-02
C2 = 2.515965696E-02
C3 = 1.193845912E-07
C4 = -4.668270147E-07
C5 = 9.233980362E-12
C6 = 1.523735715E-12
C7 = 1.696780024E-18
C8 = 4.408314235E-18
C9 = -8.331083518E-24
C10 = -3.689471323E-24

Calculated projection constants:
A = 6380703.611
B = 1.000597498
gammao = 0.863239103
to = 1.003419164
n = 0.979924705
ro = 1298039.005

Forward calculation for: 
Latitude = 50°12'32.442""N = 0.876312568 rad
Longitude = 34°30'59.1790""E of Ferro = 0.602425500 rad

Then the forward calculation first gives

U = 0.875596951
V = 0.139422687
T = 1.386275051
D = 0.506554626
theta = 0.496385392
r = 1194731.005
Xp = 1050538.634
Yp = 568990.995
Xr = -38461.366
Yr = -85009.005
dX = -0.075
dY = 0.086
Southing = 6050538.71 m
Westing	= 5568990.91 m
and then
Easting	X = -5568990.91 m
Northing Y = -6050538.71 m

Reverse calculation for the same Easting and Northing:
Southing = 6050538.71 m
Westing	= 5568990.91 m
Xr' = -38461.290
Yr' = -85009.090
dX' = -0.075
dY' = 0.086
Xp' = 1050538.634
Yp' = 568990.995
r' = 1194731.005
theta' = 0.496385392
D' = 0.506554626
T' = 1.386275051
U' = 0.875596951
V' = 0.139422687
lat(iteration 1) = 0.876310603 
lat(iteration 2) = 0.876312562
lat(iteration 3) = 0.876312568

Latitude = 0.876312568 rad = 50°12'32.442""N
Longitude = 0.602425500 rad = 34°30'59.179""E of Ferro.",Incorporates a polynomial transformation which is defined to be exact and for practical purposes is considered to be a map projection.,"Land Survey Office (ZU), Prague. www.cuzk.cz/zu",OGP,2010/12/07,2010.071 2010.100,0
1044,Mercator (variant C),1,"Note: These formulas have been transcribed from EPSG Guidance Note #7-2. Users are encouraged to use that document rather than the text which follows as reference because limitations in the transcription will be avoided.

The formulas to derive projected Easting and Northing coordinates are:

ko = cos(latSP1)/(1 - e^2*sin^2(latSP1))^0.5 
 
where latSP1 is the absolute value of the first standard parallel (i.e. positive).  

E = FE + a*ko(lon - lonF)             
M = a ko ln{tan(pi/4 + latF/2)[(1  e sin(latF))/(1 + e sin(latF))]^(e/2)}
N = (NF  M) + a ko ln{tan(pi/4 + lat/2)[(1  e sin(lat))/(1 + e sin(lat))]^(e/2)}
where logarithms are natural.

The reverse formulas to derive latitude and longitude from E and N values are:

lat = chi + (esq/2 + 5e^4/24 + e^6/12 + 13e^8/360) sin(2chi) 
+ (7e^4/48 + 29e^6/240 + 811e^8/11520) sin(4chi)
+ (7e^6/120 +  81e^8/1120) sin(6chi)  + (4279e^8/161280) sin(8chi)

where chi = pi/2 - 2 arctan t
t = B^((NF-M-N)/a*ko) 
B = base of the natural logarithm, 2.7182818...
and ko is calculated as for the forward transformation above.
lon  =  ((E - EF)/a*ko) + lonF","Parameters:
Ellipsoid  Krassowsky 1940   a = 6378245.00m   1/f = 298.300
then e = 0.08181333 and e^2 = 0.00669342

Latitude first SP = 42°00'00""N = 0.73303829 rad
Longitude of natural origin = 51°00'00""E = 0.89011792 rad
Latitude of false origin = 42°00'00""N = 0.73303829 rad
Eastings at false origin EF = 0.00 m
Northing at false origin NF = 0.00 m
  
Forward calculation for: 
Latitude = 53°00'00.00""N = 0.9250245 rad
Longitude = 53°00'00.00""E = 0.9250245 rad

ko = 0.744260894
M = 3819897.85
Easting E = 165704.29 m
Northing N = 1351950.22 m

Reverse calculation for same easting and northing first gives :
t = 0.336391288
chi = 0.921795958
Latitude = 53°00'00.000""N
Longitude = 53°00'00.000""E",,"EPSG guidance note #7-2, http://www.epsg.org",OGP,2010/12/08,2010.058 2010.103,0
1045,Geographic3D to GravityRelatedHeight (OSGM02-Ire),0,"This transformation involves the application of a height difference interpolated from a height correction model. The model provides height difference values at the nodes on a regular grid of latitude and longitude intersection points. The geodetic latitude and longitude used to interpolate within the grid are not affected by this transformation.

The grid is referenced to a specific geographic CRS (the source CRS) and interpolation must be made in this system.

Calculation of the height difference is achieved through a bi-linear interpolation of the grid, using the latitude and longitude of the point. This step provides the height correction (C) of the target datum above the ellipsoid of the source Geographic 3D CRS. C differs from the geoid-ellipsoid separation N because a vertical datum is a realisation of the geoid surface, not the geoid itself.

Then:
           H = h - C

where h = the height above the ellipsoid in the source geographic 3D CRS
and     H = the gravity-related height in the target vertical CRS.",(none),Transformation of the vertical component of a Geographic 3D CRS to a Vertical CRS.,"EPSG guidance note #7-2, http://www.epsg.org",OGP,2011/01/14,2010.104,0
9601,Longitude rotation,1,Target_longitude = Source_longitude + longitude_offset.,(none),This transformation allows calculation of the longitude of a point in the target system by adding the parameter value to the longitude value of the point in the source system.,"EPSG guidance note #7-2, http://www.epsg.org",OGP,1999/11/12,1999.790,0
9602,Geographic/geocentric conversions,1,"Note: These formulas have been transcribed from EPSG Guidance Note #7-2. Users are encouraged to use that document rather than the text which follows as reference because limitations in the transcription will be avoided.

Latitude, P, and Longitude, L, in terms of Geographic Coordinate Reference System A may 
be expressed in terms of a geocentric (earth centred) Cartesian coordinate reference system X, Y, Z 
with the Z axis corresponding with the Polar axis positive northwards, the X axis through 
the intersection of the Greenwich meridian and equator, and the Y axis through the 
intersection of the equator with longitude 90 degrees E. If the prime meridian for geogCRS A is not 
Greewich, longitudes must first be transformed to their Greenwich equivalent. If the earth's 
spheroidal semi major axis is a, semi minor axis  b, and inverse flattening 1/f,  then

   X =   (nu + h) cos P cos L
   Y =   (nu + h) cos P sin L
   Z =  ((1 - e^2) nu + h) sin P

where nu is the prime vertical radius of curvature at latitude P and is equal to 
   nu = a /(1 - e^2*sin^2(P))^0.5,
   P and L are respectively the latitude and longitude (related to Greenwich) of the point 
   h is height above the ellipsoid, (topographic height plus geoidal height), and
   e is the eccentricity of the ellipsoid where e^2 = (a^2 -b^2)/a^2 = 2f -f^2
                                                                                                                                                 
Cartesian coordinates in geocentric coordinate reference system B may be used to derive geographical coordinates in terms of geographic coordinate reference system B by:
           
P = atan[(Z + eta b sin^3 q) / (p  e^2 a cos^3 q)]
L  = atan (Y/X)

where
eta = e^2 / (1  e^2)
b = a(1  f)
p = (X^2 + Y^2)^0.5
q = atan[(Z a) / (p b)]

and where L is relative to Greenwich. If the geographic system has a non Greenwich prime meridian, the Greenwich value of the local prime meridian should be applied to longitude.

Then
  	h (p / cos P)  nu

(Note that h is the height above the ellipsoid. This is the height value which is delivered by Transit and GPS satellite observations but is not the topographic height value which is normally used for national mapping and levelling operations. The topographic height is usually the height above mean sea level or an alternative 
level reference for the country. If one starts with a topographic height,  it will be necessary to convert it to an ellipsoid height before using the above transformation formulas. h = N + H, where N is the geoid height above the ellipsoid at the point and is sometimes negative, and H is the height of the point above the geoid. The height above the geoid is often taken to be that above mean sea level, perhaps with a constant correction applied. Geoid heights of points above the nationally used ellipsoid may not be readily available. For the WGS84 ellipsoid the value of N, 
representing the height of the geoid relative to the ellipsoid, can vary between values of -100m in the Sri Lanka area to +80m in the North Atlantic.)","Consider a North Sea point with coordinates derived by GPS satellite in the WGS 84 geographical coordinate system with coordinates of:

           latitude    53 deg 48 min 33.82 sec N, 
           longitude 02 deg 07 min 46.38 sec E, 
    and ellipsoidal height 73.0m, 

whose coordinates are required in terms of the ED50 geographical coordinate system which takes the International 1924 ellipsoid. The three parameter datum shift from WGS 84 to ED50 for this North Sea area is given as dX = +84.87m, dY = +96.49m, dZ = +116.95m. 

The WGS 84 geographical coordinates convert to the following geocentric values using the above formulas for X, Y, Z:

   XA = 3771 793.97m
   YA =   140 253.34m
   ZA = 5124 304.35m

Applying the quoted datum shifts to these, we obtain new geocentric values now related to ED50:

   XB = 3771 878.84m
   YB =   140 349.83m
   ZB = 5124 421.30m

These convert to ED50 values on the International 1924 ellipsoid as:
           latitude    53 deg 48 min 36.565 sec N, 
           longitude 02 deg 07 min 51.477 sec E, 
    and ellipsoidal height 28.02 m, 

Note that the derived height is referred to the International 1924 ellipsoidal surface and will need a further correction for the height of the geoid at this point in order to relate it to Mean Sea Level.","This is a parameter-less conversion. In applications it is often concatenated with the 3- 7- or 10-parameter transformations 9603, 9606, 9607 or 9636 to form a geographic to geographic transformation.","EPSG guidance note #7-2, http://www.epsg.org, from ""Datums and Map Projections""; Iliffe and Lott (2007).",OGP,2007/11/01,1997.290 2002.510 2004.330 2007.058,0
9603,Geocentric translations (geog2D domain),1,"Note: These formulas have been transcribed from EPSG Guidance Note #7-2. Users are encouraged to use that document rather than the text which follows as reference because limitations in the transcription will be avoided.

Transformation of coordinates from one geographic coordinate reference system into another is often carried out as a concatenation of the following operations:

  (geographical to geocentric) + (geocentric to geocentric) + (geocentric to geographic)

The Coordinate Frame Rotation (geog2D domain) transformation has 5 steps:

(i) geographic 2D coordinates are converted to 3D using EPSG coordinate operation method code 9659;

(ii) geographic 3D coordinates are converted to geocentric coordinates using EPSG coordinate operation method code 9602;

(iii) the middle step of the concatenated transformation, from geocentric coordinates to geocentric coordinates, uses the Geocentric translations(geocentric domain) method, EPSG method code 1031;

(iv) the geocentric coordinates are converted to geographic 3D using EPSG coordinate operation method code 9602;
 
(v) finally the geographic 3D coordinates are converted to geographic 2D using EPSG coordinate operation method code 9659.","(For the geocentric step only). Given a three parameter datum shift from WGS 84 to ED50 for this North Sea area is given as 
dX = +84.87m, dY = +96.49m, dZ = +116.95m. 

The WGS84 geographical coordinates convert to the following WGS 84 geocentric values using 
the above formulas for X, Y, Z:

   XA = 3771 793.97m
   YA =   140 253.34m
   ZA = 5124 304.35m

Applying the given datum shifts to these, we obtain new geocentric values now related 
to ED50:

   XB = 3771 878.84m
   YB =   140 349.83m
   ZB = 5124 421.30m",See methods 1031 and 1035 for similar tfms operating between other CRSs types.,"EPSG guidance note #7-2, http://www.epsg.org",OGP,2009/11/24,2009.083,0
9604,Molodensky,1,See information source.,(none),See Abridged Molodensky.,"EPSG guidance note #7-2, http://www.epsg.org",OGP,2004/08/25,2004.470,0
9605,Abridged Molodensky,1,"Note: These formulas have been transcribed from EPSG Guidance Note #7-2. Users are encouraged to use that document rather than the text which follows as reference because limitations in the transcription will be avoided.

As an alternative to the computation of the new latitude, longitude and height above ellipsoid in discrete steps through geocentric coordinates, the changes in these geographic coordinates may be derived directly by formulas derived by Molodenski. Abridged versions of these formulas, which are quite satisfactory for three parameter transformations, are as follows:

dlat "" = [(-dX*sin(lat)*cos(lon)) - (dY*sin(lat)*sin(lon)) + (dZ*cos(lat)) + (((a*Df) + (f*Da))*sin(2*lat))] / (rho * sin(1""))

dlon "" = (-dX*sin(lon) + dY*cos(lon)) / ((nu*cos(lat)) * sin(1""))

dh = (dX*cos(lat)*cos(lon)) + (dY*cos(lat)*sin(lon)) + (dZ*sin(lat)) + ((a*Df + f*Da)*(sin(lat)^2)) - da

where the dX, dY and dZ terms are the geocentric translation parameters, and rho and nu are the meridian and prime vertical radii of curvature at the given latitude (lat) on the first ellipsoid, da is the difference in the semi-major axes (a1 - a2) of the first and second ellipsoids and df  is the difference in the flattening of the two ellipsoids.

The formulas for dlat and dlon indicate changes in latitude and longitude in arc-seconds.","For a North Sea point with coordinates derived by GPS satellite in the WGS84 geographical coordinate reference system, with coordinates of:
           latitude lat_s                =53°48'33.82""N, 
           longitude lon_s             = 2°07'46.38""E, 
    and ellipsoidal height h_s = 73.0m, 

whose coordinates are required in terms of the ED50 geographical coordinate reference system which takes the International 1924 ellipsoid. 

The three geocentric translations parameter values from WGS84 to ED50 for this North Sea area are given as dX = +84.87m, dY = +96.49m, dZ = +116.95m. 
Ellipsoid Parameters are:
WGS 84               a = 6378137.0 metres    1/f = 298.2572236
International 1924  a = 6378388.0 metres    1/f = 297.0

Then
da = 6378388  6378137 = 251
df = 0.003367003 - 0.003352811  = 1.41927E-05
whence
dlat  = 2.543""
dlon  = 5.097""
dh   =   44.909 m

ED50 values on the International 1924 ellipsoid are then:
           latitude lat_t                 = 53°48'36.563""N, 
           longitude  lon_t             =  2°07'51.477""E, 
    and ellipsoidal height h_t  = 28.091 m.","This transformation is a truncated Taylor series expansion of a transformation between two geographic coordinate systems, modelled as a set of geocentric translations.","EPSG guidance note #7-2, http://www.epsg.org",OGP,2006/06/12,1999.010 2004.470 2006.420,0
9606,Position Vector transformation (geog2D domain),1,"Note: These formulas have been transcribed from EPSG Guidance Note #7-2. Users are encouraged to use that document rather than the text which follows as reference because limitations in the transcription will be avoided.

Transformation of coordinates from one geographic coordinate reference system into another is often carried out as a concatenation of the following operations:

  (geographical to geocentric) + (geocentric to geocentric) + (geocentric to geographic)

The Coordinate Frame Rotation (geog2D domain) transformation has 5 steps:

(i) geographic 2D coordinates are converted to 3D using EPSG coordinate operation method code 9659;

(ii) geographic 3D coordinates are converted to geocentric coordinates using EPSG coordinate operation method code 9602;

(iii) the middle step of the concatenated transformation, from geocentric coordinates to geocentric coordinates, uses the Position Vector(geocentric domain) method, EPSG method code 1033;

(iv) the geocentric coordinates are converted to geographic 3D using EPSG coordinate operation method code 9602;
 
(v) finally the geographic 3D coordinates are converted to geographic 2D using EPSG coordinate operation method code 9659.","Input point: 
Coordinate reference system: WGS 72 (geographic 2D)
  Latitude =   55 deg 00 min 00 sec N
  Longitude =  4 deg 00 min 00 sec E
  
This is taken to be geographic 3D with an assumed Ellipsoidal height hS  =  0 m

This transforms to Cartesian geocentric coords:
    X = 3 657 660.66 (m)  
    Y =    255 768.55 (m)
    Z = 5 201 382.11 (m)

Transformation parameters WGS 72 to WGS 84:
   dX (m) = 0.000 
   dY (m) = 0.000 
   dZ (m) = +4.5
   RX ("") = 0.000 = 0.0 radians
   RY ("") = 0.000 = 0.0 radians
   RZ ("") = +0.554 = 0.000002685868 radians
   Scale (ppm) = +0.219

Application of the 7 parameter Position Vector Transformation results in WGS 84 coordinates of:
   X = 3 657 660.78 (m)
   Y =    255 778.43 (m)
   Z = 5 201 387.75 (m)

This converts into:
   Latitude =   55 deg 00 min 00.090 sec N
   Longitude =  4 deg 00 min 00.554 sec E
   Ellipsoidal height =  +3.22 m
on the WGS 84 geographic 3D coordinate reference system. For the 2D equivalent the height is ignored.",Note the analogy with the Coordinate Frame Rotation (code 9607) but beware of the differences!  The Position Vector convention is used by IAG and recommended by ISO 19111. See methods 1033 and 1037 for similar tfms operating between other CRSs types.,"EPSG guidance note #7-2, http://www.epsg.org",OGP,2009/11/24,1998.160 2009.083,0
9607,Coordinate Frame Rotation (geog2D domain),1,"Note: These formulas have been transcribed from EPSG Guidance Note #7-2. Users are encouraged to use that document rather than the text which follows as reference because limitations in the transcription will be avoided.

Transformation of coordinates from one geographic coordinate reference system into another is often carried out as a concatenation of the following operations:

  (geographical to geocentric) + (geocentric to geocentric) + (geocentric to geographic)

The Coordinate Frame Rotation (geog2D domain) transformation has 5 steps:

(i) geographic 2D coordinates are converted to 3D using EPSG coordinate operation method code 9659;

(ii) geographic 3D coordinates are converted to geocentric coordinates using EPSG coordinate operation method code 9602;

(iii) the middle step of the concatenated transformation, from geocentric coordinates to geocentric coordinates, uses the Coordinate Frame Rotation (geocentric domain) method, EPSG method code 1032;

(iv) the geocentric coordinates are converted to geographic 3D using EPSG coordinate operation method code 9602;
 
(v) finally the geographic 3D coordinates are converted to geographic 2D using EPSG coordinate operation method code 9659.","The same example as for the Position Vector Transformation (coordinate operation method 1033) can be calculated, however the following transformation parameters have to be applied to achieve the same input and output in terms of coordinate values:

Transformation parameters Coordinate Frame Rotation convention:
dX (m) = 0.000 
dY (m) = 0.000 
dZ (m) = +4.5 
RX ("") = 0.000
RY ("") = 0.000
RZ ("") = -0.554 = -0.000002685868 radians
Scale (ppm) = +0.219

Please note that only the rotation has changed sign as compared to the Position Vector Transformation.",Note the analogy with the Position Vector tfm (code 9606) but beware of the differences!  The Position Vector convention is used by IAG and recommended by ISO 19111. See methods 1032 and 1038 for similar tfms operating between other CRSs types.,"EPSG guidance note #7-2, http://www.epsg.org",OGP,2009/11/24,2004.141 2009.083,0
9613,NADCON,1,"The latitude and longitude offsets at a point are derived by interpolation within the gridded data. Separate grid files are given for latitude and longitude offsets. The grid file format is given in documentation available from the information source. Bi-linear interpolation is used to derive the offset values. For the forward calculation the interpolated value of the offset is then added to the source CRS coordinate value to give the coordinates in the target CRS.

Reversibility
Iteration is required for the reverse transformation. The coordinate reference system for the coordinates of the grid nodes is the source coordinate reference system for the forward transformation. Then in forward transformations the offset is obtained through straightforward interpolation of the grid file. But for the reverse transformation the first grid interpolation entry will be the value of the point in the second coordinate reference system, the offsets are interpolated and applied with sign reversed, and the result used in further iterations of interpolation and application of offset until the difference between results from successive iterations is insignificant.",(none),Geodetic transformation operating on geographic coordinate differences by bi-linear interpolation.  Input expects longitudes to be positive west.,US Coast and geodetic Survey - http://www.ngs.noaa.gov,OGP,2008/04/11,2004.190 2008.027,0
9614,NTv1,1,"The latitude and longitude offsets at a point are derived by interpolation within the gridded data. One grid file contains both latitude and longitude offsets. The grid file format is given in documentation available from the information source. Bi-linear interpolation is used to derive the offset values. For the forward calculation the interpolated value of the offset is then added to the source CRS coordinate value to give the coordinates in the target CRS.

Reversibility
Iteration is required for the reverse transformation. The coordinate reference system for the coordinates of the grid nodes is the source coordinate reference system for the forward transformation. Then in forward transformations the offset is obtained through straightforward interpolation of the grid file. But for the reverse transformation the first grid interpolation entry will be the value of the point in the second coordinate reference system, the offsets are interpolated and applied with sign reversed, and the result used in further iterations of interpolation and application of offset until the difference between results from successive iterations is insignificant.",(none),Geodetic transformation operating on geographic coordinate differences by bi-linear interpolation. Superseded in 1997 by NTv2 (transformation method code 9615).  Input expects longitudes to be positive west.,Geomatics Canada - Geodetic Survey Division.,OGP,2008/04/11,2004.190 2008.027,0
9615,NTv2,1,"The latitude and longitude offsets at a point are derived by interpolation within the gridded data. One grid file contains both latitude and longitude offsets. The grid file format is given in documentation available from the information source. Bi-linear interpolation is used to derive the offset values. For the forward calculation the interpolated value of the offset is then added to the source CRS coordinate value to give the coordinates in the target CRS.

Reversibility
Iteration is required for the reverse transformation. The coordinate reference system for the coordinates of the grid nodes is the source coordinate reference system for the forward transformation. Then in forward transformations the offset is obtained through straightforward interpolation of the grid file. But for the reverse transformation the first grid interpolation entry will be the value of the point in the second coordinate reference system, the offsets are interpolated and applied with sign reversed, and the result used in further iterations of interpolation and application of offset until the difference between results from successive iterations is insignificant.",(none),Geodetic transformation operating on geographic coordinate differences by bi-linear interpolation.  Supersedes  NTv1 (transformation method code 9614).  Input expects longitudes to be positive west.,"Geomatics Canada - Geodetic Survey Division, http://www.geod.nrcan.gc.ca/.  Also GDAit software documentation from University of Melbourne Geomatics Department, http://www.sli.unimelb.edu.au/gda94/.",OGP,2008/04/11,2004.190 2008.027,0
9616,Vertical Offset,1,"Note: These formulas have been transcribed from EPSG Guidance Note #7-2. Users are encouraged to use that document rather than the text which follows as reference because limitations in the transcription will be avoided.

A vertical offset allows calculation of coordinates in the target vertical coordinate reference system by adding a correction parameter A to the coordinate values of the point in the source system:
X2 = X1 + A1>2
where
X2 = value in the forward target vertical coordinate reference system.
X1 = value in the forward source vertical coordinate reference system.
A1>2 is the offset to be applied for the transformation from CRS 1 to CRS 2. Its value for the forward calculation is the value of the origin of the source CRS 1 in the target CRS 2.

For the reverse transformation from CRS 2 to CRS 1 the same formula is used but with the sign of the offset A1>2 reversed:
	X1 = X2 + (A1>2)

Change of axis direction
The above formulas apply only when the positive direction of the axis of each CRS is the same. If there is a requirement to transform heights in the source CRS to depths in the target CRS or to transform depths in the source CRS to heights in the target CRS, the formulas must be modified to:
for the forward transformation:       X2 = mX1 + A1>2
for the reverse transformation:        X1 = m[X2 + (A1>2)]
where m is a direction modifier,
m = p1 * p2 
and
	p1 indicates the positive direction of the CRS 1 axis; p1 = +1 if up, -1 if down;.
	p2 indicates the positive direction of the CRS 2 axis; p2 = +1 if up, -1 if down
These modified formulas remain valid whether or not there is a change in axis direction.

Change of unit
A further modification allows for source CRS axis, target CRS axis or offset to be in different units giving the general formulas:
for the forward transformation:       X2 = {(p1 * p2) * (X1 * U1) + (A1>2 * UA)} / U2
for the reverse transformation:        X1 = {(p1 * p2) * [(X2 * U2) + (A1>2 * UA)]} / U1

where U1 U2 and UA are unit conversion ratios for the two systems and the offset value respectively. U = [(factor b) / (factor c)] from the EPSG Dataset Unit of Measure table, populated with respect to the linear base unit, metre. U has a value of 0.3048 for the international foot.",(none),This transformation allows calculation of height (or depth) in the target system by adding the parameter value to the height (or depth)-value of the point in the source system.,"EPSG guidance note #7-2, http://www.epsg.org",OGP,2008/04/11,1999.790 2008.010,0
9617,Madrid to ED50 polynomial,0,"Note: These formulas have been transcribed from EPSG Guidance Note #7-2. Users are encouraged to use that document rather than the text which follows as reference because limitations in the transcription will be avoided.

The polynomial expressions are:

      dLat seconds = A0 + (A1*lat) + (A2*lon) + (A3*H)
      dLon seconds = B00 + B0 + (B1*lat) + (B2*lon) + (B3*H)

where latitude lat and longitude lon are in decimal degrees referred to the Madrid 1870 (Madrid) geographic coordinate reference system and H is gravity-related height in metres.  B00 is the longitude (in seconds) of the Madrid meridian measured from the Greenwich meridian; it is the value to be applied to a longitude relative to the Madrid meridian to transform it to a longitude relative to the Greenwich meridan.

The results of these expressions are applied through the formulae:
Lat(ED50) = Lat(M1870(M))  + dLat
and Lon(ED50) = Lon(M1870(M))  + dLon.","Input point coordinate system: Madrid 1870 (Madrid) (geographic 3D)
   Latitude    =  42 deg 38 min 52.77 sec N 
                    = 42.647992 degrees
   Longitude  =    3 deg 39 min 34.57 sec E of Madrid
                     = +3.659603 degrees from the Madrid meridian.
   Height        =  0 m

For the north zone transformation:
A0 = 11.328779
A1 = -0.1674
A2 = -0.03852
A3 = 0.0000379
B00 = -13276.58
B0 = 2.5079425
B1 = 0.08352
B2 = -0.00864
B3 = -0.0000038

dLat = +4.05 seconds

Then ED50 latitude = 42 deg 38 min 52.77 sec N + 4.05sec = 42 deg 38 min 56.82 sec N


dLon = -13270.54 seconds  = -3 deg 41 min 10.54 sec

Then ED50 longitude = 3 deg 39 min 34.57 sec E - 3 deg 41 min 10.54 sec = 0 deg 01 min 35.97 sec W of Greenwich.",,"EPSG guidance note #7-2, http://www.epsg.org, after Institut de Geomatica; Barcelona.",OGP,2011/07/10,1999.284 1999.820 1999.640 2006.910 2011.003 2011.057,0
9618,Geographic2D with Height Offsets,1,"Note: These formulas have been transcribed from EPSG Guidance Note #7-2. Users are encouraged to use that document rather than the text which follows as reference because limitations in the transcription will be avoided.

Lat_T = Lat_S + latitude_offset 
Lon_T = Lon_S + longitude_offset 
EllipsoidHeight_T = GravityHeight_S + gravity-related_to_ellipsoid_height_offset.",(none),This transformation allows calculation of coordinates in the target system by adding the parameter value to the coordinate values of the point in the source system.,"EPSG guidance note #7-2, http://www.epsg.org",OGP,2004/04/27,1999.790 2004.330,0
9619,Geographic2D offsets,1,"Note: These formulas have been transcribed from EPSG Guidance Note #7-2. Users are encouraged to use that document rather than the text which follows as reference because limitations in the transcription will be avoided.

Lat_T = Lat_S + latitude_offset 
Lon_T = Lon_S + longitude_offset.","A position with coordinates of 38°08'36.565""N, 23°48'16.235""E referenced to the old Greek geographic 2D coordinate reference system (EPSG CRS code 4120) is to be transformed to the newer GGRS87 system (EPSG CRS code 4121). Transformation parameters from Greek to GGRS87 are:
dLat	=	-5.86""
dLon	=	+0.28""

Then Lat(GGRS87) 	 =	38°08'3656 5"" N		(5.8 6"")	 =	38°08'30.705""N
and Lon(GGRS87) 	=	23°48'16.23  5""E	+	0. 28""	 =	23°48'16.515""E

For the reverse transformation for the same point, 
Lat(GREEK) 	 =	38°08'30.705  "" N	+	5. 86""  	 =	38°08'36.565""N
Lon(GREEK) 	 =	23°48'16.515"" E 	 +	(-0. 28 "")	 =	23°48'16.235""E",This transformation allows calculation of coordinates in the target system by adding the parameter value to the coordinate values of the point in the source system.,"EPSG guidance note #7-2, http://www.epsg.org",OGP,2004/04/27,1999.790 2004.330,0
9620,Norway Offshore Interpolation,0,See information source.,(none),"Although in principle this method is not reversible, in practice reversibility is better than 10 cm. For the applications for which it was designed it may be considered reversible.","Norwegian Mapping Authority note of 13-Feb-1991 ""Om Transformasjon mellom Geodetiske Datum i Norge"".",OGP,2005/05/21,2005.230,0
9621,Similarity transformation,1,"Note: These formulas have been transcribed from EPSG Guidance Note #7-2. Users are encouraged to use that document rather than the text which follows as reference because limitations in the transcription will be avoided.

The similarity transformation in algebraic form is:

XT = XT0  + XS * M * cos q  + YS * M * sin q
YT = YT0   XS * M * sin q  + YS * M * cos q

where:
XT0 , YT0    =   the coordinates of the origin point of the source coordinate reference system expressed in the target coordinate reference system;
M                 =  the length of one unit in the source coordinate reference system expressed in units of the target coordinate reference system;
q                  = the angle about which the axes of the source coordinate reference system need to be rotated to coincide with the axes of the target coordinate reference system, counter-clockwise being positive. Alternatively, the bearing of the source coordinate reference system Y-axis measured relative to target coordinate reference system north.

The similarity transformation can also be described as a special case of the parametric affine transformation where coefficients A1 = B2  and  A2 =  - B1.

Reversibility
The reverse formula for the Similarity Transformation is:

XS = [(XT   XTO) * cos q     (YT  YTO) * sin q ] / [M ]
YS = [(XT    XTO) * sin q   +  (YT  YTO) * cos q] / [M ]

An alternative approach for the reverse operation is to use the same formula as for the forward computation but with different parameter values:
	XT = XTO'  + XS * M' * cos theta'  + YS * M' * sin theta'
	YT = YTO'    XS * M' * sin theta' + YS * M' * cos theta'

The reverse parameter values, indicated by a prime ('), can be calculated from those of the forward operation as follows:
XTO' =  (YTO sin theta   XTO cos theta) / M
YTO' =  (YTO cos theta +  XTO sin theta) / M
M'   =  1/M
theta'    =  theta","ED50 / UTM zone 31N to ETRS89 / UTM zone 31N

Parameters of the Similarity Transformation:
XTO   = -129.549 metres
YTO   = -208.185 metres
M     = 1.00000155
theta = 1.56504"" = 0.000007588 rad

Forward computation for source coordinates 300000m E, 4500000m N:

E(ETRS89) = 129.549 + 300000.465 + 34.144
          = 299905.060 m E

N(ETRS89) = 208.185 2.276 + 4500006.977
          = 4499796.515m N

Reverse computation of ETRS89 / UTM 31N coordinates 299905.060m E, 4499796.515m N:

E(ED50) = (300034.609  34.144) / 1.00000155
	= 300000.000m E

N(ED50) = (2.276 + 4500004.700) / 1.00000155
	= 4500000.000m N

Alternative reverse computation:

First calculate new parameter values:
XTO'   = 129.5472 m
YTO'   = 208.1857 m
M'     = 0.99999845
theta' = 0.000007588 rad

Then apply these values to forward formula:
E(ED50) = 129.547 + 299904.595 + (34.142)
        = 300000.000 m

N(ED50) = 208.186  (2.276) + 4499789.539
        = 4500000.000 m",Defined for two-dimensional coordinate systems.,"EPSG guidance note #7-2, http://www.epsg.org",OGP,2010/06/29,2000.830 2004.670 2010.053,0
9622,Affine orthogonal geometric transformation,0,"Note: These formulas have been transcribed from EPSG Guidance Note #7. Users are encouraged to use that document rather than the text which follows as reference because limitations in the transcription will be avoided.

XT = XT0   +   XS .  k . dSX . cos q   +   YS .  k .  dSY  . sin q
YT = YT0      XS .  k .  dSX . sin q    +   YS .  k .  dSY  . cos q

where:

XT0 ,YT0  = the coordinates of the origin point of the source coordinate reference system, expressed in the target coordinate reference system;
dSX , dSY  = the length of one unit of the source  axis, expressed in units of the target axis, for the X axes and the Y- axes respectively;
k = point scale factor of the target coordinate reference system in a chosen reference point;
q  = the angle through which the source coordinate reference system axes must be rotated to coincide with the target coordinate refderence system axes (counter-clockwise is positive). Alternatively, the bearing (clockwise positive) of the source coordinate reference system Y-axis measured relative to target coordinate reference system north.","Source coordinate system: imaginary 3D seismic acquisition bin grid.  The two axes are orthogonal, but the unit on the I-axis is 25 metres, whilst the unit on the J-axis is 12.5 metres.
The target projected coordinate system is WGS 84 / UTM Zone 31N and the origin of the bin grid (centre of bin 0,0) is defined at E = 456781.0, N = 5836723.0.  The projected coordinate system point scale factor at the bin grid origin is 0.99984.
The map grid bearing of the I and J axes are 110* and 20* respectively.  Thus the angle through which both the positive I and J axes need to be rotated to coincide with the positive Easting axis and Northing axis respectively is +20 degrees.

Hence: 
XT0 ,	=    456 781.0 m
YT0	= 5 836 723.0 m
dSX 	= 25
dSY	= 12.5
k 	= 0.99984
q	= +20 degrees

Forward calculation for centre of bin with coordinates: I = 300, J = 247:

XT = Easting   = XT0   +   XS . k . dSX . cos q   +   YS . k . dSY  . sin q    = 464 855.62 m.

YT = Northing = YT0      XS . k . dSX . sin q    +   YS . k . dSY  . cos q  = 5 837 055.90 m

Reverse calculation for this point:
XS = [( XT   XT0) . cos qY    (YT  YT0) . sin qY ] / [k . dSX  . cos (qX  qY)] = 230 bins

YS = [(XT    XT0) . sin qX   +  (YT  YT0) . cos qX ] / [k . dSY . cos (qX  qY)]  = 162 bins",,"EPSG guidance note #7, http://www.epsg.org",OGP,2000/06/10,,1
9623,Affine geometric transformation,1,"Note: These formulas have been transcribed from EPSG Guidance Note #7-2. Users are encouraged to use that document rather than the text which follows as reference because limitations in the transcription will be avoided.

General case.

The geometric representation of the affine transformation is:
XT = XT0   +  XS * k * MX * cos qX   +  YS * k * MY * sin qY
YT = YT0    XS * k * MX *  sin qX   +  YS * k * MY * cos qY 
where:

XT0 ,YT0  = the coordinates of the origin point of the source coordinate reference system, expressed in the target coordinate reference system;
MX , MY  = the length of one unit of the source axis, expressed in units of the target axis, for the first and second source and target axis pairs respectively;
qX , qY   = the angles about which the source coordinate reference system axes XS and YS must be rotated to coincide with the target coordinate reference system axes XT and YT respectively (counter-clockwise being positive).
k = point scale factor of the target coordinate reference system in a chosen reference point;
 
Comparing the algebraic representation with the parameters of the parameteric form (code 9624) it can be seen that the parametric and geometric forms of the affine transformation are related as follows:
A0  =  XT0
A1  = k * MX * cos qX  
A2  = k * MY * sin qY
B0  =  YT0
B1  =    k * MX * sin qX
B2  =   k *MY * cos qY

Reversibility
For the Affine Geometric Transformation, the reverse operation can be described by a different formula, as shown below, in which the same parameter values as the forward transformation may be used:

XS = [( XT   XT0) . cos qY    (YT  YT0) . sin qY ] / [k * MX  * cos (qX  qY)]
YS = [(XT    XT0) . sin qX   +  (YT  YT0) . cos qX ] / [k * MY * cos (qX  qY)]


Orthogonal case

If the source coordinate reference system happens to have orthogonal axes, that is both axes are rotated through the same angle to bring them into the direction of the orthogonal target coordinate reference system axes, i.e. qX = qY = q, then the Affine Geometric Transformation can be simplified to:

XT = XT0   +   XS .  k . MX . cos q   +   YS .  k .  MY  . sin q
YT = YT0      XS .  k .  MX . sin q    +   YS .  k .  MY  . cos q

where:
q  = the angle through which the source coordinate reference system axes must be rotated to coincide with the target coordinate refderence system axes (counter-clockwise is positive). Alternatively, the bearing (clockwise positive) of the source coordinate reference system Y-axis measured relative to target coordinate reference system north.

The reverse formulas of the general case can also be simplified by replacing qX and qY with q:

XS = [(XT   XTO) * cos q     (YT  YTO) * sin q ] / [k * MX ]
YS = [(XT    XTO) * sin q   +  (YT  YTO) * cos q] / [k * MY ]

In the EPSG dataset this orthogonal case (code 9622) has been deprecated. The formulas for the general case should be used, inserting q for both qX  and qY. The case has been documented here as part of the progression through increasing constraints on the degrees of freedom between the general case and the Similarity Transformation.",(none),,"EPSG guidance note #7-2, http://www.epsg.org",OGP,2005/08/26,2004.670,0
9624,Affine parametric transformation,1,"Note: These formulas have been transcribed from EPSG Guidance Note #7-2. Users are encouraged to use that document rather than the text which follows as reference because limitations in the transcription will be avoided.

XT   =  A0  +  A1 * XS  +  A2 * YS
YT   =  B0  +  B1 * XS  +  B2 * YS
where
XT , YT  are the coordinates of a point P in the target coordinate reference system;
XS , YS   are the coordinates of P in the source coordinate reference system.

Reversibility
The reverse transformation is another affine transformation using the same formulas but with different parameter values.  The reverse parameter values, indicated by a prime (), can be calculated from those of the forward transformation as follows:

D    = A1 * B2      A2 * B1
A0 = (A2 * B0      B2 * A0) / D
B0 = (B1 * A0      A1 * B0) / D
A1 = +B2 / D
A2 =  A2 / D
B1 =  B1 / D
B2 = +A1 / D

Then
	XS   =  A0'  +  A1' * XT  +  A2' * YT
		YS   =  B0'  +  B1' * XT  +  B2' *",(none),,"EPSG guidance note #7-2, http://www.epsg.org",OGP,2005/08/23,2004.670,0
9625,General polynomial (2nd-order),0,"The simplest of all polynomials is the general polynomial function. In order to avoid problems of numerical instability this type of polynomial should be used after reducing the input parameters, usually coordinate offsets U and V relative to a central evaluation point, to manageable numbers, between 10 and +10 at most.

U = XS - XS0 in defined units (which may not be those of the coordinate reference system),
V = YS - YS0

Then (XT - XT0) = (XS - XS0) + dX
         (YT - YT0) = (YS - YS0) + dY 
or
XT  = XS - XS0 + XT0 + dX
YT  = YS - YS0 + YT0 + dY

where
XT , YT   are coordinates in the target coordinate reference system,
XS , YS  are coordinates in the source coordinate reference system,
XS0 , YS0 are coordinates of the evaluation point in the source coordinate reference system,
XT0 , YT0  are coordinates of the evaluation point in the target coordinate reference system.

and where
dX = A0 + A1.U + A2.V + A3.U2 + A4.U.V + A5.V2
dY = B0 + B1.U + B2.V +B3.U2 +B4.U.V +B5.V2",,,EPSG guidance note #7.,OGP,2000/03/07,,1
9626,General polynomial (3rd-order),0,"The simplest of all polynomials is the general polynomial function. In order to avoid problems of numerical instability this type of polynomial should be used after reducing the input parameters, usually coordinate offsets U and V relative to a central evaluation point, to manageable numbers, between 10 and +10 at most.

U = XS - XS0 in defined units (which may not be those of the coordinate reference system),
V = YS - YS0

Then (XT - XT0) = (XS - XS0) + dX
         (YT - YT0) = (YS - YS0) + dY 
or
XT  = XS - XS0 + XT0 + dX
YT  = YS - YS0 + YT0 + dY

where
XT , YT   are coordinates in the target coordinate reference system,
XS , YS  are coordinates in the source coordinate reference system,
XS0 , YS0 are coordinates of the evaluation point in the source coordinate reference system,
XT0 , YT0  are coordinates of the evaluation point in the target coordinate reference system.

and where
dX = A0 + A1.U + A2.V + A3.U2 + A4.U.V + A5.V2 + A6.U3 + A7.U2.V + A8.U.V2 + A9.V3
dY = B0 + B1.U + B2.V +B3.U2 +B4.U.V +B5.V2 + B6.U3 +B7.U2.V +B8.U.V2 +B9.V3",,,EPSG guidance note #7.,OGP,2000/03/07,,1
9627,General polynomial (4th-order),0,"The simplest of all polynomials is the general polynomial function. In order to avoid problems of numerical instability this type of polynomial should be used after reducing the input parameters, usually coordinate offsets U and V relative to a central evaluation point, to manageable numbers, between 10 and +10 at most.

U = XS - XS0 in defined units (which may not be those of the coordinate reference system),
V = YS - YS0

Then (XT - XT0) = (XS - XS0) + dX
         (YT - YT0) = (YS - YS0) + dY 
or
XT  = XS - XS0 + XT0 + dX
YT  = YS - YS0 + YT0 + dY

where
XT , YT   are coordinates in the target coordinate reference system,
XS , YS  are coordinates in the source coordinate reference system,
XS0 , YS0 are coordinates of the evaluation point in the source coordinate reference system,
XT0 , YT0  are coordinates of the evaluation point in the target coordinate reference system.

and where
dX = A0 + A1.U + A2.V + A3.U2 + A4.U.V + A5.V2 + A6.U3 + A7.U2.V + A8.U.V2 + A9.V3 + A10.U4 + A11.U3.V + A12.U2.V2 + A13.U.V3 + A14.V4

dY = B0 + B1.U + B2.V +B3.U2 +B4.U.V +B5.V2 + B6.U3 +B7.U2.V +B8.U.V2 +B9.V3 + B10.U4 + B11.U3.V + B12.U2.V2 + B13.U.V3 + B14.V4",,,EPSG guidance note #7.,OGP,2000/03/07,,1
9628,Reversible polynomial (2nd-order),1,See EPSG Guidance Note 7.,,Reversibility is subject to constraints.  See Guidance Note 7 for clarification.,EPSG guidance note #7.,OGP,2000/03/07,1999.640,1
9629,Reversible polynomial (3rd-order),1,See EPSG Guidance Note 7.,,Reversibility is subject to constraints.  See Guidance Note 7 for clarification.,EPSG guidance note #7.,OGP,2000/03/07,1999.640,1
9630,Reversible polynomial (4th-order),1,See EPSG Guidance Note 7.,"For geodetic transformation ED50 to ED87 (1)

Offset unit:  degree
Ordinate 1 of evaluation point X0  =   55° 00' 00.000""N  = +55 degrees
Ordinate 2 of evaluation point Y0  =     0° 00' 00.000""E   =   +0 degrees

Parameters:
A0 = -5.56098E-06   A1 = -1.55391E-06   ...   A14 = -4.01383E-09
B0 = +1.48944E-05   B2 = +2.68191E-05  ...   B14 = +7.62236E-09

Forward calculation for: 
ED50 Latitude     = Xs =52* 3030""N   =     +52.508333333 degrees
ED50 Longitude  = Ys =  2*E=      +2.0 degrees   

U = XS - X0 =  * ED50 - X0  = 52.508333333 - 55.0 = -2.491666667 degrees
V = YS - Y0 =  * ED50 - Y0   = 2.0 - 0.0 = 2.0 degrees

dX = A0 + A1.U + ... + A14.V4
      = -5.56098E-06 + (-1.55391E-06 * -2.491666667) + ... + (-4.01383E-09 * 2.0^4)
      = -3.12958E-06 degrees

dY = B0 + B1.U + ... + B14.V4
      = +1.48944E-05 + (2.68191E-05 * -2.491666667) + ... + (7.62236E-09 * 2.0^4)
      = +9.80126E-06 degrees

Then  ED87 Latitude  =   XT = XS + dX
                                  =  52.508333333 - 3.12958E-06   degrees
                                  = 52* 30 29.9887"" N

ED87 Longitude  =   YT = YS + dY
                           = 2* 00 00.0353"" E


Reverse calculation for transformation ED50 to ED87 (1).
The transformation method for the ED50 to ED87 (1) transformation, 4th-order reversible polynomial, is reversible. The same formulas may be applied for the reverse calculation, but coefficients A0 through A14 and B0 through B14 are applied with reversal of their signs. Sign reversal is not applied to the coordinates of the evaluation point. Thus:
Ordinate 1 of evaluation point X0  =   55° 00' 00.000""N  = +55 degrees
Ordinate 2 of evaluation point Y0  =     0° 00' 00.000""E   =   +0 degrees
A0  = +5.56098E-06   A1 = +1.55391E-06   ...   A14 = +4.01383E-09
B0  = -1.48944E-05    B1 = -2.68191E-05    ...   B14 = -7.62236E-09

Reverse calculation for: 
ED87 Latitude     = XS = 52° 3029.9887""N   =     +52.5083301944 degrees
ED87 Longitude  = YS =   2° 00 00.0353"" E   =     +2.0000098055 degrees   

U = 52.5083301944 - 55.0 = -2.4916698056 degrees
V = 2.0000098055 - 0.0 = 2.0000098055 degrees

dX = A0 + A1.U + ... + A14.V4
      = +5.56098E-06 + (1.55391E-06 * -2.491666667) + ... + (4.01383E-09 * 2.0000098055^4)
      = +3.12957E-06 degrees

dY = B0 + B1.U + ... + B14.V4
      = -1.48944E-05 + (-2.68191E-05 * -2.491666667) + ... + (-7.62236E-09 * 2.0000098055^4)
      = -9.80124E-06 degrees

Then ED50 Latitude  =   XT = XS + dX
                                 = 52.5083301944 + 3.12957E-06   degrees
                                 = 52° 30 30.000"" N

ED50 Longitude  =   YT = YS + dY
                           = 2° 00 00.000"" E",Reversibility is subject to constraints.  See Guidance Note 7 for clarification.,EPSG guidance note #7.,OGP,2000/03/07,1999.640,1
9631,Complex polynomial (3rd-order),0,"The relationship between two projected coordinate reference systems may be approximated more elegantly by a single polynomial regression formula written in terms of complex numbers. The advantage is that the dependence between the A and B coefficients (for U and V) is taken into account in the formula, resulting in fewer coefficients for the same order polynomial. A third-order polynomial in complex numbers is used in Belgium.  A fourth-order polynomial in complex numbers is used in The Netherlands for transforming coordinates referenced to the Amersfoort / RD system to and from ED50 / UTM.

(dX + i. dY) = (A1 + i. A2).(U + i.V) + (A3 + i. A4).(U + i.V)^2 + (A5 + i. A6).(U + i.V)^3 

where U = (XS - XS0).10-5
and     V = (YS - YS0).10-5

Then
XT  = XS - XS0 + XT0 + dX
YT  = YS - YS0 + YT0 + dY

where
XT , YT      are coordinates in the target coordinate reference system,
XS , YS      are coordinates in the source coordinate reference system,
XS0 , YS0   are coordinates of the evaluation point in the source coordinate reference system,
XT0 , YT0   are coordinates of the evaluation point in the target coordinate reference system.

Note that the zero order coefficients of the general polynomial, A0 and B0, have apparently disappeared.  In reality they are absorbed by the different coordinates of the source and of the target evaluation point, which in this case, are numerically very different because of the use of two different projected coordinate reference systems for source and target.

The transformation parameter values (the coefficients) are not reversible.  For the reverse transformation a different set of parameter values are required, used within the same formulas as the forward direction","For transformation Belge Lambert 72 to ED50 / UTM zone 31N,

Eo1 = 0
No1 = 0
Eo2 = 449681.702
No2 = 5460505.326
A1 = -71.3747
A2 = 1858.8407
A3 = -5.4504
A4 = -16.9681
A5 = 4.0783
A6 = 0.2193

For source coordinate system E1=200000  N1=100000, then
E2 = 647737.377  N2 = 5564124.227.",Coordinate pairs treated as complex numbers.  This exploits the correlation between the polynomial coefficients and leads to a smaller number of coefficients than the regular 3rd-order polynomial.,EPSG guidance note #7.,OGP,2000/03/07,,1
9632,Complex polynomial (4th-order),0,"The relationship between two projected coordinate reference systems may be approximated more elegantly by a single polynomial regression formula written in terms of complex numbers. The advantage is that the dependence between the A and B coefficients (for U and V) is taken into account in the formula, resulting in fewer coefficients for the same order polynomial. A third-order polynomial in complex numbers is used in Belgium.  A fourth-order polynomial in complex numbers is used in The Netherlands for transforming coordinates referenced to the Amersfoort / RD system to and from ED50 / UTM.

(dX + i. dY) = (A1 + i. A2).(U + i.V) + (A3 + i. A4).(U + i.V)^2 + (A5 + i. A6).(U + i.V)^3 + (A7 + i.A8).(U + i.V)^4

where U = (XS - XS0).10-5
and     V = (YS - YS0).10-5

Then
XT  = XS - XS0 + XT0 + dX
YT  = YS - YS0 + YT0 + dY

where
XT , YT      are coordinates in the target coordinate reference system,
XS , YS      are coordinates in the source coordinate reference system,
XS0 , YS0   are coordinates of the evaluation point in the source coordinate reference system,
XT0 , YT0   are coordinates of the evaluation point in the target coordinate reference system.

Note that the zero order coefficients of the general polynomial, A0 and B0, have apparently disappeared.  In reality they are absorbed by the different coordinates of the source and of the target evaluation point, which in this case, are numerically very different because of the use of two different projected coordinate reference systems for source and target.

The transformation parameter values (the coefficients) are not reversible.  For the reverse transformation a different set of parameter values are required, used within the same formulas as the forward direction.","For transformation RD / Netherlands New to ED50 / UTM zone 31N,

Eo1 = 155000
No1 = 463000
Eo2 = 663395.607
No2 = 5781194.380
A1 = -51.681
A2 = 3290.525
A3 = 20.172
A4 = 1.133
A5 = 2.075
A6 = 0.251
A7 = 0.075
A8 = -0.012

For source coordinate system E1=200000  N1=500000, then
E2 =707155.557  N2 = 5819663.128.",Coordinate pairs treated as complex numbers.  This exploits the correlation between the polynomial coefficients and leads to a smaller number of coefficients than the regular 4th-order polynomial.,EPSG guidance note #7.,OGP,2000/03/07,,1
9633,Ordnance Survey National Transformation,1,"This method is used for transformation between ETRS89 (or WGS 84) geographic and OSGB36 / National Grid projected coordinate reference systems.  It uses a gridded data set with nodes in a temporary projected CRS (ETRS89 / National Grid) for bi-linear interpolation of grid coordinate differences.

The offsets at a point are derived by interpolation within the gridded data. One grid file contains both easting and northing offsets. The grid file format is given in documentation available from the information source. The coordinate reference system for the coordinates of the grid fiule nodes is an intermediary projected CRS, ETRS89 / British National Grid.

For the transformation of ETRS89 coordinates to OSGB36 / British National Grid coordinates, the ETRS89 latitude and longitude are first converted into ETRS89 / National Grid values using the Transverse Mercator formulas given in EPSG method code 9807. Then bi-linear interpolation is used to derive easting and northing offset values. These are added to the temporary ETRS89 / National Grid coordinate values to give OSGB36 / National Grid coordinate values.

For the transformation of OSGB36 / British National Grid coordinates to ETRS89 latitude and longitude, iteration is required. For the first iteration the OSGB36 / British National Grid easting and northing values are assumed to be in the ETRS89 / National Grid. Bi-linear interpolation is used to derive the easting and northing offset values which are applied with sign reversed to the input coordinates.The result is used in further iterations of interpolation and application of offset until the difference between results from successive iterations is insignificant. Finally these Transverse Mercator grid coordinates are converted to ETRS89 latitude and longitude using the formulae given in EPSG method code 9807.",See information source.,Geodetic transformation between ETRS89 (or WGS 84) and OSGB36 / National Grid.  Uses ETRS89 / National Grid as an intermediate coordinate system for bi-linear interpolation of gridded grid coordinate differences.,http://www.gps.gov.uk/gpssurveying.asp,OGP,2008/04/11,2004.190 2008.027,0
9634,Maritime Provinces polynomial interpolation,0,"The transformation makes use of a residual file for each Canadian maritime province.  The process of residual interpolation accounts for local variations in the coordinate reference system and provides a transformation accuracy of +/- 5 cm.

By using a second residual file, the transformation may be reversed.  Only one residual file is in use by the method during any given execution.",(none),This transformation is an executable module within the application NBGeocalc.  It is an adaptation of the ESTPM program developed by Geodetic Survey of Canada.,Survey of New Brunswick,OGP,2000/10/19,,0
9635,Geographic3D to Geographic2D+GravityRelatedHeight,1,"This is a complex, multi-step transformation, involving the application of a geoid height difference interpolated at a point in a ""geoid model"". The geoid model should be available as a regular grid of latitude and longitude with the height of the geoid above the ellipsoid at each grid node. Only the height is affected by this transformation; the geodetic latitude and longitude are not.

The transformation involves the following sequence of steps:
·  Selection of a subset of the geoid file covering the extent of the points to be transformed.
·  If the geoid file is not based on the source or target CRS, it needs to be transformed first. This involves transformation of the chosen subset of the geoid file from its orignal Geographic 3D CRS to the Geographic 3D CRS that is the source or the target of this transformation.
·  Calculation of the height of the geoid above the ellipsoid (""geoid undulation"") at the relevant point(s). This is achieved through a bi-linear interpolation of the geoid undulation, using the latitude and longitude to locate the point in the sub-grid.  This step results in the height of the geoid above the ellipsoid (N) of the Geographic 3D CRS, whether source or target.
·  At each point, the application of the calculated geoid undulation to the height to be transformed.

H=h-N for Geographic3D to Geographic2D+GravityRelatedHeight

h=H+N for Geographic2D+GravityRelatedHeight to Geographic3D

where h = the ellipsoidal height (height above the ellipsoid in a geographic 3D CRS)
and H = the gravity-related height (vertical CRS) component of the compound CRS.",(none),"Transformation from a Geographic 3D CRS to a Compound CRS consisting of a Geographic 2D CRS and a Vertical CRS, or vice versa. The Geographic 3D and the Geographic 2D CRS must be based on the same Geodetic Datum.","EPSG guidance note #7-2, http://www.epsg.org",OGP,2004/04/27,2004.190 2004.340,0
9636,Molodensky-Badekas (geog2D domain),1,"Note: These formulas have been transcribed from EPSG Guidance Note #7-2. Users are encouraged to use that document rather than the text which follows as reference because limitations in the transcription will be avoided.

Transformation of coordinates from one geographic coordinate reference system into another is often carried out as a concatenation of the following operations:

  (geographical to geocentric) + (geocentric to geocentric) + (geocentric to geographic)

The Coordinate Frame Rotation (geog2D domain) transformation has 5 steps:

(i) geographic 2D coordinates are converted to 3D using EPSG coordinate operation method code 9659;

(ii) geographic 3D coordinates are converted to geocentric coordinates using EPSG coordinate operation method code 9602;

(iii) the middle step of the concatenated transformation, from geocentric coordinates to geocentric coordinates, uses the Molodensky-Badekas (geocentric domain) method, EPSG method code 1034;

(iv) the geocentric coordinates are converted to geographic 3D using EPSG coordinate operation method code 9602;
 
(v) finally the geographic 3D coordinates are converted to geographic 2D using EPSG coordinate operation method code 9659.","Input point: 
Coordinate reference system: La Canoa (geographic 2D)
  Latitude =     9 deg 35 min 00.386 sec N
  Longitude = 66 deg 04 min 48.091 sec W
This is taken to be geographic 3D with an assumed Ellipsoidal height hS  =  201.465 m

This transforms to Cartesian geocentric coords:
   XS =  2 550 408.965 m
   YS = -5 749 912.266 m
   ZS =   1 054 891.114 m

Transformation parameters La Canoa to REGVEN:
   dX  = -270.933 m
   dY  = +115.599 m
   dZ  = -360.226 m
   RX   = -5.266 sec = -0.000025530288 radians
   RY  = -1.238 sec = -0.000006001993 radians
   RZ  = +2.381 sec =  0.000011543414 radians
   dS   = -5.109 ppm
   Ordinate 1 of evaluation point  = 2464351.59 m
   Ordinate 2 of evaluation point = -5783466.61 m
   Ordinate 3 of evaluation point =    974809.81 m

Application of the 10 parameter Molodenski-Badekas Transformation results in REGVEN geocentric coordinates of:
   XT =  2 550 138.467 m
   YT = -5 749 799.862 m
   ZT  =  1 054 530.826 m

This converts into:
   Latitude =       9 deg 34 min 49.001 sec N
   Longitude =  66 deg 04 min 54.705 sec W
   Ellipsoidal height =  -18.10 m
on the REGVEN geographic 3D coordinate reference system.

Because the source coordinate reference system was 2D, the target system ellipsoidal height is ignored and the results treated as a geographic 2D coordinate reference system:
   Latitude =       9 deg 34 min 49.001 sec N
   Longitude =  66 deg 04 min 54.705 sec W",See methods 1034 and 1039 for similar tfms operating between other CRSs types.,"EPSG guidance note #7-2, http://www.epsg.org",OGP,2009/11/24,2002.510 2004.470 2009.083,0
9637,Degree representation conversion: deg to DMSH,1,"In the formulas that follow, the coordinate strings are symbolically represented as follows:

deg                     decimal degrees
adeg                   absolute value of decimal degrees
ideg                     integer degrees
sdeg                   signed integer degree
min                      real-number minutes
imin                      integer minutes
sec                      real-number seconds
lathem, lonhem    hemisphere abbreviation


Forward calculation from decimal degree representation to DMSH representation:
adeg = ABS(deg)
ideg = INT(adeg)

min = (adeg - ideg) * 60
imin = INT(min)
sec =  (min - imin) * 60

Then for latitude, if deg < 0, lathem = S else lathem = N
For longitude, if deg < 0, lonhem = W else lonhem = E

Reverse calculation from DMSH representation to decimal degree representation:
deg = (ideg + imin/60 + sec/3600) * H
where for latitude H = 1 if lathem = N and H = -1 if lathem = S
and for longitude  H = 1 if lonhem = E and H = -1 if lonhem = W","Source CRS = WGS 84 (deg) (CRS code 63266405).
Latitude = 35.75255, longitude = -85.20415

Target CRS in DMSH = WGS 84 (CRS code 4326)
Latitude = 35°4509.18""N, longitude =  85°1214.94""W",Applies to 2D and the horizontal component of 3D ellipsoidal  systems.,EPSG guidance note #7.,OGP,2002/11/22,,1
9638,Degree representation conversion: degH to DMSH,1,"In the formulas that follow, the coordinate strings are symbolically represented as follows:

deg                     decimal degrees
adeg                   absolute value of decimal degrees
ideg                     integer degrees
sdeg                   signed integer degree
min                      real-number minutes
imin                      integer minutes
sec                      real-number seconds
lathem, lonhem    hemisphere abbreviation


In this conversion (both forward and reverse) the hemisphere parameter remains unchanged and retains its position in the respective coordinate strings.

Forward calculation from degH representation to DMSH representation:
ideg = INT(adeg)

min = (adeg - ideg) * 60
imin = INT(min)
sec =  (min - imin) * 60

Reverse calculation from DMSH representation to decimal degree representation:
adeg = (ideg + imin/60 + sec/3600)","Source CRS = WGS 84 (degH) (CRS code 63266406).
Latitude = 35.75255N, longitude = 85.20415W

Target CRS in DMSH = WGS 84 (CRS code 4326)
Latitude = 35°4509.18""N, longitude =  85°1214.94""W",Applies to 2D and the horizontal component of 3D ellipsoidal  systems.,EPSG guidance note #7.,OGP,2002/11/22,,1
9639,Degree representation conversion: Hdeg to DMSH,1,"In the formulas that follow, the coordinate strings are symbolically represented as follows:

deg                     decimal degrees
adeg                   absolute value of decimal degrees
ideg                     integer degrees
sdeg                   signed integer degree
min                      real-number minutes
imin                      integer minutes
sec                      real-number seconds
lathem, lonhem    hemisphere abbreviation


In this conversion the hemisphere parameters retain their values but change their positions in their respective coordinate strings from the end of the strings to the beginnings (both forward and reverse).

Forward calculation from Hdeg representation to DMSH representation:
First, re-order fields from
          lathem, lat_adeg   and    lonhem, lon_adeg
to       lat_adeg, lathem   and    lon_adeg, lonhem  

Then 
ideg = INT(adeg)

min = (adeg - ideg) * 60
imin = INT(min)
sec =  (min - imin) * 60


Reverse calculation from DMSH representation to Hdeg representation:
adeg = (ideg + imin/60 + sec/3600)

Then re-order fields from
          lat_adeg, lathem   and    lon_adeg, lonhem
to       lathem, lat_adeg   and    lonhem, lon_adeg","Source CRS = WGS 84 (Hdeg) (CRS code 63266407).
Latitude = N35.75255, longitude = W85.20415

Target CRS in DMSH = WGS 84 (CRS code 4326)
Latitude = 35°4509.18""N, longitude =  85°1214.94""W",Applies to 2D and the horizontal component of 3D ellipsoidal  systems.,EPSG guidance note #7.,OGP,2002/11/22,,1
9640,Degree representation conversion: DM to DMSH,1,"In the formulas that follow, the coordinate strings are symbolically represented as follows:

deg                     decimal degrees
adeg                   absolute value of decimal degrees
ideg                     integer degrees
sdeg                   signed integer degree
min                      real-number minutes
imin                      integer minutes
sec                      real-number seconds
lathem, lonhem    hemisphere abbreviation


Forward calculation from DM representation to DMSH representation:

ideg = ABS(sdeg)

imin = INT(min)
sec = (min - imin) * 60

If lat_sdeg < 0, lathem = S else lathem = N
If lon_sdeg < 0, lonhem = W else lathem = E


Reverse calculation from DMSH representation to DM representation:
sdeg = ideg * H
where for latitude, H = 1 if lathem = N and H = -1 if lathem = S
and for longitude  H = 1 if lonhem = E and H = -1 if lonhem = W

Then
min = imin + (sec / 60)","Source CRS = WGS 84 (DM) (CRS code 63266408).
Latitude = 35°45.153, longitude = -85°12.249

Target CRS in DMSH = WGS 84 (CRS code 4326)
Latitude = 35°4509.18""N, longitude =  85°1214.94""W",Applies to 2D and the horizontal component of 3D ellipsoidal  systems.,EPSG guidance note #7.,OGP,2002/11/22,,1
9641,Degree representation conversion: DMH to DMSH,1,"In the formulas that follow, the coordinate strings are symbolically represented as follows:

deg                     decimal degrees
adeg                   absolute value of decimal degrees
ideg                     integer degrees
sdeg                   signed integer degree
min                      real-number minutes
imin                      integer minutes
sec                      real-number seconds
lathem, lonhem    hemisphere abbreviation


The degree and hemisphere parameters remain unchanged in this conversion (both forward and reverse) and also retain their position in their respective coordinate strings.

Forward calculation from DMH representation to DMSH representation:
imin = INT(min)
sec = (min - imin) * 60

Reverse calculation from DMSH representation to DMH representation:
min = imin + (sec / 60)","Source CRS = WGS 84 (DMH) (CRS code 63266409).
Latitude = 35°45.153 N, longitude = 85°12.249 W

Target CRS in DMSH = WGS 84 (CRS code 4326)
Latitude = 35°4509.18""N, longitude =  85°1214.94""W",Applies to 2D and the horizontal component of 3D ellipsoidal  systems.,EPSG guidance note #7.,OGP,2002/11/22,,1
9642,Degree representation conversion: HDM to DMSH,1,"In the formulas that follow, the coordinate strings are symbolically represented as follows:

deg                     decimal degrees
adeg                   absolute value of decimal degrees
ideg                     integer degrees
sdeg                   signed integer degree
min                      real-number minutes
imin                      integer minutes
sec                      real-number seconds
lathem, lonhem    hemisphere abbreviation


In this conversion the degree parameters remain unchanged in this conversion (both forward and reverse). The hemisphere parameters retain their values but change their positions in their respective coordinate strings.

Forward calculation from HDM representation to DMSH representation:
imin = INT(min)
sec = (min - imin) * 60
Then reorder fields from hem, ideg, imin, sec to ideg, imin, sec, hem.

Reverse calculation from DMSH representation to HDM representation:
min = imin + (sec / 60)
Then re-order fields from ideg, min, hem to hem, ideg, min.","Source CRS = WGS 84 (HDM) (CRS code 63266410).
Latitude = N35°45.153, longitude =  W85°12.249

Target CRS in DMSH = WGS 84 (CRS code 4326)
Latitude = 35°4509.18""N, longitude =  85°1214.94""W",Applies to 2D and the horizontal component of 3D ellipsoidal  systems.,EPSG guidance note #7.,OGP,2002/11/22,,1
9643,Degree representation conversion: DMS to DMSH,1,"In the formulas that follow, the coordinate strings are symbolically represented as follows:

deg                     decimal degrees
adeg                   absolute value of decimal degrees
ideg                     integer degrees
sdeg                   signed integer degree
min                      real-number minutes
imin                      integer minutes
sec                      real-number seconds
lathem, lonhem    hemisphere abbreviation


In this conversion (both forward and reverse) the minute and second parameters remain unchanged.

Forward calculation from DMS representation to DMSH representation:

ideg = ABS(sdeg)
If lat_sdeg < 0, lathem = S else lathem = N
If lon_sdeg < 0, lonhem = W else lathem = E

Reverse calculation from DMSH representation to DMS representation:
sdeg = ideg * H
where for latitude, H = 1 if lathem = N and H = -1 if lathem = S
and for longitude  H = 1 if lonhem = E and H = -1 if lonhem = W","Source CRS = WGS 84 (DMS) (CRS code 63266411).
Latitude = 35°4509.18"", longitude = -85°1214.94""

Target CRS in DMSH = WGS 84 (CRS code 4326)
Latitude = 35°4509.18""N, longitude =  85°1214.94""W",Applies to 2D and the horizontal component of 3D ellipsoidal  systems.,EPSG guidance note #7.,OGP,2002/11/22,,1
9644,Degree representation conversion: HDMS to DMSH,1,"In the formulas that follow, the coordinate strings are symbolically represented as follows:

deg                     decimal degrees
adeg                   absolute value of decimal degrees
ideg                     integer degrees
sdeg                   signed integer degree
min                      real-number minutes
imin                      integer minutes
sec                      real-number seconds
lathem, lonhem    hemisphere abbreviation


In this conversion the parameter values remain unchanged but are re-ordered.

For the forward calculation from HDMS representation to DMSH representation, for each of latitude and longitude re-order the fields:
          from  	hem, ideg, imin, sec
          to       	ideg, imin, sec, hem

For the reverse calculation from DMSH representation to HDMS representation, for each of latitude and longitude re-order the fields:
          from  	ideg, imin, sec, hem 
          to       	hem, ideg, imin, sec","Source CRS = WGS 84 (HDMS) (CRS code 63266412).
Latitude = N35°4509.18"", longitude =  W85°1214.94""

Target CRS in DMSH = WGS 84 (CRS code 4326)
Latitude = 35°4509.18""N, longitude =  85°1214.94""W",Applies to 2D and the horizontal component of 3D ellipsoidal  systems.,EPSG guidance note #7.,OGP,2002/11/22,,1
9645,General polynomial of degree 2,0,"Note: These formulas have been transcribed from EPSG Guidance Note #7-2. Users are encouraged to use that document rather than the text which follows as reference because limitations in the transcription will be avoided.

The simplest of all polynomials is the general polynomial function. In order to avoid problems of numerical instability this type of polynomial should be used after reducing the coordinate values in both the source and the target coordinate reference system to manageable numbers, between 10 and +10 at most.  This is achieved by working with offsets relative to a central evaluation point, scaled to the desired number range by applying a scaling factor to the coordinate offsets.

Hence an evaluation point is chosen in the source coordinate reference system (XS0, YS0) and in the target coordinate reference system (XT0, YT0).  Often these two sets of coordinates do not refer to the same physical point but two points are chosen that have the same coordinate values in both the source and the target coordinate reference system.  (When the two points have identical coordinates, these parameters are conveniently eliminated from the formulas, but the general case where the coordinates differ is given here).

The selection of an evaluation point in each of the two coordinate reference systems allows the point coordinates in both to be reduced as follows:
XS - XS0 
YS - YS0
and
XT  XT0 
YT  YT0
These coordinate differences are expressed in their own unit of measure, which may not be the same as that of the corresponding coordinate reference system. )

A further reduction step is usually necessary to bring these coordinate differences into the desired numerical range by applying a scaling factor to the coordinate differences in order to reduce them to a value range that may be applied to the polynomial formulae below without introducing numerical precision errors:

U = mS.(XS - XS0) 
V = mS.(YS - YS0)

where 
XS , YS  are coordinates in the source coordinate reference system,
XS0 , YS0 are coordinates of the evaluation point in the source coordinate reference system,
mS is the scaling factor applied the coordinate differences in the source coordinate reference system.

The normalised coordinates U and V of the point whose coordinates are to be transformed are used as input to the polynomial transformation formula. In order to control the numerical range of the polynomial coefficients An and Bn the output coordinate differences dX and dY are multiplied by a scaling factor, mT.

mT.dX = A0 + A1.U + A2.V + A3.U^2 + A4.U.V + A5.V^2

mT.dY = B0 + B1.U + B2.V + B3.U^2 + B4.U.V + B5.V^2

from which dX and dY are evaluated. These will be in the units of the target coordinate reference system.

The polynomial coefficients are given as parameters of the form Aumvn and Bumvn, where m is the power to which U is raised and n is the power to which V is raised. For example, A3 is represented as coordinate operation parameter Au2v0.

The relationship between the two coordinate reference systems can now be written as follows:

	(XT - XT0) = (XS  XS0) + dX 
(YT - YT0) = (YS  YS0) + dY 
or
	XT = XS  XS0  + XT0 + dX 
YT = YS  YS0 + YT0 + dY 

where:
XT , YT  are coordinates in the target coordinate reference system,
XS , YS  are coordinates in the source coordinate reference system,
XS0 , YS0 are coordinates of the evaluation point in the source coordinate reference system,
XT0 , YT0  are coordinates of the evaluation point in the target coordinate reference system,
dX, dY   are derived through the scaled polynomial formulas.",(none),,"EPSG guidance note #7-2, http://www.epsg.org",OGP,2002/12/21,,0
9646,General polynomial of degree 3,0,"Note: These formulas have been transcribed from EPSG Guidance Note #7-2. Users are encouraged to use that document rather than the text which follows as reference because limitations in the transcription will be avoided.

The simplest of all polynomials is the general polynomial function. In order to avoid problems of numerical instability this type of polynomial should be used after reducing the coordinate values in both the source and the target coordinate reference system to manageable numbers, between 10 and +10 at most.  This is achieved by working with offsets relative to a central evaluation point, scaled to the desired number range by applying a scaling factor to the coordinate offsets.

Hence an evaluation point is chosen in the source coordinate reference system (XS0, YS0) and in the target coordinate reference system (XT0, YT0).  Often these two sets of coordinates do not refer to the same physical point but two points are chosen that have the same coordinate values in both the source and the target coordinate reference system.  (When the two points have identical coordinates, these parameters are conveniently eliminated from the formulas, but the general case where the coordinates differ is given here).

The selection of an evaluation point in each of the two coordinate reference systems allows the point coordinates in both to be reduced as follows:
XS - XS0 
YS - YS0
and
XT  XT0 
YT  YT0
These coordinate differences are expressed in their own unit of measure, which may not be the same as that of the corresponding coordinate reference system. )

A further reduction step is usually necessary to bring these coordinate differences into the desired numerical range by applying a scaling factor to the coordinate differences in order to reduce them to a value range that may be applied to the polynomial formulae below without introducing numerical precision errors:

U = mS.(XS - XS0) 
V = mS.(YS - YS0)

where 
XS , YS  are coordinates in the source coordinate reference system,
XS0 , YS0 are coordinates of the evaluation point in the source coordinate reference system,
mS is the scaling factor applied the coordinate differences in the source coordinate reference system.

The normalised coordinates U and V of the point whose coordinates are to be transformed are used as input to the polynomial transformation formula. In order to control the numerical range of the polynomial coefficients An and Bn the output coordinate differences dX and dY are multiplied by a scaling factor, mT.

mT.dX = A0 + A1.U + A2.V + A3.U^2 + A4.U.V + A5.V^2 + A6.U^3 + A7.U^2.V + A8.U.V^2 + A9.V^3

mT.dY = B0 + B1.U + B2.V + B3.U^2 + B4.U.V + B5.V^2 + B6.U^3 + B7.U^2.V + B8.U.V^2 + B9.V^3

from which dX and dY are evaluated. These will be in the units of the target coordinate reference system.

The polynomial coefficients are given as parameters of the form Aumvn and Bumvn, where m is the power to which U is raised and n is the power to which V is raised. For example, A7 is represented as coordinate operation parameter Au2v1.

The relationship between the two coordinate reference systems can now be written as follows:

	(XT - XT0) = (XS  XS0) + dX 
(YT - YT0) = (YS  YS0) + dY 
or
	XT = XS  XS0  + XT0 + dX 
YT = YS  YS0 + YT0 + dY 

where:
XT , YT  are coordinates in the target coordinate reference system,
XS , YS  are coordinates in the source coordinate reference system,
XS0 , YS0 are coordinates of the evaluation point in the source coordinate reference system,
XT0 , YT0  are coordinates of the evaluation point in the target coordinate reference system,
dX, dY   are derived through the scaled polynomial formulas.",(none),,"EPSG guidance note #7-2, http://www.epsg.org",OGP,2002/12/21,,0
9647,General polynomial of degree 4,0,"Note: These formulas have been transcribed from EPSG Guidance Note #7-2. Users are encouraged to use that document rather than the text which follows as reference because limitations in the transcription will be avoided.

The simplest of all polynomials is the general polynomial function. In order to avoid problems of numerical instability this type of polynomial should be used after reducing the coordinate values in both the source and the target coordinate reference system to manageable numbers, between 10 and +10 at most.  This is achieved by working with offsets relative to a central evaluation point, scaled to the desired number range by applying a scaling factor to the coordinate offsets.

Hence an evaluation point is chosen in the source coordinate reference system (XS0, YS0) and in the target coordinate reference system (XT0, YT0).  Often these two sets of coordinates do not refer to the same physical point but two points are chosen that have the same coordinate values in both the source and the target coordinate reference system.  (When the two points have identical coordinates, these parameters are conveniently eliminated from the formulas, but the general case where the coordinates differ is given here).

The selection of an evaluation point in each of the two coordinate reference systems allows the point coordinates in both to be reduced as follows:
XS - XS0 
YS - YS0
and
XT  XT0 
YT  YT0
These coordinate differences are expressed in their own unit of measure, which may not be the same as that of the corresponding coordinate reference system. )

A further reduction step is usually necessary to bring these coordinate differences into the desired numerical range by applying a scaling factor to the coordinate differences in order to reduce them to a value range that may be applied to the polynomial formulae below without introducing numerical precision errors:

U = mS.(XS - XS0) 
V = mS.(YS - YS0)

where 
XS , YS  are coordinates in the source coordinate reference system,
XS0 , YS0 are coordinates of the evaluation point in the source coordinate reference system,
mS is the scaling factor applied the coordinate differences in the source coordinate reference system.

The normalised coordinates U and V of the point whose coordinates are to be transformed are used as input to the polynomial transformation formula. In order to control the numerical range of the polynomial coefficients An and Bn the output coordinate differences dX and dY are multiplied by a scaling factor, mT.

mT.dX = A0 + A1.U + A2.V + A3.U^2 + A4.U.V + A5.V^2 + A6.U^3 + A7.U^2.V + A8.U.V^2 + A9.V^3
            + A10.U^4 + A11.U^3.V + A12.U^2.V^2 + A13.U.V^3 + A14.V^4

mT.dY = B0 + B1.U + B2.V + B3.U^2 + B4.U.V + B5.V^2 + B6.U^3 + B7.U^2.V + B8.U.V^2 + B9.V^3
            + B10.U^4 + B11.U^3.V + B12.U^2.V^2 + B13.U.V^3 + B14.V^4

from which dX and dY are evaluated. These will be in the units of the target coordinate reference system.

The polynomial coefficients are given as parameters of the form Aumvn and Bumvn, where m is the power to which U is raised and n is the power to which V is raised. For example, A13 is represented as coordinate operation parameter Au1v3.

The relationship between the two coordinate reference systems can now be written as follows:

	(XT - XT0) = (XS  XS0) + dX 
(YT - YT0) = (YS  YS0) + dY 
or
	XT = XS  XS0  + XT0 + dX 
YT = YS  YS0 + YT0 + dY 

where:
XT , YT  are coordinates in the target coordinate reference system,
XS , YS  are coordinates in the source coordinate reference system,
XS0 , YS0 are coordinates of the evaluation point in the source coordinate reference system,
XT0 , YT0  are coordinates of the evaluation point in the target coordinate reference system,
dX, dY   are derived through the scaled polynomial formulas.",(none),,"EPSG guidance note #7-2, http://www.epsg.org",OGP,2002/12/21,,0
9648,General polynomial of degree 6,0,"Note: These formulas have been transcribed from EPSG Guidance Note #7-2. Users are encouraged to use that document rather than the text which follows as limitations in the transcription will be avoided.

The simplest of all polynomials is the general polynomial function. In order to avoid problems of numerical instability this type of polynomial should be used after reducing the coordinate values in both the source and the target coordinate reference system (CRS) to manageable numbers, between 10 and +10 at most.  This is achieved by working with offsets relative to a central evaluation point, scaled to the desired number range by applying a scaling factor to the coordinate offsets.

Hence an evaluation point is chosen in the source CRS (XS0, YS0) and in the target CRS (XT0, YT0).  Often these two sets of coordinates do not refer to the same physical point but two points are chosen that have the same coordinate values in both the source and the target CRS.  (When the two points have identical coordinates, these parameters are conveniently eliminated from the formulas, but the general case where the coordinates differ is given here).

The selection of an evaluation point in each of the two CRSs allows the point coordinates in both to be reduced as follows:
XS - XS0
YS - YS0
and
XT  XT0
YT  YT0
These coordinate differences are expressed in their own unit of measure, which may not be the same as that of the corresponding CRS.)

A further reduction step is usually necessary to bring these coordinate differences into the desired numerical range by applying a scaling factor to the coordinate differences in order to reduce them to a value range that may be applied to the polynomial formulae below without introducing numerical precision errors:

U = mS.(XS - XS0)
V = mS.(YS - YS0)

where
XS , YS  are coordinates in the source CRS,
XS0 , YS0 are coordinates of the evaluation point in the source CRS,
mS is the scaling factor applied the coordinate differences in the source CRS.

The normalised coordinates U and V of the point whose coordinates are to be transformed are used as input to the polynomial transformation formula. In order to control the numerical range of the polynomial coefficients An and Bn the output coordinate differences dX and dY are multiplied by a scaling factor, mT.

mT.dX = A0 + A1.U + A2.V + A3.U^2 + A4.U.V + A5.V^2 + A6.U^3 + A7.U^2.V + A8.U.V^2 + A9.V^3
            + A10.U^4 + A11.U^3.V + A12.U^2.V^2 + A13.U.V^3 + A14.V^4
            + A15.U^5 + A16.U^4.V + A17.U^3.V^2 + A18.U^2.V^3 + A19.U.V^4 + A20.V^5
            + A21.U^6 + A22.U^5.V + A23.U^4.V^2 + A24.U^3.V^3 + A25.U^2.V^4 + A26.U.V^5 + A27.V^6

mT.dY = B0 + B1.U + B2.V + B3.U^2 + B4.U.V + B5.V^2 + B6.U^3 + B7.U^2.V + B8.U.V^2 + B9.V^3
            + B10.U^4 + B11.U^3.V + B12.U^2.V^2 + B13.U.V^3 + B14.V^4
            + B15.U^5 + B16.U^4.V + B17.U^3.V^2 + B18.U^2.V^3 + B19.U.V^4 + B20.V^5
            + B21.U^6 + B22.U^5.V + B23.U^4.V^2 + B24.U^3.V^3 + B25.U^2.V^4 + B26.U.V^5 + B27.V^6

from which dX and dY are evaluated. These will be in the units of the target CRS.

The polynomial coefficients are given as parameters of the form Aumvn and Bumvn, where m is the power to which U is raised and n is the power to which V is raised. For example, A17 is represented as coordinate operation parameter Au3v2.

The relationship between the two CRSs can now be written as follows:

	(XT - XT0) = (XS  XS0) + d
(YT - YT0) = (YS  YS0) + dY
or
	XT = XS  XS0  + XT0 + d
YT = YS  YS0 + YT0 + dY

where:
XT, YT are coordinates in the target CRS,
XS, YS are coordinates in the source CRS,
XS0, YS0 are coordinates of the evaluation point in the source CRS,
XT , YT0 are coordinates of the evaluation point in the target CRS,
dX, dY are derived through the scaled polynomial formulas.",See EPSG Guidance Note 7-2.,,"EPSG guidance note #7-2, http://www.epsg.org",OGP,2002/12/21,,0
9649,Reversible polynomial of degree 2,1,"Note: These formulas have been transcribed from EPSG Guidance Note #7-2. Users are encouraged to use that document rather than the text which follows as reference because limitations in the transcription will be avoided.

See method code 9645 for description of general polynomial formula.

A general polynomial transformation is reversible only when the following conditions are met.
1. The co-ordinates of source and target evaluation point are (numerically) the same.
2. The unit of measure of the coordinate differences in source and target coordinate reference system are the same.
3. The scaling factors applied to source and target coordinate differences are the same.
4. The spatial variation of the differences between the coordinate reference systems around any given location is sufficiently small.

Clarification on conditions for polynomial reversibility:
Regarding 1 and 2 - 	In the reverse transformation the roles of the source and target coordinate reference systems are reversed.  Consequently, the co-ordinates of the evaluation point in the source coordinate reference system become those in the target coordinate reference system in the reverse transformation. Usage of the same transformation parameters for the reverse transformation will therefore only be valid if the evaluation point coordinates are numerically the same in source and target coordinate reference system and in the same units.  That is, XS0 = XT0 = X0 and YS0 = YT0 = Y0.
Re 3 - The same holds for the scaling factors of the source and target coordinate differences and for the units of measure of the coordinate differences. That is, mS = mT = m.
Re 4 - 	If conditions 1, 2 and 3 are all satisfied it then may be possible to use the forward polynomial algorithm with the forward parameters for the reverse transformation. This is the case if the spatial variations in dX and dY around any given location are sufficiently constant.  The signs of the polynomial coefficients are then reversed but the scaling factor and the evaluation point coordinates retain their signs. If these spatial variations in dX and dY are too large, for the reverse transformation iteration would be necessary.   It is therefore not the algorithm that determines whether a single step solution is sufficient or whether iteration is required, but the desired accuracy combined with the degree of spatial variability of dX and dY.

An example of a reversible polynomial is transformation is ED50 to ED87 (1) for the North Sea.  The suitability of this transformation to be described by a reversible polynomial can easily be explained. In the first place both source and target coordinate reference systems are of type geographic 2D. The typical difference in coordinate values between ED50 and ED87 is in the order of 2 metres (approximately 10E-6 degrees) in the area of application. The polynomial functions are evaluated about central points with coordinates of 55 deg N, 0 deg E in both coordinate reference systems. The reduced coordinate differences (in degrees) are used as input parameters to the polynomial functions. The output coordinate differences are corrections to the input coordinate offsets of about 10E-6 degrees. This difference of several orders of magnitude between input and output values is the property that makes a polynomial function reversible in practice (although not in a formal mathematical sense).

The error made by the polynomial approximation formulas in calculating the reverse correction is of the same order of magnitude as the ratio of output versus input:
(output error / input error) = (	output valu/ input value) which is approximately 10E-6

As long as the input values (the coordinate offsets from the evaluation point) are orders of magnitude larger than the output (the corrections), and provided the coefficients are used with changed signs, the polynomial transformation may be considered to be reversible.","See Reversible polynomial of degree 4, code 9651, for general methodology.",Reversibility is subject to constraints.  See Guidance Note 7 for conditions and clarification.,"EPSG guidance note #7-2, http://www.epsg.org",OGP,2002/12/21,,0
9650,Reversible polynomial of degree 3,1,"Note: These formulas have been transcribed from EPSG Guidance Note #7-2. Users are encouraged to use that document rather than the text which follows as reference because limitations in the transcription will be avoided.

See method code 9646 for description of general polynomial formula.

A general polynomial transformation is reversible only when the following conditions are met.
1. The co-ordinates of source and target evaluation point are (numerically) the same.
2. The unit of measure of the coordinate differences in source and target coordinate reference system are the same.
3. The scaling factors applied to source and target coordinate differences are the same.
4. The spatial variation of the differences between the coordinate reference systems around any given location is sufficiently small.

Clarification on conditions for polynomial reversibility:
Regarding 1 and 2 - 	In the reverse transformation the roles of the source and target coordinate reference systems are reversed.  Consequently, the co-ordinates of the evaluation point in the source coordinate reference system become those in the target coordinate reference system in the reverse transformation. Usage of the same transformation parameters for the reverse transformation will therefore only be valid if the evaluation point coordinates are numerically the same in source and target coordinate reference system and in the same units.  That is, XS0 = XT0 = X0 and YS0 = YT0 = Y0.
Re 3 - The same holds for the scaling factors of the source and target coordinate differences and for the units of measure of the coordinate differences. That is, mS = mT = m.
Re 4 - 	If conditions 1, 2 and 3 are all satisfied it then may be possible to use the forward polynomial algorithm with the forward parameters for the reverse transformation. This is the case if the spatial variations in dX and dY around any given location are sufficiently constant.  The signs of the polynomial coefficients are then reversed but the scaling factor and the evaluation point coordinates retain their signs. If these spatial variations in dX and dY are too large, for the reverse transformation iteration would be necessary.   It is therefore not the algorithm that determines whether a single step solution is sufficient or whether iteration is required, but the desired accuracy combined with the degree of spatial variability of dX and dY.

An example of a reversible polynomial is transformation is ED50 to ED87 (1) for the North Sea.  The suitability of this transformation to be described by a reversible polynomial can easily be explained. In the first place both source and target coordinate reference systems are of type geographic 2D. The typical difference in coordinate values between ED50 and ED87 is in the order of 2 metres (approximately 10E-6 degrees) in the area of application. The polynomial functions are evaluated about central points with coordinates of 55 deg N, 0 deg E in both coordinate reference systems. The reduced coordinate differences (in degrees) are used as input parameters to the polynomial functions. The output coordinate differences are corrections to the input coordinate offsets of about 10E-6 degrees. This difference of several orders of magnitude between input and output values is the property that makes a polynomial function reversible in practice (although not in a formal mathematical sense).

The error made by the polynomial approximation formulas in calculating the reverse correction is of the same order of magnitude as the ratio of output versus input:
(output error / input error) = (	output valu/ input value) which is approximately 10E-6

As long as the input values (the coordinate offsets from the evaluation point) are orders of magnitude larger than the output (the corrections), and provided the coefficients are used with changed signs, the polynomial transformation may be considered to be reversible.","See Reversible polynomial of degree 4, code 9651, for general methodology.",Reversibility is subject to constraints.  See Guidance Note 7 for conditions and clarification.,"EPSG guidance note #7-2, http://www.epsg.org",OGP,2002/12/21,,0
9651,Reversible polynomial of degree 4,1,"Note: These formulas have been transcribed from EPSG Guidance Note #7-2. Users are encouraged to use that document rather than the text which follows as reference because limitations in the transcription will be avoided.

See method code 9647 for description of general polynomial formula.

A general polynomial transformation is reversible only when the following conditions are met.
1. The co-ordinates of source and target evaluation point are (numerically) the same.
2. The unit of measure of the coordinate differences in source and target coordinate reference system are the same.
3. The scaling factors applied to source and target coordinate differences are the same.
4. The spatial variation of the differences between the coordinate reference systems around any given location is sufficiently small.

Clarification on conditions for polynomial reversibility:
Regarding 1 and 2 - 	In the reverse transformation the roles of the source and target coordinate reference systems are reversed.  Consequently, the co-ordinates of the evaluation point in the source coordinate reference system become those in the target coordinate reference system in the reverse transformation. Usage of the same transformation parameters for the reverse transformation will therefore only be valid if the evaluation point coordinates are numerically the same in source and target coordinate reference system and in the same units.  That is, XS0 = XT0 = X0 and YS0 = YT0 = Y0.
Re 3 - The same holds for the scaling factors of the source and target coordinate differences and for the units of measure of the coordinate differences. That is, mS = mT = m.
Re 4 - 	If conditions 1, 2 and 3 are all satisfied it then may be possible to use the forward polynomial algorithm with the forward parameters for the reverse transformation. This is the case if the spatial variations in dX and dY around any given location are sufficiently constant.  The signs of the polynomial coefficients are then reversed but the scaling factor and the evaluation point coordinates retain their signs. If these spatial variations in dX and dY are too large, for the reverse transformation iteration would be necessary.   It is therefore not the algorithm that determines whether a single step solution is sufficient or whether iteration is required, but the desired accuracy combined with the degree of spatial variability of dX and dY.

An example of a reversible polynomial is transformation is ED50 to ED87 (1) for the North Sea.  The suitability of this transformation to be described by a reversible polynomial can easily be explained. In the first place both source and target coordinate reference systems are of type geographic 2D. The typical difference in coordinate values between ED50 and ED87 is in the order of 2 metres (approximately 10E-6 degrees) in the area of application. The polynomial functions are evaluated about central points with coordinates of 55 deg N, 0 deg E in both coordinate reference systems. The reduced coordinate differences (in degrees) are used as input parameters to the polynomial functions. The output coordinate differences are corrections to the input coordinate offsets of about 10E-6 degrees. This difference of several orders of magnitude between input and output values is the property that makes a polynomial function reversible in practice (although not in a formal mathematical sense).

The error made by the polynomial approximation formulas in calculating the reverse correction is of the same order of magnitude as the ratio of output versus input:
(output error / input error) = (	output valu/ input value) which is approximately 10E-6

As long as the input values (the coordinate offsets from the evaluation point) are orders of magnitude larger than the output (the corrections), and provided the coefficients are used with changed signs, the polynomial transformation may be considered to be reversible.","For geodetic transformation ED50 to ED87 (1)

Offset unit:  degree
Ordinate 1 of evaluation point X0  =   55° 00' 00.000""N  = +55 degrees
Ordinate 2 of evaluation point Y0  =     0° 00' 00.000""E   =   +0 degrees

Parameters:
A0 = -5.56098E-06   A1 = -1.55391E-06   ...   A14 = -4.01383E-09
B0 = +1.48944E-05   B2 = +2.68191E-05  ...   B14 = +7.62236E-09

Forward calculation for: 
ED50 Latitude     = Xs =52* 3030""N   =     +52.508333333 degrees
ED50 Longitude  = Ys =  2*E=      +2.0 degrees   

U = XS - X0 =  * ED50 - X0  = 52.508333333 - 55.0 = -2.491666667 degrees
V = YS - Y0 =  * ED50 - Y0   = 2.0 - 0.0 = 2.0 degrees

dX = A0 + A1.U + ... + A14.V4
      = -5.56098E-06 + (-1.55391E-06 * -2.491666667) + ... + (-4.01383E-09 * 2.0^4)
      = -3.12958E-06 degrees

dY = B0 + B1.U + ... + B14.V4
      = +1.48944E-05 + (2.68191E-05 * -2.491666667) + ... + (7.62236E-09 * 2.0^4)
      = +9.80126E-06 degrees

Then  ED87 Latitude  =   XT = XS + dX
                                  =  52.508333333 - 3.12958E-06   degrees
                                  = 52* 30 29.9887"" N

ED87 Longitude  =   YT = YS + dY
                           = 2* 00 00.0353"" E


Reverse calculation for transformation ED50 to ED87 (1).
The transformation method for the ED50 to ED87 (1) transformation, 4th-order reversible polynomial, is reversible. The same formulas may be applied for the reverse calculation, but coefficients A0 through A14 and B0 through B14 are applied with reversal of their signs. Sign reversal is not applied to the coordinates of the evaluation point. Thus:
Ordinate 1 of evaluation point X0  =   55° 00' 00.000""N  = +55 degrees
Ordinate 2 of evaluation point Y0  =     0° 00' 00.000""E   =   +0 degrees
A0  = +5.56098E-06   A1 = +1.55391E-06   ...   A14 = +4.01383E-09
B0  = -1.48944E-05    B1 = -2.68191E-05    ...   B14 = -7.62236E-09

Reverse calculation for: 
ED87 Latitude     = XS = 52° 3029.9887""N   =     +52.5083301944 degrees
ED87 Longitude  = YS =   2° 00 00.0353"" E   =     +2.0000098055 degrees   

U = 52.5083301944 - 55.0 = -2.4916698056 degrees
V = 2.0000098055 - 0.0 = 2.0000098055 degrees

dX = A0 + A1.U + ... + A14.V4
      = +5.56098E-06 + (1.55391E-06 * -2.491666667) + ... + (4.01383E-09 * 2.0000098055^4)
      = +3.12957E-06 degrees

dY = B0 + B1.U + ... + B14.V4
      = -1.48944E-05 + (-2.68191E-05 * -2.491666667) + ... + (-7.62236E-09 * 2.0000098055^4)
      = -9.80124E-06 degrees

Then ED50 Latitude  =   XT = XS + dX
                                 = 52.5083301944 + 3.12957E-06   degrees
                                 = 52° 30 30.000"" N

ED50 Longitude  =   YT = YS + dY
                           = 2° 00 00.000"" E",Reversibility is subject to constraints.  See Guidance Note 7 for conditions and clarification.,"EPSG guidance note #7-2, http://www.epsg.org",OGP,2002/12/21,,0
9652,Complex polynomial of degree 3,0,"Note: These formulas have been transcribed from EPSG Guidance Note #7-2. Users are encouraged to use that document rather than the text which follows as reference because limitations in the transcription will be avoided.

The relationship between two projected coordinate reference systems may be approximated more elegantly by a single polynomial regression formula written in terms of complex numbers. The advantage is that the dependence between the A and B coefficients (for U and V) is taken into account in the formula, resulting in fewer coefficients for the same order polynomial. A third-order polynomial in complex numbers is used in Belgium.

mT.(dX + i. dY) = (A1 + i. A2).(U + i.V) + (A3 + i. A4).(U + i.V)^2 + (A5 + i. A6).(U + i.V)^3 

where U = mS.(XS - XS0)
           V = mS.(YS - YS0)
and mS, mT are the scaling factors for the coordinate differences in the source and target coordinate reference systems.

The polynomial to degree 4 can alternatively be expressed in matrix form.

Then
XT  = XS - XS0 + XT0 + dX
YT  = YS - YS0 + YT0 + dY

where
XT , YT      are coordinates in the target coordinate reference system,
XS , YS      are coordinates in the source coordinate reference system,
XS0 , YS0   are coordinates of the evaluation point in the source coordinate reference system,
XT0 , YT0   are coordinates of the evaluation point in the target coordinate reference system.

Note that the zero order coefficients of the general polynomial, A0 and B0, have apparently disappeared.  In reality they are absorbed by the different coordinates of the source and of the target evaluation point, which in this case, are numerically very different because of the use of two different projected coordinate reference systems for source and target.

The transformation parameter values (the coefficients) are not reversible.  For the reverse transformation a different set of parameter values are required, used within the same formulas as the forward direction.","For transformation Belge Lambert 72 to ED50 / UTM zone 31N,

Eo1 = 0
No1 = 0
Eo2 = 449681.702
No2 = 5460505.326
A1 = -71.3747
A2 = 1858.8407
A3 = -5.4504
A4 = -16.9681
A5 = 4.0783
A6 = 0.2193

For source coordinate system E1=200000  N1=100000, then
E2 = 647737.377  N2 = 5564124.227.",Coordinate pairs treated as complex numbers.  This exploits the correlation between the polynomial coefficients and leads to a smaller number of coefficients than the general polynomial of degree 3.,"EPSG guidance note #7-2, http://www.epsg.org",OGP,2002/12/21,,0
9653,Complex polynomial of degree 4,0,"Note: These formulas have been transcribed from EPSG Guidance Note #7-2. Users are encouraged to use that document rather than the text which follows as reference because limitations in the transcription will be avoided.

The relationship between two projected coordinate reference systems may be approximated more elegantly by a single polynomial regression formula written in terms of complex numbers. The advantage is that the dependence between the A and B coefficients (for U and V) is taken into account in the formula, resulting in fewer coefficients for the same order polynomial. A fourth-order polynomial in complex numbers is used in The Netherlands for transforming coordinates referenced to the Amersfoort / RD system to and from ED50 / UTM.

mT.(dX + i. dY) = (A1 + i. A2).(U + i.V) + (A3 + i. A4).(U + i.V)^2 + (A5 + i. A6).(U + i.V)^3 + (A7 + i.A8).(U + i.V)^4

where U = mS.(XS - XS0)
           V = mS.(YS - YS0)
and mS, mT are the scaling factors for the coordinate differences in the source and target coordinate reference systems.

The polynomial to degree 4 can alternatively be expressed in matrix form.

Then
XT  = XS - XS0 + XT0 + dX
YT  = YS - YS0 + YT0 + dY

where
XT , YT      are coordinates in the target coordinate reference system,
XS , YS      are coordinates in the source coordinate reference system,
XS0 , YS0   are coordinates of the evaluation point in the source coordinate reference system,
XT0 , YT0   are coordinates of the evaluation point in the target coordinate reference system.

Note that the zero order coefficients of the general polynomial, A0 and B0, have apparently disappeared.  In reality they are absorbed by the different coordinates of the source and of the target evaluation point, which in this case, are numerically very different because of the use of two different projected coordinate reference systems for source and target.

The transformation parameter values (the coefficients) are not reversible.  For the reverse transformation a different set of parameter values are required, used within the same formulas as the forward direction.","For transformation RD / Netherlands New to ED50 / UTM zone 31N,

Eo1 = 155000
No1 = 463000
Eo2 = 663395.607
No2 = 5781194.380
A1 = -51.681
A2 = 3290.525
A3 = 20.172
A4 = 1.133
A5 = 2.075
A6 = 0.251
A7 = 0.075
A8 = -0.012

For source coordinate system E1=200000  N1=500000, then
E2 =707155.557  N2 = 5819663.128.",Coordinate pairs treated as complex numbers.  This exploits the correlation between the polynomial coefficients and leads to a smaller number of coefficients than the general polynomial of degree 4.,"EPSG guidance note #7-2, http://www.epsg.org",OGP,2002/12/21,,0
9654,Reversible polynomial of degree 13,1,"Note: These formulas have been transcribed from EPSG Guidance Note #7-2. Users are encouraged to use that document rather than the text which follows as reference because limitations in the transcription will be avoided.

See method code 9648 for description of general polynomial formula.

A general polynomial transformation is reversible only when the following conditions are met.
1. The co-ordinates of source and target evaluation point are (numerically) the same.
2. The unit of measure of the coordinate differences in source and target coordinate reference system are the same.
3. The scaling factors applied to source and target coordinate differences are the same.
4. The spatial variation of the differences between the coordinate reference systems around any given location is sufficiently small.

Clarification on conditions for polynomial reversibility:
Regarding 1 and 2 - 	In the reverse transformation the roles of the source and target coordinate reference systems are reversed.  Consequently, the co-ordinates of the evaluation point in the source coordinate reference system become those in the target coordinate reference system in the reverse transformation. Usage of the same transformation parameters for the reverse transformation will therefore only be valid if the evaluation point coordinates are numerically the same in source and target coordinate reference system and in the same units.  That is, XS0 = XT0 = X0 and YS0 = YT0 = Y0.
Re 3 - The same holds for the scaling factors of the source and target coordinate differences and for the units of measure of the coordinate differences. That is, mS = mT = m.
Re 4 - 	If conditions 1, 2 and 3 are all satisfied it then may be possible to use the forward polynomial algorithm with the forward parameters for the reverse transformation. This is the case if the spatial variations in dX and dY around any given location are sufficiently constant.  The signs of the polynomial coefficients are then reversed but the scaling factor and the evaluation point coordinates retain their signs. If these spatial variations in dX and dY are too large, for the reverse transformation iteration would be necessary.   It is therefore not the algorithm that determines whether a single step solution is sufficient or whether iteration is required, but the desired accuracy combined with the degree of spatial variability of dX and dY.

An example of a reversible polynomial is transformation is ED50 to ED87 (1) for the North Sea.  The suitability of this transformation to be described by a reversible polynomial can easily be explained. In the first place both source and target coordinate reference systems are of type geographic 2D. The typical difference in coordinate values between ED50 and ED87 is in the order of 2 metres (approximately 10E-6 degrees) in the area of application. The polynomial functions are evaluated about central points with coordinates of 55 deg N, 0 deg E in both coordinate reference systems. The reduced coordinate differences (in degrees) are used as input parameters to the polynomial functions. The output coordinate differences are corrections to the input coordinate offsets of about 10E-6 degrees. This difference of several orders of magnitude between input and output values is the property that makes a polynomial function reversible in practice (although not in a formal mathematical sense).

The error made by the polynomial approximation formulas in calculating the reverse correction is of the same order of magnitude as the ratio of output versus input:
(output error / input error) = (	output valu/ input value) which is approximately 10E-6

As long as the input values (the coordinate offsets from the evaluation point) are orders of magnitude larger than the output (the corrections), and provided the coefficients are used with changed signs, the polynomial transformation may be considered to be reversible.","See Reversible polynomial of degree 4, code 9651, for general methodology.",,"EPSG guidance note #7-2, http://www.epsg.org",OGP,2003/09/22,,0
9655,France geocentric interpolation,1,"The transformation is made in the geocentric domain using the geocentric translations method (code 9603). However the translation parameter values are derived by bilinear interpolation in a gridded data set. The arguments in accessing the grid are geodetic latitude and longitude of the forward transformation source coordinate reference system. 

The method is reversible.  Iteration for latitude and longitude is required to obtain the correct geocentric translation values. The geocentric translations are applied with sign reversal.",See information source.,,"IGN document NTG_88.pdf, ""Grille de parametres de transformation de coordonnees"". http://www.ign.fr",OGP,2008/04/11,2008.027,0
9656,Cartesian Grid Offsets,1,"Note: These formulas have been transcribed from EPSG Guidance Note #7-2. Users are encouraged to use that document rather than the text which follows as reference because limitations in the transcription will be avoided.

Easting_T = Easting_S + easting_offset 
Northing_T = Northingn_S + northing_offset.",(none),This transformation allows calculation of coordinates in the target system by adding the parameter value to the coordinate values of the point in the source system.,"EPSG guidance note #7-2, http://www.epsg.org",OGP,2004/04/14,,0
9657,Vertical Offset and Slope,1,"Note: These formulas have been transcribed from EPSG Guidance Note #7-2. Users are encouraged to use that document rather than the text which follows as reference because limitations in the transcription will be avoided.

In Europe, national height systems are related to the pan-European height system through three transformation parameters and the formula:

Ht = Hs + A + [IncLat * rhoO * (Lat  LatO)] + [IncLong * nuO * (Long  LongO) * cos(Lat)]

where
Ht = gravity-related height value in the target vertical coordinate reference system.
Hs = gravity-related height value in the source vertical coordinate reference system.
A is the value of the vertical offset to be applied.
IncLat is the value in radians of the inclination parameter in the latitude domain, i.e. in the plane of the meridian, derived at an evaluation point with coordinates of LatO , LongO.
IncLon is the value of the inclination parameter in the longitude domain, i.e. perpendicular to the plane of the meridian.
rhoO is the radius of curvature of the meridian at latitude LatO, where rhoO = a(1  e^2)/(1  e^2 * sin^2(LatO))^1.5
nuO is the radius of curvature on the prime vertical (i.e. perpendicular to the meridian) at latitude LatO, wh		ere nuO = a /(1  e^2 * sin^2(LatO))^0.5
Lat , Long are the horizontal coordinates of the point in the ETRS89 coordinate reference system, in radians.
LatO , LongO are the coordinates of the evaluation point in the ETRS89 coordinate reference system, in radians.

The horizontal location of the point must always be given in ETRS89 terms. Care is required where compound coordinate reference systems are in use: if the horizontal coordinates of the point are known in the local CRS they must first be transformed to ETRS89 values. The method is reversible.","For coordinate transformation LN02 to EVRF2000 (1)

Ordinate 1 of evaluation point: 46deg 55min N = 0.818850307 	radians
Ordinate 2 of evaluation point: 8deg 11min E of Greenwich = 0.142826110 	radians
Transformation Parameters:
A = -0.245m		
IncLat = -0.210""  = -0.000001018 	radians
IncLong = -0.032""  = -0.000000155 	radians

Consider a point having a gravity-related height in the LN02 system (Hs) of 473.0m and with horizontal coordinates in the ETRS89 geographical coordinate reference system of:
ETRS89 latitude: 47deg 20 min N = 0.826122513 	radians
ETRS89 longitude: 9 deg 40min E of Greenwich = 0.168715161 	radians
				
Then rhoO = 6369526.88 m		
IncLat term = -0.047 m	
nuO = 6389555.64  m 		
incLong term = -0.017 m
whence EVRF2000 height (Ht) = 473.0 +(-0.245) + (-0.047) + (-0.017) = 472.690 m.",This transformation allows calculation of height in the target system by applying the parameter values to the height value of the point in the source system.,"EPSG guidance note #7-2, http://www.epsg.org",OGP,2004/04/14,,0
9658,VERTCON,1,See information source.,See information source.,Geodetic transformation operating on geographic coordinate differences by bi-linear interpolation.  Input expects longitudes to be positive west.,US National Geodetic Survey - http://www.ngs.noaa.gov,OGP,2004/04/27,,0
9659,Geographic3D to 2D conversion,1,"Note: These formulas have been transcribed from EPSG Guidance Note #7-2. Users are encouraged to use that document rather than the text which follows as reference because limitations in the transcription will be avoided.

The forward case is trivial. A 3-dimensional geographic coordinate reference system comprising of geodetic latitude, geodetic longitude and ellipsoidal height is converted to its 2-dimensional subset by the simple expedient of dropping the height.

The reverse conversion, from 2D to 3D, is indeterminate. It is however a requirement when a geographic 2D coordinate reference system is to be transformed using a geocentric method which is 3-dimensional. In practice an artificial ellipsoidal height is created and appended to the geographic 2D coordinate reference system to create a geographic 3D coordinate reference system referenced to the same geodetic datum. The assumed ellipsoidal height is usually either set to the gravity-related height of a position in a compound coordinate reference system, or set to zero. As long as the height chosen is within a few kilometres of sea level, no error will be induced into the horizontal position resulting from the later geocentric transformation; the vertical coordinate will however be meaningless.",(none),This is a parameter-less conversion.,"EPSG guidance note #7-2, http://www.epsg.org",OGP,2004/04/27,,0
9660,Geographic3D offsets,1,"Note: These formulas have been transcribed from EPSG Guidance Note #7-2. Users are encouraged to use that document rather than the text which follows as reference because limitations in the transcription will be avoided.

Lat_T = Lat_S + latitude_offset 
Lon_T = Lon_S + longitude_offset 
EllipsoidHeight_T = EllipsoidHeight_S + ellipsoid_height_offset.",(none),This transformation allows calculation of coordinates in the target system by adding the parameter value to the coordinate values of the point in the source system.,"EPSG guidance note #7-2, http://www.epsg.org",OGP,2004/04/27,,0
9661,Geographic3D to GravityRelatedHeight (EGM),0,"This transformation involves the application of a geoid-ellipsoid separation value interpolated from a geoid model. The model provides separation values at the nodes on a regular grid of latitude and longitude intersection points. The geodetic latitude and longitude used to interpolate within the grid are not affected by this transformation.

The grid is referenced to a specific geographic CRS (the source CRS) and interpolation must be made in this system.

Calculation of the separation is achieved through a bi-linear interpolation of the grid, using the latitude and longitude of the point. This step provides the geoid-ellipsoid separation (N) above the ellipsoid of the source Geographic 3D CRS.

Then:
           H = h - N

where h = the height above the ellipsoid in the source geographic 3D CRS
and     H = the geoid height in the target vertical CRS.",(none),"Applies to EGM84 and EGM96 models. For later model see Geographic3D to GravityRelatedHeight (EGM2008), method code 1025.","EPSG guidance note #7-2, http://www.epsg.org",OGP,2009/02/10,2008.010 2008.097,0
9662,Geographic3D to GravityRelatedHeight (Ausgeoid98),0,"This transformation involves the application of a geoid-ellipsoid separation value interpolated from a geoid model. The model provides separation values at the nodes on a regular grid of latitude and longitude intersection points. The geodetic latitude and longitude used to interpolate within the grid are not affected by this transformation.

The grid is referenced to a specific geographic CRS (the source CRS) and interpolation must be made in this system.

Calculation of the separation is achieved through a bi-linear interpolation of the grid, using the latitude and longitude of the point. This step provides the geoid-ellipsoid separation (N) above the ellipsoid of the source Geographic 3D CRS.

Then:
           H = h - N

where h = the height above the ellipsoid in the source geographic 3D CRS
and     H = the geoid height in the target vertical CRS.",(none),,"EPSG guidance note #7-2, http://www.epsg.org",OGP,2008/04/11,2008.010,0
9663,Geographic3D to GravityRelatedHeight (OSGM02-GB),0,"This transformation involves the application of a height difference interpolated from a height correction model. The model provides height difference values at the nodes on a regular grid of latitude and longitude intersection points. The geodetic latitude and longitude used to interpolate within the grid are not affected by this transformation.

The grid is referenced to a specific geographic CRS (the source CRS) and interpolation must be made in this system.

Calculation of the height difference is achieved through a bi-linear interpolation of the grid, using the latitude and longitude of the point. This step provides the height correction (C) of the target datum above the ellipsoid of the source Geographic 3D CRS. C differs from the geoid-ellipsoid separation N because a vertical datum is a realisation of the geoid surface, not the geoid itself.

Then:
           H = h - C

where h = the height above the ellipsoid in the source geographic 3D CRS
and     H = the gravity-related height in the target vertical CRS.",(none),Transformation of the vertical component of a Geographic 3D CRS to a Vertical CRS.,"EPSG guidance note #7-2, http://www.epsg.org",OGP,2011/02/04,2008.010 2010.104,0
9664,Geographic3D to GravityRelatedHeight (IGN),0,"This transformation involves the application of a height difference interpolated from a height correction model. The model provides height difference values at the nodes on a regular grid of latitude and longitude intersection points. The geodetic latitude and longitude used to interpolate within the grid are not affected by this transformation.

The grid is referenced to a specific geographic CRS (the source CRS) and interpolation must be made in this system.

Calculation of the height difference is achieved through a bi-linear interpolation of the grid, using the latitude and longitude of the point. This step provides the height correction (C) of the target datum above the ellipsoid of the source Geographic 3D CRS. C differs from the geoid-ellipsoid separation N because a vertical datum is a realisation of the geoid surface, not the geoid itself.

Then:
           H = h - C

where h = the height above the ellipsoid in the source geographic 3D CRS",(none),Transformation of the vertical component of a Geographic 3D CRS to a Vertical CRS.,"EPSG guidance note #7-2, http://www.epsg.org",OGP,2008/04/11,2008.010,0
9665,Geographic3D to GravityRelatedHeight (US),0,"This transformation involves the application of a height difference interpolated from a height correction model. The model provides height difference values at the nodes on a regular grid of latitude and longitude intersection points. The geodetic latitude and longitude used to interpolate within the grid are not affected by this transformation.

The grid is referenced to a specific geographic CRS (the source CRS) and interpolation must be made in this system.

Calculation of the height difference is achieved through a bi-linear interpolation of the grid, using the latitude and longitude of the point. This step provides the height correction (C) of the target datum above the ellipsoid of the source Geographic 3D CRS. C differs from the geoid-ellipsoid separation N because a vertical datum is a realisation of the geoid surface, not the geoid itself.

Then:
           H = h - C

where h = the height above the ellipsoid in the source geographic 3D CRS",(none),Transformation of the vertical component of a Geographic 3D CRS to a Vertical CRS.,"EPSG guidance note #7-2, http://www.epsg.org",OGP,2008/04/11,2008.010,0
9666,UKOOA P6 seismic bin grid transformation,1,"Note: These formulas have been transcribed from EPSG Guidance Note #7-2. Users are encouraged to use that document rather than the text which follows as reference because limitations in the transcription will be avoided.

XT = XT0   +   XS .  k . dSX . cos q   +   YS .  k .  dSY  . sin q
YT = YT0      XS .  k .  dSX . sin q    +   YS .  k .  dSY  . cos q

where:

XT0 ,YT0  = the coordinates of the origin point of the source coordinate reference system, expressed in the target coordinate reference system;
dSX , dSY  = the length of one unit of the source  axis, expressed in units of the target axis, for the X axes and the Y- axes respectively;
k = point scale factor of the target coordinate reference system in a chosen reference point;
q  = the angle through which the source coordinate reference system axes must be rotated to coincide with the target coordinate refderence system axes (counter-clockwise is positive). Alternatively, the bearing (clockwise positive) of the source coordinate reference system Y-axis measured relative to target coordinate reference system north.","This example is given in the UKOOA P6/98 document. Source coordinate reference system: imaginary 3D seismic acquisition bin grid. The two axes are orthogonal, but the bin width on the I-axis (XS axis) is 25 metres, whilst the bin width on the J-axis (YS axis) is 12.5 metres. The origin of the grid has bin values of 1,1.

The target coordinate reference system is a projected CRS (WGS 84 / UTM Zone 31N) upon which the origin of the bin grid is defined at E = 456781.0, N = 5836723.0.  The projected coordinate reference system point scale factor at the bin grid origin is 0.99984.

In the map grid (target CRS), the bearing of the bin grid (source CRS) I and J axes are 110deg and 20deg respectively.  Thus the angle through which the bin grid axes need to be rotated to coincide with the map grid axes is +20 degrees.

The transformation parameter values are:

Parameter                                     	Parameter value
Bin grid origin                                 	1
Bin grid origin                                 	1
Bin grid origin Easting                       	456781.00 m
Bin grid origin Northing                    5836723.00 m
Scale factor of bin grid  	                	0.99984
Bin Width on I-axis                         	25 m
Bin Width on J-axis                        	12.5 m
Map grid bearing of bin grid J-axis    	20 deg
Bin node increment on I-axis           	1
Bin node increment on J-axis          	1


Forward calculation for centre of bin with coordinates: I = 300, J = 247:
XT = Easting   = XTO   +   [(XS  XSO) * cos q * k * MX / IncSX]  +  [(YS  YSO) * sin q * k * MY / IncSY]
= 456781.000 + 7023.078 + 1051.544 
= 464855.62 m.

YT = Northing = YTO      [(XS  XSO) * sin q * k * MX / IncSX]   +  [(YS  YSO) * cos q * k * MY / IncSY]
= 5836723.000 - 2556.192 + 2889.092
= 5837055.90 m.

Reverse calculation for this point 464 855.62mE, 5 837 055.90mN:
XS = {[( XT   XTO) * cos q    (YT  YTO) * sin q ] * [IncSX  / (k * MX)]} + XSO 
= 300 bins, 

YS = {[(XT    XTO) * sin q   +  (YT  YTO) * cos q] * [IncSY  / (k * MY)]} + YSO 
= 247 bins",,"UKOOA Data Exchange Format P6/98, Definition of 3D Seismic Binning Grids, revision 3, May 2000.",OGP,2005/08/25,,0
9801,Lambert Conic Conformal (1SP),1,"Note: These formulas have been transcribed from EPSG Guidance Note #7-2. Users are encouraged to use that document rather than the text which follows as reference because limitations in the transcription will be avoided.

To derive the projected Easting and Northing coordinates of a point with geographical coordinates (lat,lon) the formulas for the one standard parallel case are:

E = FE + r sin(theta)
N = FN + r0 - r cos(theta)
where
n = sin lat0
r = a F t^n k0     for r0, and r
m = cos(lat)/(1 - e^2 sin^2(lat))^0.5     for m0, lat0, and m2, lat2 where lat1 and lat2 are the latitudes of the standard parallels.
t  = tan(pi/4 - lat/2)/[(1 - e sin(lat))/(1 + e sin(lat))]^(e/2)   for t0 and t using lat0 and lat respectively.
F = m0/(n  t1^n)
theta = n(lon - lon0)

The reverse formulas to derive the latitude and longitude of a point from its Easting and Northing values are:

lat = pi/2 - 2arctan{t'[(1 - esin(lat))/(1 + esin(lat))]^(e/2)}
lon = theta'/n +lon0
where
theta' = arctan[(E - FE)/{r0 -(N - FN)}]
r' = +/-[(E - FE)^2 + {r0 - (N - FN)}^2]^0.5  taking the sign of n
t' = (r'/(a k0 F))^(1/n)
and n, F, and rF are derived as for the forward calculation.","For Projected Coordinate System JAD69 / Jamaica National Grid

Parameters:
Ellipsoid:  Clarke 1866, a = 6378206.400 m., 1/f = 294.97870
                                   then  e = 0.08227185 and e^2 = 0.00676866

Latitude Natural Origin         18°00'00""N  =  0.31415927 rad
Longitude Natural Origin     77°00'00""W = -1.34390352 rad
Scale factor at origin            1.000000
False Eastings  FE               250000.00 m
False Northings FN              150000.00 m

Forward calculation for: 
Latitude:     17°55'55.80""N  =  0.31297535 rad
Longitude:  76°56'37.26""W = -1.34292061 rad
first gives
m0    =  0.95136402        t0 =  0.72806411
F       =  3.39591092        n  =  0.30901699
r        =  19643955.26     r0  =  19636447.86
theta =  0.00030374        t   =  0.728965259

Then Easting E   =     255966.58 m
         Northing N =      142493.51 m

Reverse calculation for the same easting and northing first gives

theta' =  0.000303736
t'        =  0.728965259
m0     =  0.95136402
r'        =  19643955.26

Then Latitude     = 17°55'55.800""N
         Longitude  = 76°56'37.260""W",,"EPSG guidance note #7-2, http://www.epsg.org",OGP,2001/06/05,2001.080,0
9802,Lambert Conic Conformal (2SP),1,"Note: These formulas have been transcribed from EPSG Guidance Note #7-2. Users are encouraged to use that document rather than the text which follows as reference because limitations in the transcription will be avoided.

To derive the projected Easting and Northing coordinates of a point with geographical coordinates (lat,lon) the formulas for the one standard parallel case are:

E = EF + r sin(theta)
N = NF + rF - r cos(theta)
where
m = cos(lat)/(1 - e^2 sin^2(lat))^0.5     for m1, lat1, and m2, lat2 where lat1 and lat2 are the latitudes of the standard parallels.
t  = tan(pi/4 - lat/2)/[(1 - e sin(lat))/(1 + e sin(lat))]^(e/2)   for t1, t2, tF and t using lat1, lat2, latF and lat respectively.
n = (loge(m1) - loge(m2))/(loge(t1) - loge(t2))
F = m1/(n  t1^n)
r =  a F t^n         for rF and r, where rF is the radius of the parallel of latitude of the false origin.
theta = n(lon - lon0)

The reverse formulas to derive the latitude and longitude of a point from its Easting and Northing values are:

lat = pi/2 - 2arctan{t'[(1 - esin(lat))/(1 + esin(lat))]^(e/2)}
lon = theta'/n +lon0
where
r' = +/-[(E - EF)^2 + {rF - (N - NF)}^2]^0.5 , taking the sign of n
t' = (r'/(aF))^(1/n)
theta' = arctan [(E- EF)/(rF - (N- NF))]
and n, F, and rF are derived as for the forward calculation.","For Projected Coordinate System NAD27 / Texas South Central

Parameters:
Ellipsoid  Clarke 1866, a = 6378206.400 metres = 20925832.16 US survey feet
                                   1/f = 294.97870
then e = 0.08227185 and e^2 = 0.00676866

First Standard Parallel          28°23'00""N  =   0.49538262 rad
Second Standard Parallel    30°17'00""N  =   0.52854388 rad
Latitude False Origin            27°50'00""N  =   0.48578331 rad
Longitude False Origin         99°00'00""W = -1.72787596 rad
Easting at false origin           2000000.00  US survey feet
Northing at false origin          0.00  US survey feet

Forward calculation for: 
Latitude       28°30'00.00""N  =  0.49741884 rad
Longitude    96°00'00.00""W = -1.67551608 rad

first gives :
m1    = 0.88046050      m2 = 0.86428642
t        = 0.59686306      tF  = 0.60475101
t1      = 0.59823957      t2 = 0.57602212
n       = 0.48991263       F = 2.31154807
r        = 37565039.86    rF = 37807441.20
theta = 0.02565177

Then Easting E =      2963503.91 US survey feet
         Northing N =      254759.80 US survey feet

Reverse calculation for same easting and northing first gives:
theta' = 0.025651765     r' = 37565039.86
t'        = 0.59686306

Then Latitude     = 28°30'00.000""N
         Longitude   = 96°00'00.000""W",,"EPSG guidance note #7-2, http://www.epsg.org",OGP,2001/06/05,1999.280 2001.080,0
9803,Lambert Conic Conformal (2SP Belgium),1,"Note: These formulas have been transcribed from EPSG Guidance Note #7-2. Users are encouraged to use that document rather than the text which follows as reference because limitations in the transcription will be avoided.

For the Lambert Conic Conformal (2 SP Belgium), the formulas for the regular two standard parallel case (coordinate operation method code 9802) are used except for: 

Easting, E = EF + r sin (theta - alpha)
Northing, N = NF + rF - r cos (theta - alpha)

and for the reverse formulas
lon = ((theta' + alpha)/n) +lon0
where alpha = 29.2985 seconds.","For Projected Coordinate System Belge 1972 / Belge Lambert 72

Parameters:
Ellipsoid  International 1924,  a = 6378388 metres
                                              1/f = 297
then e = 0.08199189 and e^2 = 0.006722670

First Standard Parallel        49°50'00""N       =   0.86975574 rad
Second Standard Parallel  51°10'00""N       =   0.89302680 rad
Latitude False Origin          90°00'00""N       =   1.57079633 rad
Longitude False Origin         4°21'24.983""E = 0.07604294 rad
Easting at false origin EF        150000.01  metres
Northing at false origin NF    5400088.44  metres

Forward calculation for: 
Latitude        50°40'46.461""N  =  0.88452540 rad
Longitude       5°48'26.533""E   = 0.10135773 rad

first gives :
m1     = 0.64628304         m2 = 0.62834001
t        = 0.59686306          tF  = 0.00000000
t1      = 0.36750382           t2 = 0.35433583
n       = 0.77164219            F = 1.81329763
r        = 37565039.86         rF = 0.00
alpha = 0.00014204     theta = 0.01953396

Then Easting E  =      251763.20 metres
         Northing N =      153034.13 metres

Reverse calculation for same easting and northing first gives:
theta' = 0.01939192      r' = 548041.03
t' = 0.35913403
Then Latitude   =    50°40'46.461""N
         Longitude =     5°48'26.533""E",In 2000 this modification was replaced through use of the regular Lambert Conic Conformal (2SP) method [9802] with appropriately modified parameter values.,"EPSG guidance note #7-2, http://www.epsg.org",OGP,1999/04/22,1999.280,0
9804,Mercator (variant A),1,"Note: These formulas have been transcribed from EPSG Guidance Note #7-2. Users are encouraged to use that document rather than the text which follows as reference because limitations in the transcription will be avoided.

The formulas to derive projected Easting and Northing coordinates are:

E = FE + a*ko(lon - lonO)              
N = FN + a*ko* ln{tan(pi/4 + lat/2)[(1 - esin(lat))/(1 + esin(lat))]^e/2} where symbols are as listed above and logarithms are natural.

The reverse formulas to derive latitude and longitude from E and N values are:

lat = chi + (esq/2 + 5e^4/24 + e^6/12 + 13e^8/360) sin(2chi) 
+ (7e^4/48 + 29e^6/240 + 811e^8/11520) sin(4chi)
+ (7e^6/120 +  81e^8/1120) sin(6chi)  + (4279e^8/161280) sin(8chi)

where chi = pi/2 - 2 arctan t
t = B^((FN-N)/(a*ko)) 
B = base of the natural logarithm, 2.7182818...
and  for the 2 SP Case, ko is calculated as for the forward transformation above.
lon  =  ((E - FE)/(a*ko))  + lonO","For Projected Coordinate System Makassar / NEIEZ

Parameters:
Ellipsoid   Bessel 1841  a = 6377397.155 m   1/f = 299.15281
then e = 0.08169683

Latitude of natural origin = 00°00'00""N  = 0.0000000 rad
Longitude of natural origin = 110°00'00""E  = 1.91986218 rad
Scale factor at natural origin ko = 0.997
False Eastings FE = 3900000.00 m
False Northings FN = 900000.00 m

Forward calculation for: 
Latitude = 3°00'00.00""S   = -0.05235988 rad
Longitude = 120°00'00.00""E   =  2.09439510 rad
gives
Easting  E  =  5009726.58 m
Northing N  =   569150.82 m

Reverse calculation for same easting and northing first gives :
t    = 1.0534121
chi = -0.0520110

Latitude   =   3°00'00.000""S
Longitude  = 120°00'00.000""E","Note that in these formulas the parameter latitude of natural origin (latO) is not used. However for this Mercator (variant A) method the EPSG dataset includes this parameter, which must have a value of zero, for completeness in CRS labelling.","EPSG guidance note #7-2, http://www.epsg.org",OGP,2010/11/02,2001.080 2004.430 2008.000 2010.058,0
9805,Mercator (variant B),1,"Note: These formulas have been transcribed from EPSG Guidance Note #7-2. Users are encouraged to use that document rather than the text which follows as reference because limitations in the transcription will be avoided.

The formulas to derive projected Easting and Northing coordinates are:

ko = cos(latSP1)/(1 - e^2*sin^2(latSP1))^0.5 
where latSP1 is the absolute value of the first standard parallel (i.e. positive).

E = FE + a*ko(lon - lonO)              
N = FN + a*ko* ln{tan(pi/4 + lat/2)[(1 - esin(lat))/(1 + esin(lat))]^e/2} where logarithms are natural.

The reverse formulas to derive latitude and longitude from E and N values are:

lat = chi + (esq/2 + 5e^4/24 + e^6/12 + 13e^8/360) sin(2chi) 
+ (7e^4/48 + 29e^6/240 + 811e^8/11520) sin(4chi)
+ (7e^6/120 +  81e^8/1120) sin(6chi)  + (4279e^8/161280) sin(8chi)

where chi = pi/2 - 2 arctan t
t = B^((FN-N)/a*ko) 
B = base of the natural logarithm, 2.7182818...
and ko is calculated as for the forward transformation above.
lon  =  ((E - FE)/a*ko) + lonO","For Projected Coordinate System Pulkovo 1942 / Mercator Caspian Sea

Parameters:
Ellipsoid  Krassowski 1940   a = 6378245.00m   1/f = 298.300
then e = 0.08181333 and e^2 = 0.00669342

Latitude of first SP = 42°00'00""N = 0.73303829 rad
Longitude of natural origin = 51°00'00""E = 0.89011792 rad
False Eastings FE = 0.00 m
False Northings (at equator) FN = 0.00 m
Forward calculation for: 
Latitude = 53°00'00.00""N = 0.9250245 rad
Longitude = 53°00'00.00""E  = 0.9250245 rad

gives 
  
ko = 0.744260894
Easting E = 165704.29 m 
Northing N = 5171848.07 m

Reverse calculation for same easting and northing first gives :
t = 0.336391288
chi = 0.921795958
Latitude = 53°00'00.000""N
Longitude = 53°00'00.000""E",Used for most nautical charts.,"EPSG guidance note #7-2, http://www.epsg.org",OGP,2010/11/03,2004.320 2004.430 2010.058 2010.098,0
9806,Cassini-Soldner,1,"Note: These formulas have been transcribed from EPSG Guidance Note #7-2. Users are encouraged to use that document rather than the text which follows as reference because limitations in the transcription will be avoided.

The formulas to derive projected Easting and Northing coordinates are:

Easting E = FE + nu[A - TA^3/6 -(8 - T + 8C)TA^5/120]

Northing N = FN + M - M0 + nu*tan(lat)*[A^2/2 + (5 - T + 6C)A^4/24]

where A = (lon - lon0)cos(lat)
T = tan^2(lat)
C = e2 cos2*/(1 - e2)        nu = a /(1 - esq*sin^2(lat))^0.5 
and M, the distance along the meridian from equator to latitude lat, is given by
M = a[(1 - e^2/4 - 3e^4/64 - 5e^6/256 -....)*lat - (3e^2/8 + 3e^4/32 + 45e^6/1024 +....)sin(2*lat) + (15e^4/256 + 45e^6/1024 +.....)sin(4*lat) - (35e^6/3072 + ....)sin(6*lat) + .....]
with lat in radians.

M0 is the value of M calculated for the latitude of the chosen origin. This may not necessarily be chosen as the equator.

To compute latitude and longitude from Easting and Northing the reverse formulas are:
lat = lat1 - (nu1tan(lat1)/rho1)[D2/2 - (1 + 3*T1)D^4/24]
lon =  lon0 + [D - T1*D^3/3 + (1 + 3*T1)T1*D^5/15]/cos(lat1)

where lat1 is the latitude of the point on the central meridian which has the same Northing as the point whose coordinates are sought, and is found from:
lat1 = mu1 + (3*e1/2 - 27*e1^3/32 +.....)sin(2*mu1) + (21*e1^2/16 - 55*e1^4/32 + ....)sin(4*mu1)+ (151*e1^3/96 +.....)sin(6*mu1) + (1097*e1^4/512 - ....)sin(8*mu1) + ......
where
e1 = [1- (1 - esq)^0.5]/[1 + (1 - esq)^0.5]
mu1 = M1/[a(1 - esq/4 - 3e^4/64 - 5e^6/256 - ....)]
M1 = M0 + (N - FN)
T1 = tan^2(lat1)
D = (E - FE)/nu1","For Projected Coordinate System Trinidad 1903 / Trinidad Grid 
Parameters:
Ellipsoid   Clarke 1858     a = 20926348 ft    = 31706587.88 links
                                        b = 20855233 ft

then 1/f = 294.97870 and e^2 = 0.00676866

Latitude Natural Origin       10°26'30""N  =  0.182241463 rad
Longitude Natural Origin    61°20'00""W = -1.07046861 rad
False Eastings FE              430000.00 links
False Northings FN            325000.00 links

Forward calculation for: 
Latitude       10°00'00.00"" N = 0.17453293 rad
Longitude    62°00'00.00""W = -1.08210414 rad

A = -0.01145876      C = 0.00662550
T = 0.03109120      M = 5496860.24    nu = 31709831.92     M0 = 5739691.12

Then Easting E    =  66644.94 links
          Northing N =  82536.22 links

Reverse calculation for same easting and northing first gives :
e1    =   0.00170207       D  =     -0.01145875
T1   = 0.03109544         M1 =      5497227.34
nu1  = 31709832.34       mu1 =    0.17367306
phi1 = 0.17454458         rho1 =    31501122.40


Then Latitude     = 10°00'00.000""N
         Longitude  =  62°00'00.000""W",,"EPSG guidance note #7-2, http://www.epsg.org",OGP,1996/09/18,,0
9807,Transverse Mercator,1,"Note: These formulas have been transcribed from EPSG Guidance Note #7-2. Users are encouraged to use that document rather than the text which follows as reference because limitations in the transcription will be avoided.

The formulas to derive the projected Easting and Northing coordinates are in the form of a series as follows:

Easting, E =  FE + k0*nu[A + (1 - T + C)A^3/6 + (5 - 18T + T^2 + 72C - 58e'sq)A^5/120]	

Northing, N =  FN + k0{M - M0 + nu*tan(lat)[A^2/2 + (5 - T + 9C + 4C^2)A^4/24 + (61 - 58T + T^2 + 600C - 330e'sq)A^6/720]} 
where T = tan^2(lat)                nu = a /(1 - esq*sin^2(lat))^0.5
C = esq*cos^2(lat)/(1 - esq)
A = (lon - lon0)cos(lat), with lon and lon0 in radians.
M = a[(1 - esq/4 - 3e^4/64 - 5e^6/256 -....)lat - (3esq/8 + 3e^4/32 + 45e^6/1024+....)sin(2*lat) + (15e^4/256 + 45e^6/1024 +.....)sin(4*lat) - (35e^6/3072 + ....)sin(6*lat) + .....]
with lat in radians and M0 for lat0, the latitude of the origin, derived in the same way.

The reverse formulas to convert Easting and Northing projected coordinates to latitude and longitude are:

lat = lat1 - (nu1*tan(lat1)/rho1)[D^2/2 - (5 + 3*T1 + 10*C1 - 4*C1^2 - 9*e'^2)D^4/24 + (61 + 90*T1 + 298*C1 + 45*T1^2 - 252*e'^2 - 3*C1^2)D^6/720]
lon = lon0 + [D - (1 + 2*T1 + C1)D^3/6 + (5 - 2*C1 + 28*T1 - 3*C1^2 + 8*e'^2 + 24*T1^2)D^5/120] / cos(lat1)
where lat1 may be found as for the Cassini projection from:

lat1 = mu1 + ((3*e1)/2 - 27*e1^3/32 +.....)sin(2*mu1) + (21*e1^2/16 -55*e1^4/32 + ....)sin(4*mu1)+ (151*e1^3/96 +.....)sin(6*mu1) + (1097*e1^4/512 - ....)sin(8*mu1) + ......
and where
nu1 = a /(1 - esq*sin^2(lat1))^0.5
rho1 = a(1 - esq)/(1 - esq*sin^2(lat1))^1.5
e1 = [1- (1 - esq)^0.5]/[1 + (1 - esq)^0.5]
mu1 = M1/[a(1 - esq/4 - 3e^4/64 - 5e^6/256 - ....)]
M1 = M0 + (N - FN)/k0
T1 = tan^2(lat1)
C1 = e'^2*cos^2(lat1)
D = (E - FE)/(nu1*k0), with nu1 = nu for lat1

For areas south of the equator the value of latitude lat will be negative and the formulas above, to compute the E and N,  will automatically result in the correct values. Note that the false northings of the origin, if the equator, will need to be large to avoid negative northings and for the UTM projection is in fact 10,000,000m. Alternatively, as in the case of Argentina's Transverse Mercator (Gauss-Kruger) zones, the origin is at the south pole with a northings of zero. However each zone central meridian takes a false easting of 500000m prefixed by an identifying zone number. This ensures that instead of points in 
different zones having the same eastings, every point in the country, irrespective of its projection zone, will have a unique set of projected system coordinates. Strict application of the above formulas, with south latitudes negative, will result in the derivation of the correct Eastings and Northings. 

Similarly, in applying the reverse formulas to determine a latitude south of the equator, a negative sign for lat results from a negative lat1 which in turn results from a negative M1.","For Projected Coordinate System OSGB 1936 / British National Grid

Parameters:
Ellipsoid  Airy 1830  a = 6377563.396 m  1/f = 299.32496
then e'^2 = 0.00671534 and e^2 = 0.00667054

Latitude Natural Origin         49°00'00""N   = 0.85521133 rad
Longitude Natural Origin        2°00'00""W  = -0.03490659 rad
Scale factor ko                     0.9996013                                                                                              False Eastings FE                 400000.00 m
False Northings FN              -100000.00 m

Forward calculation for: 
Latitude       50°30'00.00""N  = 0.88139127 rad
Longitude    00°30'00.00""E  = 0.00872665 rad
A  = 0.02775415       C = 0.00271699
T =  1.47160434       M = 5596050.46
M0 = 5429228.60     nu  = 6390266.03

Then Easting E =        577274.99 m
          Northing N =       69740.50 m

Reverse calculations for same easting and northing first gives :
e1 =    0.00167322      mu1 = 0.87939562
M1 = 5599036.80        nu1 = 6390275.88
lat1  = 0.88185987      D = 0.02775243
rho1 =6372980.21       C1 =  0.00271391
T1 = 1.47441726

Then Latitude       = 50°30'00.000""N
         Longitude    = 00°30'00.000""E",,"EPSG guidance note #7-2, http://www.epsg.org",OGP,2007/02/19,2004.680 2007.029,0
9808,Transverse Mercator (South Orientated),1,"Note: These formulas have been transcribed from EPSG Guidance Note #7-2. Users are encouraged to use that document rather than the text which follows as reference because limitations in the transcription will be avoided.

For the mapping of southern Africa a south oriented Transverse Mercator projection is used. Here the coordinate axes are called Westings and Southings and increment to the West and South from the origin respectively.  The standard Transverse Mercator formulas (coordinate operation method code 9807) need to be modified to cope with this arrangement with

Westing, W = FE - k0 nu[A + (1 - T + C)A^3/6 + (5 - 18*T + T^2 + 72*C - 58*e'^2)A^5/120]

Southing, S = FN - k0{M - M0 + nu*tan(lat)*[A^2/2 + (5 - T + 9*C + 4*C^2)A^4/24 + (61 - 58*T + T^2 + 600*C - 330*e'^2)A^6/720]}

In these formulas the terms FE and FN retain their definition, i.e. in the Transverse Mercator (South Orientated) method they increase the Westing and Southing value at the natural origin. In this method they are effectively false westing (FW) and false southing (FS) respectively.

For the reverse formulas, those for the standard Transverse Mercator above apply, with the exception that:

M1 = M0 - (S - FN)/k0
and D = -(W - FE)/(nu1*k0), with nu1 = nu for lat1","See Transverse Mercator, code 9807, for general methodology.",,"EPSG guidance note #7-2, http://www.epsg.org",OGP,2002/07/31,2002.510,0
9809,Oblique Stereographic,1,"Note: These formulas have been transcribed from EPSG Guidance Note #7-2. Users are encouraged to use that document rather than the text which follows as reference because limitations in the transcription will be avoided.

Given the geodetic origin of the projection at the tangent point (lat0, lon0), the parameters defining the conformal sphere are:

R= sqrt( rho0 * nu0)
n= {1 + [e^2 * cos^4(latC) / (1 - e^2)]}^0.5
c=  [(n+sin(lat0)) (1-sin(chi0))]/[(n-sin(lat0)) (1+sin(chi0))]

where:
sin(chi0) = (w1-1)/(w1+1)
w1 = (S1.(S2)^e)^n
S1 = (1+sin(lat0))/(1-sin(lat0))
S2 = (1-e sin(lat0))/(1+e sin(lat0))

The conformal latitude and longitude (chi0,lambda0) of the origin are then computed from :

chi0 = asin[(w2-1)/(w2+1)]

where S1 and S2 are as above and  w2 = c (S1(S2)^e)^n
 
lambda0  = lon0

For any point with geodetic coordinates (lat, lon) the equivalent conformal latitude and longitude (chi, lambda) are computed from 
lambda = n(lon-lambda0) + lambda0
chi = asin[(w-1)/(w+1)]

where w = c (Sa (Sb)^e)^n
Sa = (1+sin(lat))/(1-sin(lat))
Sb = (1-e.sin(lat))/(1+e.sin(lat))
 
Then B = [1+sin(chi) sin(chi0) + cos(chi) cos(chi0) cos(lambda-lambda0)]

N = FN + 2 R k0 [sin(chi) cos(chi0) - cos(chi) sin(chi0) cos(lambda-lambda0)] / B

E = FE + 2 R k0 cos(chi) sin(lambda-lambda0) / B


The reverse formulae to compute the geodetic coordinates from the grid coordinates involves computing the conformal values, then the isometric latitude and finally the geodetic values.

The parameters of the conformal sphere and conformal latitude and longitude at the origin are computed as above. Then for any point with Stereographic grid coordinates (E,N) :

chi = chi0 + 2 atan[{(N-FN)-(E-FE) tan (j/2)} / (2 R k0)]

lambda = j + 2 i + lambda0

where g = 2 R k0 tan(pi/4 - chi0/2)
h = 4 R k0 tan(chi0) + g
i = atan[(E-FE) / {h+(N-FN)}]
j = atan[(E-FE) / (g-(N-FN)] - i

Geodetic longitude lon = (lambda-lambda0 ) / n +  lambda0

Isometric latitude psi = 0.5 ln [(1+ sin(chi)) / { c (1-  sin(chi))}] / n

First approximation lat1 = 2 atan(e^psi)  - pi/2  where e=base of natural logarithms.

psii = isometric latitude at lati

where psii= ln[{tan(lati/2 + pi/4}  {(1-e sin(lati))/(1+e sin(lati))}^(e/2)]
 
Then iterate lat(i+1) = lati - ( psii - psi ) cos(lati) (1 -e^2 sin^2(lati)) / (1 - e^2)

until the change in lat is sufficiently small.

For Oblique Stereographic projections centred on points in the southern hemisphere,  the signs of E, N, lon0, lon,  must be reversed to be used in the equations and lat will be negative anyway as a southerly latitude.

An alternative approach is given by Snyder, where, instead of defining a single conformal sphere at the origin point, the conformal latitude at each point on the ellipsoid is computed.  The conformal longitude is then always equivalent to the geodetic longitude.  This approach is a valid alternative to the above, but gives slightly different results away from the origin point. It is therefore considered by EPSG to be a different coordinate operation method to that described above.","For Projected Coordinate System RD / Netherlands New

Parameters:
Ellipsoid   Bessel 1841    a = 6377397.155 m    1/f = 299.15281
then e = 0.08169683

Latitude Natural Origin      52°09'22.178""N  = 0.910296727 rad
Longitude Natural Origin     5°23'15.500""E  =  0.094032038 rad
Scale factor k0                 0.9999079
False Eastings FE             155000.00 m
False Northings FN           463000.00 m

Forward calculation for: 

Latitude    53°N = 0.925024504 rad
Longitude   6°E = 0.104719755 rad

first gives the conformal sphere constants:

rho0 = 6374588.71    nu0 = 6390710.613
R = 6382644.571    n = 1.000475857    c  = 1.007576465

where S1 = 8.509582274  S2 = 0.878790173  w1 = 8.428769183
sin chi0 = 0.787883237

w   = 8.492629457   chi0 = 0.909684757      D0 = d0 

for the point  chi  = 0.924394997    D = 0.104724841

hence B = 1.999870665    N = 557057.739    E = 196105.283

reverse calculation for the same Easting and Northing first gives:

g = 4379954.188    h = 37197327.96   i = 0.001102255   j = 0.008488122

then  D = 0.10472467  Longitude = 0.104719584 rad =  6 deg E

chi  = 0.924394767    psi = 1.089495123
phi1 = 0.921804948       psi1 = 1.084170164
phi2 = 0.925031162       psi2 = 1.089506925
phi3 = 0.925024504       psi3 = 1.089495505
phi4 = 0.925024504

Then Latitude      = 53°00'00.000""N
          Longitude   =   6°00'00.000""E","This is not the same as the projection method of the same name in USGS Professional Paper no. 1395, ""Map Projections - A Working Manual"" by John P. Snyder.","EPSG guidance note #7-2, http://www.epsg.org",OGP,2006/03/31,1999.811 2006.200,0
9810,Polar Stereographic (variant A),1,"Note: These formulas have been transcribed from EPSG Guidance Note #7-2. Users are encouraged to use that document rather than the text which follows as reference because limitations in the transcription will be avoided.

For the forward conversion from latitude and longitude, for the south pole case

E = FE + rho * sin(lon  lonO)
N = FN + rho * cos(lon  lonO)
where
t = tan(pi/4 + lat/2) / {[(1 + e sin(lat)) / (1  e sin(lat))]^(e/2)}
rho = 2*a*ko*t / {[(1+e)^(1+e) (1e)^(1e)]^0.5}

For the north pole case, 
rho and E are found as for the south pole case but
t  = tan(pi/4  lat/2) *  {[(1 + e sin(lat)) / (1  e sin(lat))]^(e/2)}
N = FN  rho * cos(lon  lonO)

For the reverse conversion from easting and northing to latitude and longitude,
lat = chi + (e^2/2 + 5e^4/24 + e^6/12 + 13e^8/360) sin(2 chi) 
+ (7e^4/48 + 29e^6/240 + 811e^8/11520) sin(4 chi)
+ (7e^6/120 +  81e^8/1120) sin(6 chi)  + (4279e^8/161280) sin(8 chi)

where rho'  = [(E-FE)^2  + (N  FN)^2]^0.5
t'   =rho' {[(1+e)^(1+e) * (1 e)^(1-e)]^0.5} / (2 a ko)
and for the south pole case
chi  = 2 atan(t' )  pi/2 
but for the north pole case
chi  =  pi/2 - 2 atan t'

Then for for both north and south cases if E = FE, lon = lonO
else for the south pole case
lon = lonO + atan2[(E  FE),(N  FN)]
and for the north pole case
lon = lonO + atan2[(E  FE),(FN  N)]","For Projected Coordinate Reference System: WGS 84 / UPS North

Parameters:
Ellipsoid: WGS 84
a = 6378137.0 metre
1/f = 298.2572236
then e = 0.081819191

Latitude of natural origin (latO): 90°00'00.000""N =1.570796327 rad
Longitude of origin (longO): 0°00'00.000""E=0.0 rad
Scale factor at natural origin (ko): 0.994
False easting (FE) 2000000.00 metre
False northing (FN) 2000000.00 metre

Forward calculation for: 
Latitude (lat) =73°N =1.274090354 rad
Longitude (lon) =44°E =0.767944871 rad

t  = 0.150412808
rho = 1900814.564
whence
E = 3320416.75 m
N =  632668.43 m

Reverse calculation for the same Easting and Northing (3320416.75 E, 632668.43 N) first gives:
rho' = 1900814.566
t'  = 0.150412808
chi  = 1.2722090

Then
Latitude (lat) = 73°00'00.000""N
Longitude (lon) = 44°00'00.000""E",Latitude of natural origin must be either 90 degrees or -90 degrees (or equivalent in alternative angle unit).,"EPSG guidance note #7-2, http://www.epsg.org",OGP,2010/07/13,2003.220 2010.054,0
9811,New Zealand Map Grid,1,See information source.,See information source.,,New Zealand Department of Lands technical circular 1973/32,OGP,1996/09/18,,0
9812,Hotine Oblique Mercator (variant A),1,"Note: These formulas have been transcribed from EPSG Guidance Note #7-2. Users are encouraged to use that document rather than the text which follows as reference because limitations in the transcription will be avoided.

The following constants for the projection may be calculated :

B = {1 + [esq * cos^4(latc) / (1 - esq )]}^0.5
A = a * B * kc *(1 - esq )^0.5 / ( 1 - esq * sin^2(latc))
to = tan(pi/4 - latc/2) / ((1 - e*sin(latc)) / (1 + e*sin(latc)))^(e/2)
D = B (1 - esq)^0.5  / (cos(latc) * ( 1 - esq*sin^2(latc))^0.5)
if D < 1 to avoid problems with computation of F make D^2  = 1 
F = D + (D^2 - 1)^0.5  * SIGN(latc)
H = F*(to)^B
G = (F - 1/F) / 2
gammao = asin(sin(alphac) / D)
lonO = lonc - (asin(G*tan(gammao))) / B

 
Forward case: To compute (E,N) from a given (lat,lon) :

t = tan(pi/4 - lat/2) / ((1 - e sin (lat)) / (1 + e sin (lat)))^(e/2)
Q = H / t^B
S = (Q - 1 / Q) / 2
T = (Q + 1 / Q) / 2
V = sin(B (lon - lonO))
U = (- V cos(gammao) + S sin(gammao)) / T
v = A ln((1 - U) / (1 + U)) / 2 B
u = A atan((S cos(gammao) + V sin(gammao)) / cos(B (lon - lonO))) / B

The rectified skew co-ordinates are then derived from:
E = v cos(gammac) + u sin(gammac) + FE
N = u cos(gammac) - v sin(gammac) + FN

Reverse case: Compute (lat,lon)  from a given (E,N)  :

v = (E - FE) cos(gammac) - (N - FN) sin(gammac)
u = (N - FN) cos(gammac) + (E - FE) sin(gammac)

Q = e^- (B v / A)  where e is the base of natural logarithms.
S' = (Q - 1 / Q) / 2
T = (Q + 1 / Q) / 2
V = sin (B u / A)
U = (V cos(gammac) + S sin(gammac)) / T
t = (H / ((1 + U) / (1 - U))^0.5)^(1 / B)

chi = pi / 2 - 2 atan(t)

lat = chi + sin(2chi).( e^2 / 2 + 5*e^4 / 24 + e^6 / 12 + 13*e^8 / 360) +  sin(4*chi).( 7*e^4 /48 + 29*e^6 / 240 + 811*e8 / 11520) +  sin(6chi).( 7*e^6 / 120 + 81*e8 / 1120) +  sin(8chi).(4279 e^8 / 161280)

lon = lonO - atan ((S cos(gammao) - V sin(gammao)) / cos(B*u / A)) / B","For Projected Coordinate System  Timbalai 1948 / R.S.O. Borneo (m)

Parameters:
Ellipsoid:  Everest 1830 (1967 Definition)
a = 6377298.556 metres 1/f = 300.8017
then e = 0.081472981and e2 = 0.006637847

Latitude Projection Centre fc = 4°00'00""N = 0.069813170 rad
Longitude Projection Centre lc = 115°00'00""E = 2.007128640 rad
Azimuth of central line ac = 53°18'56.9537"" = 0.930536611 rad
Rectified to skew gc= 53°07'48.3685"" = 0.927295218 rad
Scale factor ko= 0.99984
False Eastings FE = 0.00 m
False Northings FN = 0.00 m

Forward calculation for: 
Latitude lat = 5°23'14.1129""N = 0.094025313 rad
Longitude lon = 115°48'19.8196""E = 2.021187362 rad

B = 1.003303209            F = 1.072121256
A =6376278.686            H = 1.000002991
to = 0.932946976          go = 0.927295218
D = 1.002425787           lon0 = 1.914373469
D2 =1.004857458
uc =738096.09              vc =0.00

t = 0.910700729            Q = 1.098398182
S = 0.093990763            T = 1.004407419
V = 0.106961709            U = 0.010967247
v = -69702.787             u = 901334.257

Then Easting E =      679245.73 m
     Northing N =     596562.78 m

Reverse calculations for same easting and northing first gives :
v =   -69702.787              u =901334.257
Q = 1.011028053
S  = 0.010967907          T = 1.000060146
V = 0.141349378           U = 0.093578324
t = 0.910700729             c = 0.093404829

Then Latitude = 5°23'14.113""N
     Longitude = 115°48'19.820""E",,"EPSG guidance note #7-2, http://www.epsg.org",OGP,2010/11/02,1997.620 1999.811 2004.430 2004.600 2007.044 2010.058,0
9813,Laborde Oblique Mercator,1,"Note : these formulas have been transcribed from IGN Document NT/G 74. Users are encouraged to use that document rather than the text which follows as reference because limitations in the transcription will be avoided.

From the defining parameters the following constants for the map projection may be calculated:

B = {1+[e^2 cos^4(phiC)]/(1 e^2)}^0.5
phiS = asin[sin(phiC) / B]
R = a  kC {(1e^2)^0.5 / [1e^2 sin^2(phiC)]}
C = ln[tan(pi/4+phiS /2)]  B. ln{tan(pi/4+phiC /2) ([1  e sin(phiC)]/[1+e sin(phiC)])^(e/2)}

Forward case: To compute (E,N) from a given (lat,lon)
L = B.(lonlonC)
q = C + B . ln{tan(pi/4+lat/2) ([1e sin(lat)] / [1+e sin(lat)])^(e/2)}
P = 2.atan[e ^q]  pi/2   where e is the base of natural logarithms
U = cos(P).cos(L).cos(phiS) + sin(P).sin(phiS) 
V = cos(P).cos(L).sin(phiS) - sin(P).cos(phiS)
W = cos(P).sin(L)
d = (U^2+V^2)^0.5
if d <> 0 then L' = 2.atan(V/(U+d)) and P' = atan(W/d)
if d = 0 then L' = 0 and P' = sign(W).pi/2
H = L' + i.ln(tan(pi/4+P'/2))                 where i^2 = 1
G = (1  cos(2.alphaC) + i.sin(2.alphaC))/12
E = FE + R . IMAGINARY(H + G.H^3)
N = FN + R . REAL(H + G.H^3)

Reverse case: To compute (lat, lon) from a given (E,N):
G = (1cos(2.alphaC) + i.sin(2.alphaC))/12   where i^2 = 1
To solve for Latitude and Longitude, a re-iterative solution is required, where the first two elements are
H0 = (NFN)/R + i.(EFE)/R  ie k = 0
H1 = H0/(H0 + G.H0^3),    i.e. k = 1,
and in subsequent reiterations, k increments by 1
Hk+1 = (H0+2.G.Hk^3)/(3.G.Hk^2+1)
Re-iterate until ABSOLUTE(REAL([H0-Hk-G.Hk^3)])) < 1E-11

L' = 1.REAL(Hk)
P' = 2.atan{ e ^[IMAGINARY(Hk)]}  pi/2  where e is the base of natural logarithms.
U' = cos(P').cos(L').cos(phiS) + cos(P').sin(L').sin(phiS)   
V' = sin(P')
W' = cos(P').cos(L').sin(phiS)  cos(P').sin(L').cos(phiS)
d = (U'^2+ V'^2)^0.5
if d <> 0 then L = 2 atan[V'/( U'+d)] and P = atan(W'/d)
if d = 0   then L = 0 and P = SIGN(W') . pi/2
lon = lonC + (L/B)

q' = {ln[tan(pi/4+P/2)]  C}/B
The final solution for latitude requires a second re-iterative process, where the first element is
lat'(0) = 2.atan(e ^q')  pi/2    where e is the base of natural logarithms.
And the subsequent elements are
lat'(k) = 2.atan{({1+e.sin[lat(k-1)]} / {1e.sin[lat(k-1)]})^(e/2).e ^q'}  pi/2  for K =1 ?
Iterate until ABSOLUTE(lat(k)-lat(k-1))  < 1E-11	
lat = lat(k)",See information source.,,"""La nouvelle projection du Service Geographique de Madagascar""; J. Laborde; 1928. Also IGN Paris technical note NT/G 74.",OGP,2010/11/02,1997.613 2006.960 2007.040 2010.058,0
9814,Swiss Oblique Cylindrical,1,See information source.,See information source.,"Can be accommodated by Oblique Mercator method (code 9815), for which this method is an approximation (see BfL document swissprojectionen.pdf at www.swisstopo.com).","""Die projecktionen der Schweizerischen Plan und Kartenwerke""; J Bollinger; 1967",OGP,2008/11/23,1997.612 2008.106,0
9815,Hotine Oblique Mercator (variant B),1,"Note: These formulas have been transcribed from EPSG Guidance Note #7-2. Users are encouraged to use that document rather than the text which follows as reference because limitations in the transcription will be avoided.

The following constants for the projection may be calculated :

B = {1 + [e^2 * cos^4(latc) / (1 - e^2 )]}^0.5
A = a * B * kc *(1 - e^2 )^0.5 / ( 1 - e^2 * sin^2(latc))
to = tan(pi/4 - latc/2) / ((1 - e*sin(latc)) / (1 + e*sin(latc)))^(e/2)
D = B (1 - e^2)^0.5  / (cos(latc) * ( 1 - e^2*sin^2(latc))^0.5)
if D < 1 to avoid problems with computation of F make D^2  = 1 
F = D + (D^2 - 1)^0.5  * SIGN(latc)
H = F*(to)^B
G = (F - 1/F) / 2
gammao = asin(sin(alphac) / D)
lonO = lonc - (asin(G*tan(gamma0))) / B
vc = 0
In general: uc = (A / B) atan((Dsq - 1)^0.5 / cos (alphac) ) * SIGN(latc)
but for the special cases where alphac = 90 degrees (e.g. Hungary, Switzerland) then 
uc = A*(lonc - lonO)  

 
Forward case: To compute (E,N) from a given (lat,lon) :

t = tan(pi/4 - lat/2) / ((1 - e sin (lat)) / (1 + e sin (lat)))^(e/2)
Q = H / t^B
S = (Q - 1 / Q) / 2
T = (Q + 1 / Q) / 2
V = sin(B (lon - lonO))
U = (- V cos(gammao) + S sin(gammao)) / T
v = A ln((1 - U) / (1 + U)) / 2 B

In general:
u = (A atan((S cos(gammao) + V sin(gammao)) / cos(B (lon - lonO))) / B) - (ABS(uc) . SIGN(latc))

but when alphac = pi/2 rad
if lon = lonc, u = 0
else u = (A atan((S cos(gammao) + V sin(gammao)) / cos(B (lon - lonO))) / B) - (ABS(uc) . SIGN(latc) . SIGN(lonc  lon))


The rectified skew co-ordinates are then derived from:
E = v cos(gammac) + u sin(gammac) + Ec
N = u cos(gammac) - v sin(gammac) + Nc

Reverse case: Compute (lat,lon)  from a given (E,N)  :

v = (E - Ec) cos(gammac) - (N - Nc) sin(gammac)
u = (N - Nc) cos(gammac) + (E - Ec) sin(gammac) + (ABS(uc) . SIGN(latc))

Q = e- (B v / A)  where e is the base of natural logarithms.
S' = (Q - 1 / Q) / 2
T = (Q + 1 / Q) / 2
V = sin (B u / A)
U = (V cos(gammac) + S sin(gammac)) / T
t = (H / ((1 + U) / (1 - U))^0.5)^(1 / B)

chi = pi / 2 - 2 atan(t)

lat = chi + sin(2chi).( e^2 / 2 + 5*e^4 / 24 + e^6 / 12 + 13*e^8 / 360) +  sin(4*chi).( 7*e^4 /48 + 29*e^6 / 240 + 811*e8 / 11520) +  sin(6chi).( 7*e^6 / 120 + 81*e8 / 1120) +  sin(8chi).(4279 e^8 / 161280)

lon=  lonO - atan ((S cos(gammao) - V sin(gammao)) / cos(B*u / A)) / B","For Projected Coordinate System  Timbalai 1948 / R.S.O. Borneo (m)

Parameters:
Ellipsoid:  Everest 1830 (1967 Definition)
a = 6377298.556 metres 1/f = 300.8017
then e = 0.081472981and e^2 = 0.006637847

Latitude Projection Centre fc = 4°00'00""N = 0.069813170 rad
Longitude Projection Centre lc = 115°00'00""E = 2.007128640 rad
Azimuth of central line ac = 53°18'56.9537"" = 0.930536611 rad
Rectified to skew gc= 53°07'48.3685"" = 0.927295218 rad
Scale factor ko= 0.99984
Easting at projection centre Ec = 590476.87 m
Northing at projection centre Nc = 442857.65 m

Forward calculation for: 
Latitude lat = 5°23'14.1129""N = 0.094025313 rad
Longitude lon = 115°48'19.8196""E = 2.021187362 rad

B = 1.003303209            F = 1.072121256
A =6376278.686            H = 1.000002991
to = 0.932946976          g0 = 0.927295218
D = 1.002425787           lon0 = 1.914373469
D2 =1.004857458
uc =738096.09              vc =0.00

t =0.910700729             Q =1.098398182
S =0.093990763            T = 1.004407419
V =0.106961709            U = 0.010967247
v =-69702.787                u = 163238.163

Then Easting E =      679245.73 m
        Northing N =     596562.78 m

Reverse calculations for same easting and northing first gives :
v =   -69702.787              u = 901334.257
Q = 1.011028053
S  = 0.010967907          T = 1.000060146
V = 0.141349378           U = 0.093578324
t = 0.910700729             c = 0.093404829

Then Latitude = 5°23'14.113""N
         Longitude = 115°48'19.820""E",,"EPSG guidance note #7-2, http://www.epsg.org",OGP,2010/11/02,1999.811 2004.430 2004.600 2007.044 2010.058,0
9816,Tunisia Mining Grid,1,"Note: These formulas have been transcribed from EPSG Guidance Note #7-2. Users are encouraged to use that document rather than the text which follows as reference because limitations in the transcription will be avoided.

This grid is used as the basis for mineral leasing in Tunsia.  Lease areas are approximately 2 x 2 km or 400 hectares.  The corners of these blocks are defined through a six figure grid reference where the first three digits are an easting in kilometres and the last three digits are a northing.  The latitudes and longitudes for block corners at 2 km intervals are tabulated in a mining decree dated 1st January 1953.  From this tabulation in which geographical coordinates are given to 5 decimal places it can be seen that:
a)  the minimum easting is 94 km, on which the longitude is 5.68989 grads east of Paris.
b)  the maximum easting is 490 km, on which the longitude is 10.51515 grads east of Paris.
c)  each 2 km grid easting interval equals 0.02437 grads.
d)  the minimum northing is 40 km, on which the latitude is 33.39 grads.
e)  the maximum northing is 860 km, on which the latitude is 41.6039 grads.
f)  between 40 km N and 360 km N, each 2 km grid northing interval equals 0.02004 grads.
g)  between 360 km N and 860 km N, each 2 km grid northing interval equals 0.02003 grads.

Formulae are:

Grads from Paris

Lat (grads) = 36.5964 + [(N - 360) * A] 
where N is in kilometres and A = 0.010015 if N > 360, else A = 0.01002.

LonParis (grads) = 7.83445 + [(E - 270) * 0.012185], where E is in kilometres.

The reverse formulae are:

E (km) = 270 + [(LonParis - 7.83445) / 0.012185] where LonParis is in grads.

N (km) = 360 + [(Lat - 36.5964) / B] 
where Lat is in grads and B = 0.010015  if  lat>36.5964, else B = 0.01002.

Degrees from Greenwich.

Modern practice in Tunisia is to quote latitude and longitude in degrees with longitudes referenced to the Greenwich meridian.  The formulae required in addition to the above are:

Lat (degrees) =  (Latg * 0.9) where Latg is in grads.
LonGreenwich (degrees) = [(LonParis + 2.5969213) * 0.9] where LonParis is in grads.


Lat (grads) =  (Latd / 0.9) where Latd is in decimal degrees.
LonParis (grads) = [(LonGreenwich / 0.9) - 2.5969213)] where LonGreenwich is in decimal degrees.","For grid location 302598,
Latitude = 36.5964 + [(598 - 360) * A].  As N > 360, A = 0.010015.
Latitude = 38.97997 grads = 35.08197 degrees.

Longitude  = 7.83445 + [(E - 270) * 0.012185, where E = 302.
Longitude  = 8.22437 grads east of Paris = 9.73916 degrees east of Greenwich.",,"EPSG guidance note #7-2, http://www.epsg.org",OGP,2000/03/07,1999.811 2000.080,0
9817,Lambert Conic Near-Conformal,1,"Note: These formulas have been transcribed from EPSG Guidance Note #7-2. Users are encouraged to use that document rather than the text which follows as reference because limitations in the transcription will be avoided.

To compute the Lambert Conic Near-Conformal the following formulae are used. First compute constants for the projection:

n = f / (2-f)
A = 1 / (6 rhoO nuO) 
A = a [ 1- n + 5 (n^2 - n^3 ) / 4 + 81 ( n^4 - n^5 ) / 64]*pi /180 
B = 3 a [ n - n^2 + 7 ( n^3 - n^4 ) / 8 + 55 n^5 / 64] / 2
C = 15 a [ n^2 -n^3 + 3 ( n^4 - n^5 ) / 4 ] / 16
D = 35 a [ n^3 - n^4 + 11 n^5 / 16 ] / 48
E = 315 a [ n^4 - n^5 ] / 512
r0 = ko nu0 / tan(lat0)
s0 = A latO - B sin(2 latO) + C sin(4 latO) - D sin(6 latO) + E sin(8 latO) where in the first term latO is in degrees, in the other terms latO is in radians.

Then for the computation of easting and northing from latitude and longitude:

s = A lat - B sin(2 lat) + C sin(4 lat) - D sin(6 lat) + E sin(8 lat) where in the first term latO is in degrees, in the other terms latO is in radians.
M = s - sO
M = ko ( m + A m^3)
r = rO - M
theta = (lon - lonO) sin(latO)

and
E = FE + r sin(theta)
N = FN + M + r sin(theta) tan(theta/2)

The reverse formulas for latitude and longitude from Easting and Northing are:

theta' = arctan {(E   FE) / [rO   (N   FN)]}
r' = +/- {(E   FE)^2 + [rO   (N   FN)]}^2}^0.5, taking the sign of latO 
M' = rO  r'

If an exact solution is required, it is necessary to solve for m and lat using iteration of the two equations:
m'= 	m'  [M'  ko m'  ko A (m')^3] / [ ko  3 ko A (m')^2]
using M' for m' in the first iteration. This will usually converge (to within 1mm) in a single iteration. Then
lat' = lat' +{m' + sO  [A' lat' (180/pi)  B' sin(2 lat')  + C' sin(4 lat')    D' sin(6lat') + E' sin(8 lat')]}/A' (pi/180)
first using lat' = latO + m'/A' (pi/180).

However the following non-iterative solution is accurate to better than 0.001"" (3mm) within 5 degrees latitude of the projection origin and should suffice for most purposes:
m' = 	M'  [M' ko M'  ko A (M')^3] / [ ko  3 ko A (M')^2]
lat' = latO + m'/A' (pi/180)
s' = A	' lat'   B' sin(2 lat')  + C' sin(4 lat')    D' sin(6 lat') + E' sin(8 lat')
		where in the first term lat' is in degrees, in the other terms lat' is in radians.
Ds' = 	A'(180 / pi)  2B' cos(2 lat')  + 4C' cos(4 lat')    6D' cos(6 lat') + 8E' cos(8 lat')
lat = lat'  [(m' + sO  s') / (ds')] radians

Then after solution of lat using either method above
lon = lonO + theta' / sin(latO) where lonO and lon are in radians.","For Projected Coordinate System: Deir ez Zor / Levant Zone

Parameters:
Ellipsoid  Clarke 1880 (IGN)  a = 6378249.2 m  1/f = 293.46602
then b = 6356515.000    n = 0.001706682563

Latitude Natural Origin  = 34°39'00""N = 0.604756586 rad
Longitude Natural Origin = 37°21'00""E=  0.651880476 rad
Scale factor at origin ko = 0.99962560
False Eastings FE  = 300000.00 m
False Northings FN  = 300000.00 m

Forward calculation for: 
Latitude of 37°31'17.625""N = 0.654874806 rad
Longitude of 34°08'11.291""E = 0.595793792 rad
first gives
A = 4.1067494 * 10e-15      A=111131.8633
B= 16300.64407     C= 17.38751     D= 0.02308      E= 0.000033
so = 3835482.233    s  = 4154101.458     m = 318619.225
M = 318632.72         Ms = 30.82262319
q = -0.03188875       ro = 9235264.405     r = 8916631.685

Then Easting E =   15707.96 m (c.f. E =   15708.00 using full formulae)
         Northing N =      623165.96 m (c.f. N = 623167.20 using full formulae)

Reverse calculation for the same easting and northing first gives

q' = -0.03188875
r  =  8916631.685
M= 318632.72 

Latitude =      0.654874806 rad = 37°31'17.625""N
Longitude = 0.595793792 rad =  34°08'11.291""E",The Lambert Near-Conformal projection is derived from the Lambert Conformal Conic projection by truncating the series expansion of the projection formulae.,"EPSG guidance note #7-2, http://www.epsg.org",OGP,2010/03/01,1999.811 2004.610 2005.390 2008.029 2010.024,0
9818,American Polyconic,1,See information source.,See information source.,See information source for formula and example.,"US Geological Survey Professional Paper 1395; ""Map Projections - A Working Manual"";  J. Snyder",OGP,1999/10/20,1999.550,0
9819,Krovak,1,"Note: These formulas have been transcribed from EPSG Guidance Note #7-2. Users are encouraged to use that document rather than the text which follows as reference because limitations in the transcription will be avoided.

From the defining parameters the following constants for the projection may be calculated :

A = a(1 - e^2)^0.5 / [1 - e^2 sin^2.(latC)]
B = {1 + [e^2 * cos^4(latC) / (1 - e^2)]}^0.5
gammao = asin[sin(latC) / B]
to = tan(pi/4 + gammao/2).[(1 + e sin(latC)) / (1 - e sin(latC))]^(e.B/2) / [tan(pi/4 + latC/2)]^B
n = sin(latp)
ro = kp.A / tan(latp)

To derive the projected Southing and Westing coordinates of a point with geographical coordinates (lat, lon) the formulas for the Krovak are:

U = 2(atan{to.tan^B(lat/2 + pi/4) / [(1 + e sin(lat)) / (1 - e sin(lat))]^[e.B/2]} - pi/4)
V = B(lonO - lon) where lonO and lon must both be referenced to the same prime meridian.
T = asin[cos(alphaC).sin(U) + sin(alphaC).cos(U). cos(V)]
D = asin[cos(U).sin(V)/cos(T)]
theta = n.D
r = ro.tan^n(pi/4 + latp/2) / tan^n(T/2 + pi/4)
Xp = r.cos(theta)
Yp = r.sin(theta)

Then	
Southing (X) = Xp + FN
Westing	 (Y) = Yp + FE

The reverse formulas to derive the latitude and longitude of a point from its Southing and Westing values are:

Xp' = Southing  FN
Yp' = Westing  FE
r' = [(Yp')^2 + (Xp')^2]^(1/2)  
theta' = atan[Yp'/Xp']
D' = theta' / sin(latp)
T' = 2{atan[((ro / r')^(1/n)).tan(pi/4 + latp/2)] - pi/4}
U' = asin[cos(alphaC).sin(T') - sin(alphaC).cos(T').cos(D')]
V' = asin(cos(T').sin(D') / cos(U'))

Then latitude lat is found by iteration using U' as the value for lat(j-1) in the first iteration:
lat(j) = 2*(atan{to^(-1/B) tan^(1/B).(U'/2 + pi/4).[(1 + e sin(lat(j-1)) / (1 - e sin(lat(j-1))]^(e/2)} - pi/4) 

Then
lon = lonO - V' / B where lon is referenced to the same prime meridian as lonO.","For Geographic CRS S-JTSK and Projected CRS S-JTSK (Ferro) / Krovak

Parameters:
Ellipsoid  Bessel 1841   a = 6377397.155m  1/f = 299.15281
    then    e = 0.081696831        e^2 = 0.006674372

Latitude of projection centre = 49°30'00""N =  0.863937979 rad
Longitude of origin = 42°30'00""E of Ferro = 0.741764932 rad
Co-latitude of cone axis = 30°17'17.303"" = 0.528627762 rad
Latitude of pseudo standard parallel = 78°30'00""N = 1.370083463 rad
Scale factor on pseudo Standard Parallel (ko) = 0.9999
False Easting = 0.00 m
False Northing = 0.00 m

Calculated projection constants:
A=6380703.611
B=1.000597498
gammao=0.863239103
to=1.003419164
n= 0.979924705
ro=1298039.005

Forward calculation for: 
Latitude = 50°12'32.442""N = 0.876312568 rad
Longitude = 16°50'59.179""E of Greenwich
Firstly, because the projection definition includes longitudes referenced to the Ferro meridian, the longitude of the point needs to be transformed to be referenced to the Ferro meridian using the Longitude Rotation method (EPSG method code 9601).

Longitude = 16°50'59.1790""E of Greenwich	
Longitude of Ferro = 17°40'00"" west of Greenwich
and then
Longitude = 34°30'59.1790""E of Ferro = 0.602425500 rad

Then the forward calculation first gives

U = 0.875596951
V = 0.139422687
T = 1.386275051
D = 0.506554626
theta = 0.496385392
r = 1194731.005
Xp = 1050538.634
Yp = 568990.995

Then Southing (X) =  1050538.63 m
     Westing  (Y) =   568991.00 m.

Reverse calculation for the same Southing and Westing gives

Xp' = 1050538.634
Yp' = 568990.995
r' = 1194731.005
theta' = 0.496385392
D' = 0.506554626
T' = 1.386275051
U' = 0.875596951
V' = 0.139422687
lat(iteration 1) = 0.876310603 
lat(iteration 2) = 0.876312562
lat(iteration 3) = 0.876312568

Latitude = 0.876312568 rad = 50°12'32.442""N.

Longitude of point = 0.602425500 rad = 34°30'59.179""E of Ferro.
Then using the Longitude Rotation method (EPSG method code 9601):
Longitude of Ferro = 17°40'00"" west of Greenwich
and
Longitude of point = 34°30'59.179""E of Greenwich.",,"Research Institute for Geodesy Topography and Cartography (VUGTK); Prague.",OGP,2010/12/07,2002.950 2006.180 2007.040 2009.017 2010.071 2010.100,0
9820,Lambert Azimuthal Equal Area,1,"Note: These formulas have been transcribed from EPSG Guidance Note #7-2. Users are encouraged to use that document rather than the text which follows as reference because limitations in the transcription will be avoided.

Oblique aspect
To derive the projected coordinates of a point, geodetic latitude (lat) is converted to authalic latitude (ß). The formulae  to convert geodetic latitude and longitude (lat,lon) to Easting and Northing are:

Easting, E   = FE + {(B . D) . [cos ß . sin(lon  lonO)]}
Northing, N = FN + (B / D) . {(cos ßO . sin ß)   [sin ßO . cos ß . cos(lon  lonO)]}

where
B = Rq . (2 / {1 + sin ßO . sin ß + [cos ßO . cos ß . cos(lon  lonO)]})^0.5
D = a . [cos latO / (1  e2 sin2 latO)^0.5] / (Rq . cos ßO)
Rq = a . (qP  / 2)^0.5
ß = asin (q / qP)
ßO = asin (qO / qP)
q = (1  e^2) . ([sin(lat) / (1  e^2 sin^2(lat))]  {[1/(2e)] . ln [(1  e sin(lat)) / (1 + e sin(lat))]})
qO = (1  e^2) . ([sin(latO) / (1  e^2 sin^2(latO))]  {[1/(2e)] . ln [(1  e sin(latO)) / (1 + e sin(latO))]})
qP = (1  e^2) . ([sin(latP) / (1  e^2 sin^2(latP))]  {[1/(2e)] . ln [(1  e sin(latP)) / (1 + e sin(latP))]})
where *P = p/2 radians, thus
qP = (1  e^2) . ([1 / (1  e^2)]  {[1/(2e)] . ln [(1  e) / (1 + e)]})

The reverse formulas to derive the geodetic latitude and longitude of a point from its Easting and Northing values are:

lat = ß' + [(e^2/3 + 31e^4/180 + 517e^6/5040) . sin 2ß'] + [(23e^4/360 + 251e^6/3780) . sin 4ß'] +  [(761e^6/45360) . sin 6ß']

lon = lonO + atan {(E-FE) . sin C / [D. rho . cos ßO . cos C  D^2. (N-FN) . sin ßO . sin C]}
where
ß' = asin{(cosC . sin ßO) + [(D . (N-FN) . sinC . cos ßO) / rho]}
C = 2 . asin(rho / 2 . Rq)
rho = {[(E-FE)/D]^2 + [D . (N FN)]^2}^0.5

and D, Rq, and ßO are as in the forward equations.

Polar aspect
For the polar aspect of the Lambert Azimuthal Equal Area projection, some of the above equations are indeterminate. Instead, for the forward case from latitude and longitude (lat, lon) to Easting (E) and Northing (N):

For the north polar case:
	Easting, E   = FE + [rho  sin(lon  lonO)]
	Northing, N = FN   [rho  cos(lon  lonO)]
where
rho = a (qP   q)^0.5
and qP  and q are found as for the general case above.

For the south polar case:
	Easting, E   = FE + [rho . sin(lon  lonO)]
	Northing, N = FN +  [rho . cos(lon  lonO)]
where
rho = a (qP  + q)^0.5
and qP  and q are found as for the general case above.

For the reverse formulas to derive the geodetic latitude and longitude of a point from its Easting and Northing:
lat = ß' + [(e^2/3 + 31e^4/180 + 517e^6/5040)  sin 2ß'] + [(23e^4/360 + 251e^6/3780)  sin 4ß'] +  [(761e^6/45360)  sin 6ß']
as for the oblique case, but where
ß' = ±asin [1 rho^2 / (a^2{1 [(1 e^2)/2e)) ln[(1-e)/(1+ e)]})], taking the sign of  latO
and rho = {[(E FE)]^2 + [(N  FN)]^2}^0.5
Then
lon = lonO + atan [(E FE)] / (N FN)] for the south pole case
and
lon = lonO + atan [(E FE)] /  (N FN)] for the north pole case.","For Projected Coordinate Reference System: ETRS89 / ETRS-LAEA

Parameters:
Ellipsoid:GRS 1980  a = 6378137.0 metres    1/f = 298.2572221
then e = 0.081819191

Latitude of natural origin (latO): 52°00'00.000""N = 0.907571211  rad
Longitude of natural origin (lonO): 10°00'00.000""E = 0.174532925  rad
False easting (FE): 4321000.00 metres
False northing (FN) 3210000.00 metres

Forward calculation for: 
Latitude (lat) =  50°00'00.000""N = 0.872664626 rad
Longitude(lon) = 5°00'00.000""E = 0.087266463 rad

First gives
qP = 1.995531087
qO = 1.569825704
q = 1.525832247
Rq = 6371007.181
betaO = 0.905397517
beta = 0.870458708
D = 1.000425395
B = 6374393.455

whence 
E = 3962799.45  m
N = 2999718.85  m

Reverse calculation for the same Easting and Northing (3962799.45 E, 2999718.85  N) first gives:

rho = 415276.208
C = 0.065193736
beta' = 0.870458708

Then Latitude = 50°00'00.000""N
        Longitude = 5°00'00.000""E",This is the ellipsoidal form of the projection.,"USGS Professional Paper 1395, ""Map Projections - A Working Manual"" by John P. Snyder.",OGP,2007/01/12,2003.350 2004.430 2005.075 2005.290 2006.200 2007.005,0
9821,Lambert Azimuthal Equal Area (Spherical),1,See information source.,See information source.,This is the spherical form of the projection.  See coordinate operation method Lambert Azimuthal Equal Area (code 9820) for ellipsoidal form.  Differences of several tens of metres result from comparison of the two methods.,"USGS Professional Paper 1395, ""Map Projections - A Working Manual"" by John P. Snyder.",OGP,2001/06/05,2009.007,1
9822,Albers Equal Area,1,"Note: These formulas have been transcribed from EPSG Guidance Note #7-2. Users are encouraged to use that document rather than the text which follows as reference because limitations in the transcription will be avoided.

To derive the projected coordinates of a point, geodetic latitude (lat) is converted to authalic latitude (ß). The formulas to convert geodetic latitude and longitude (lat, lon) to Easting (E) and Northing (N) are: 
Easting (E)     =  EF + (rho . sin(theta)) 
Northing (N)  =  NF + rhoO  (rho . cos(theta))

where
theta  = n . (lon - lonO)
rho  = [a . (C  n.alpha)^0.5] / n
rhoO = [a . (C  n.alphaO)^0.5] / n
and
C  = m1^2 +  (n . alpha1)
n   = (m1^2  m2^2) / (alpha2 - alpha1)
m1 = cos lat1 / (1  e^2 sin^2(lat1))^0.5
m2 = cos lat2 / (1  e^2 sin^2(lat2))^0.5
alpha  = (1  e^2) . {[sin(lat) / (1  e^2 sin^2(lat))]  [1/(2e)] . ln [(1  e sin(lat)) / (1 + e sin(lat))]}
alphaO  = (1  e^2) . {[sin(latO) / (1  e^2 sin^2(latO))]  [1/(2e)] . ln [(1  e sin(latO)) / (1 + e sin(latO))]}
alpha1  = (1  e^2) . {[sin(lat1) / (1  e^2 sin^2(lat1))]  [1/(2e)] . ln [(1  e sin(lat1)) / (1 + e sin(lat1))]}
alpha2  = (1  e^2) . {[sin(lat2) / (1  e^2 sin^2(lat2))]  [1/(2e)] . ln [(1  e sin(lat2)) / (1 + e sin(lat2))]}

The reverse formulas to derive the geodetic latitude and longitude of a point from its Easting and Northing values are:
lat = ß' + (e^2/3 + 31e^4/180 + 517e^6/5040) . sin 2ß'] + [(23e^4/360 + 251e^6/3780) . sin 4ß'] + [(761e^6/45360) . sin 6ß']

lon =   lonO + (theta / n)
where
ß' =  asin(alpha' / {1  [(1  e^2) / (2 . e)] . ln [(1  e) / (1 + e)]
alpha' =  [C  (rho^2 . N^2 / a^2)] / n
rho =  {(E  EF)^2 + [rhoO  (N  NF)]^2 }^0.5
theta =  atan [(E  EF) / [rhoO  (N  NF)]
and C, n and rhoO are as in the forward equations.",See Information Source.,,"USGS Professional Paper 1395, ""Map Projections - A Working Manual"" by John P. Snyder.",OGP,2007/03/27,2006.200 2007.049,0
9823,Equidistant Cylindrical (Spherical),1,"Note: These formulas have been transcribed from EPSG Guidance Note #7-2. Users are encouraged to use that document rather than the text which follows as reference because limitations in the transcription will be avoided.

This method has one of the simplest formulas available. If the latitude of natural origin (latO) is at the equator the method is also known as Plate Carrée. It is not used for rigorous topographic mapping because its distortion characteristics are unsuitable. Formulas are included to distinguish this map projection method from an approach sometimes mistakenly called by the same name and used for simple computer display of geographic coordinates  see Pseudo Plate Carrée (coordinate operation method code 9825).

For the forward calculation:

X =  R . (lon - lonO) . cos(latO)
Y =  R .  lat

where R = ((a^2 * (1   e^2)) / (1  e^2 sin^2 latO)^2)^0.5
and latO, lonO, lat and lon are expressed in radians.

For the Equidistant Cylindrical method on a sphere (not ellipsoid), e = 0 and R = a.

For the reverse calculation:

lat = Y / R  
lon = lonO + (X / R cos(latO))

where R is as for the forward method.",See information source.,"See method code 9842 for ellipsoidal development. If the latitude of natural origin is at the equator, also known as Plate Carrée. See also Pseudo Plate Carree, method code 9825.","US Geological Survey Professional Paper 1395; ""Map Projections - A Working Manual"";  J. Snyder.",OGP,2008/03/14,2002.920 2008.003 2009.023,1
9824,Transverse Mercator Zoned Grid System,1,"Note: These formulas have been transcribed from EPSG Guidance Note #7-2. Users are encouraged to use that document rather than the text which follows as reference because limitations in the transcription will be avoided.

The standard Transverse Mercator formulas (coordinate operation method 9807) are modified as follows:

Zone number, Z, = int((Long + LongI + W) / W)  with Long,  LongI and W in degrees. 
where (LongI) is the Initial Longitude of the zoned grid system
and W is the width of each zone of the zoned grid system.
If Long < 0, Long = (Long + 360) degrees.

Then,
   Long0  = [Z * W]  [LongI + (W/2)]

For the forward calculation,
   Easting, E =  Z*10^6 + FE + k0.nu[A + (1 - T + C)A^3/6 + (5 - 18T + T^2 + 72C - 58e'^2)A^5/120]
   
and in the reverse calculation for longitude, 
   D = (E  [FE + Z*10^6])/(nu1.k0)",(none),If locations fall outwith the fixed zones the general Transverse Mercator method (code 9807) must be used for each zone.,"EPSG guidance note #7-2, http://www.epsg.org",OGP,2001/06/05,,0
9825,Pseudo Plate Carree,1,"X = Lon
Y = Lat

Lat = Y
Lon = X",(none),"Used only for depiction of graticule (latitude/longitude) coordinates on a computer display. The axes units are decimal degrees and of variable scale. The origin is at Lat = 0, Long = 0. See Equidistant Cylindrical, code 9823, for proper Plate Carrée.","EPSG guidance note #7-2, http://www.epsg.org",OGP,2001/11/06,,0
9826,Lambert Conic Conformal (West Orientated),1,"Note: These formulas have been transcribed from EPSG Guidance Note #7-2. Users are encouraged to use that document rather than the text which follows as reference because limitations in the transcription will be avoided.

In older mapping of Denmark and Greenland the Lambert Conic Conformal is used with axes positive north and west. To derive the projected Westing and Northing coordinates of a point with geographical coordinates (Lat, Lon) the formulas are as for the standard Lambert Conic Conformal (1SP) case (coordinate operation method code 9801) except for:

W =  FE  r.sin(theta)

In this formula the term FE retains its definition, i.e. in the Lambert Conic Conformal (West Orientated) method it increases the Westing value at the natural origin. In this method it is effectively false westing (FW).

The reverse formulas to derive the latitude and longitude of a point from its Westing and Northing values are as for the standard Lambert Conic Conformal (1SP) case except for:

theta' = arctan[(FE  W)/{r0  (N  FN)}]
r' = +/-[(FE  W)^2 + {r0  (N  FN)}^2]^0.5, taking the sign of n.","See Lambert Conic Conformal (1SP), code 9801, for general methodology.",,"EPSG guidance note #7-2, http://www.epsg.org",OGP,2002/01/16,,0
9827,Bonne,1,"Note: These formulas have been transcribed from EPSG Guidance Note #7-2. Users are encouraged to use that document rather than the text which follows as reference because limitations in the transcription will be avoided.

The formulas to convert geodetic latitude and longitude (lat, lon) to Easting and Northing are:

E = (rho . sin T) + FE
N = (a . mO / sin(latO)   rho . cos T) + FN

where
m = cos(lat) / (1   e^2sin^2(lat))^0.5
with lat in radians and mO for latO, the latitude of the origin, derived in the same way.

M = a[(1   e^2/4   3e^4/64   5e^6/256 ....)lat  (3e^2/8 + 3e^4/32 + 45e^6/1024+....)sin(2 lat) + (15e^4/256 + 45e^6/1024 +.....)sin(4 lat)   (35e^6/3072 + ....)sin(6 lat) + .....]
with lat in radians and MO for latO, the latitude of the origin, derived in the same way.

rho = a . mO / sin(latO) + MO  M
T = a . m (lon  lonO) / rho       with lon and lonO in radians

For the reverse calculation:
X = E  FE
Y = N  FN
rho = ± [X^2 + (a . mO / sin(latO)  Y)^2]^0.5  taking the sign of latO
M = a . mO / sin(latO) + MO  rho
mu = M / [a (1  e^2/4  3e^4/64  5e^6/256  )]
e1 = [1  (1  e^2)^0.5] / [1 + (1  e^2)^0.5]
lat = mu + ((3 e1 / 2)   (27 e1^3 / 32) +.....)sin(2 mu) + ((21 e1^2 / 16)   (55 e1^4 / 32) + ....)sin(4 mu) 
  + ((151 e1^3 / 96) +.....)sin(6 mu) + ((1097 e1^4 / 512)    ....)sin(8 mu) + ......

m = cos(lat) / (1  e^2 sin^2(lat))^0.5

If latO is not negative
lon = lonO + rho {atan[X / (a . mO / sin(latO)  Y)]} / a . m
but if lonO is negative
lon = lonO + rho {atan[ X / (Y  a . mO / sin(latO))]} / a . m
In either case, if lat = ±90°, m = 0 and the equation for lon is indeterminate, so use lon = lonO.",See information source.,,"US Geological Survey Professional Paper 1395, ""Map Projections - A Working Manual"" by John P Snyder.",OGP,2002/07/13,,0
9828,Bonne (South Orientated),1,"Note: These formulas have been transcribed from EPSG Guidance Note #7-2. Users are encouraged to use that document rather than the text which follows as reference because limitations in the transcription will be avoided.

The formulas to convert geodetic latitude and longitude (lat, lon) to Easting and Northing are:

W = FE  (rho . sin T)
S = FN  (a . mO / sin(latO)   rho . cos T)

where
m = cos(lat) / (1   e^2sin^2(lat))^0.5
with lat in radians and mO for latO, the latitude of the origin, derived in the same way.

M = a[(1   e^2/4   3e^4/64   5e^6/256 ....)lat  (3e^2/8 + 3e^4/32 + 45e^6/1024+....)sin(2 lat) + (15e^4/256 + 45e^6/1024 +.....)sin(4 lat)   (35e^6/3072 + ....)sin(6 lat) + .....]
with lat in radians and MO for latO, the latitude of the origin, derived in the same way.

rho = a . mO / sin(latO) + MO  M
T = a . m (lon  lonO) / rho       with lon and lonO in radians

For the reverse calculation:
X = FE  W
Y = FN  S
rho = ± [X^2 + (a . mO / sin(latO)  Y)^2]^0.5  taking the sign of latO
M = a . mO / sin(latO) + MO  rho
mu = M / [a (1  e^2/4  3e^4/64  5e^6/256  )]
e1 = [1  (1  e^2)^0.5] / [1 + (1  e^2)^0.5]
lat = mu + ((3 e1 / 2)   (27 e1^3 / 32) +.....)sin(2 mu) + ((21 e1^2 / 16)   (55 e1^4 / 32) + ....)sin(4 mu) 
  + ((151 e1^3 / 96) +.....)sin(6 mu) + ((1097 e1^4 / 512)    ....)sin(8 mu) + ......

m = cos(lat) / (1  e^2 sin^2(lat))^0.5

If latO is not negative
lon = lonO + rho {atan[X / (a . mO / sin(latO)  Y)]} / a . m
but if lonO is negative
lon = lonO + rho {atan[ X / (Y  a . mO / sin(latO))]} / a . m
In either case, if lat = ±90°, m = 0 and the equation for lon is indeterminate, so use lon = lonO.

In these formulas the terms FE and FN retain their definition, i.e. in the Bonne (South Orientated) method they increase the Westing and Southing value at the natural origin. In this method they are effectively false westing (FW) and false southing (FS) respectively.","See information source of Bonne, code 9827, for general methodology.",,"EPSG guidance note #7-2, http://www.epsg.org",OGP,2002/07/13,,0
9829,Polar Stereographic (variant B),1,"Note: These formulas have been transcribed from EPSG Guidance Note #7-2. Users are encouraged to use that document rather than the text which follows as reference because limitations in the transcription will be avoided.

First calculate the scale factor at natural origin:
for the south pole case
tF  = tan (pi/4 + latF/2) / {[(1 + e sin(latF)) / (1  e sin(latF))]^(e/2)}

but for the north pole case
tF  = tan (pi/4 - latF/2) * {[(1 + e sin(latF)) / (1  e sin(latF))]^(e/2)}

then for both cases
mF = cos(latF)  / (1  e^2 sin^2(latF))^0.5
ko = mF {[(1+e)^(1+e) (1e)^(1e)]0.5} / (2  tF)


The forward and reverse conversions then follow the formulae for the
Polar Stereographic (variant A) method:

For the forward conversion from latitude and longitude, for the south pole case

E = FE + rho * sin(lon  lonO)
N = FN + rho * cos(lon  lonO)
where
t = tan(pi/4 + lat/2) / {[(1 + e sin(lat)) / (1  e sin(lat))]^(e/2)}
rho = 2*a*ko*t / {[(1+e)^(1+e) (1e)^(1e)]^0.5}

For the north pole case, 
rho and E are found as for the south pole case but
t  = tan(pi/4  lat/2) *  {[(1 + e sin(lat)) / (1  e sin(lat))]^(e/2)}
N = FN  rho * cos(lon  lonO)


For the reverse conversion from easting and northing to latitude and longitude,
lat = chi + (e^2/2 + 5e^4/24 + e^6/12 + 13e^8/360) sin(2 chi) 
+ (7e^4/48 + 29e^6/240 + 811e^8/11520) sin(4 chi)
+ (7e^6/120 +  81e^8/1120) sin(6 chi)  + (4279e^8/161280) sin(8 chi)

where rho'  = [(E-FE)^2  + (N  FN)^2]^0.5
t'   =rho' {[(1+e)^(1+e) * (1 e)^(1-e)]^0.5} / (2 a ko)
and for the south pole case
chi  = 2 atan(t' )  pi/2 
but for the north pole case
chi  =  pi/2 - 2 atan t'

Then for for both north and south cases if E = FE, lon = lonO
else for the south pole case
lon = lonO + atan2[(E  FE),(N  FN)]
and for the north pole case
lon = lonO + atan2[(E  FE),(FN  N)]","For Projected Coordinate Reference System: WGS 84 / Australian Antarctic Polar Stereographic

Parameters:
Ellipsoid: WGS 84
a = 6378137.0 metres  1/f = 298.2572236
then e = 0.081819191

Latitude of standard parallel (latF): 71°00'00.000""S = -1.239183769 rad
Longitude of origin (lonO): 70°00'00.000""E = 1.221730476 rad
False easting (FE): 6000000.00 metres
False northing (FN): 6000000.00 metres

Forward calculation for: 
Latitude (lat) = 75°00'00.000""S = -1.308996939 rad
Longitude(lon) = 120°00'00.000""E = 2.094395102 rad

tF  = 0.168407325
mF = 0.326546781
ko = 0.97276901
t  = 0.132508348
pho = 1638783.238
whence
E = 7255380.79 m
N = 7053389.56 m

Reverse calculation for the same Easting and Northing (7255380.79 E, 7053389.56 N) first gives:
tF  = 0.168407325       mF = 0.326546781      and  ko = 0.97276901
then rho' = 1638783.236          t'  = 0.132508347               chi = -1.3073146

Then Latitude (lat) = 75°00'00.000""S
        Longitude (lon) = 120°00'00.000""E",,"EPSG guidance note #7-2, http://www.epsg.org",OGP,2010/07/13,2004.430 2010.054,0
9830,Polar Stereographic (variant C),1,"Note: These formulas have been transcribed from EPSG Guidance Note #7-2. Users are encouraged to use that document rather than the text which follows as reference because limitations in the transcription will be avoided.

For the forward conversion from latitude and longitude, for the south pole case
E = EF + rho * sin (lon  lonO)
N = NF  rhoF + rho * cos (lon  lonO)
where
mF = cos latF  / (1  e^2 sin^2(latF))^0.5
tF  = tan (p/4 + latF/2) / {[(1 + e sin(latF)) / (1  e sin(latF))]^(e/2)}
t  = tan (p/4 + lat/2) / {[(1 + e sin(lat)) / (1  e sin(lat))]^(e/2)}
rhoF = a mF
rho = rhoF *  t / tF

For the north pole case, mF, *F, * and E are found as for the south pole case but
tF = tan (p/4  latF/2) * {[(1 + e sin(latF)) / (1  e sin(latF))]^(e/2)}
t = tan (p/4  lat/2) * {[(1 + e sin(lat)) / (1  e sin(lat))]^(e/2)}
N = NF + rhoF  [rho * cos (lon  lonO)]


For the reverse conversion from easting and northing to latitude and longitude,
lat = chi + (e^2/2 + 5e^4/24 + e^6/12 + 13e^8/360) sin(2 chi) 
+ (7e^4/48 + 29e^6/240 + 811e^8/11520) sin(4 chi)
+ (7e^6/120 +  81e^8/1120) sin(6 chi)  + (4279e^8/161280) sin(8 chi)

where for the south pole case
rho' = [(E-EF)^2  + (N  NF + rhoF)^2] ^0.5
t'   =  rho' *  tF / rhoF
chi  = 2 atan(t' )  pi/2
and where mF and tF are as for the forward conversion

For reverse conversion north pole case, mF, tF and rhoF are found as for the north pole case of the forward conversion, and
rho' = [(E-EF)^2  + (N  NF  rhoF)^2]^0.5
t' is found as for the south pole case of the reverse conversion =  rho' *  tF / rhoF
chi  =  pi/2 - 2 atan t'

Then for for both north and south pole cases 
if E = EF, lon = lonO
else for the south pole case
lon = lonO + atan2[(E  EF),(N  NF + rhoF)]
and for the north pole case
lon = lonO + atan2[(E  EF),(NF + rhoF  N)]","For Projected Coordinate Reference System: Petrels 1972 / Terre Adelie Polar Stereographic

Parameters:
Ellipsoid:International 1924
a = 6378388.0 metres  1/f = 297.0
then e = 0.081991890

Latitude of false origin (latF):  67°00'00.000""S = -1.169370599 rad
Longitude of origin (lonO): 140°00'00.000""E = 2.443460953 rad
Easting at false origin (EF): 300000.00 metres
Northing at false origin (NF): 200000.00 metres

Forward calculation for: 
Latitude (lat) = 66°36'18.820""S = -1.162480524 rad
Longitude (lon) = 140°04'17.040""E = 2.444707118 rad

mF = 0.391848769
rhoF = 2499363.488
tF  = 0.204717630
t  = 0.208326304
rho = 2543421.183
whence
E = 303169.52 m
N = 244055.72 m

Reverse calculation for the same Easting and Northing (303169.522 E, 244055.721 N) first gives:
mF = 0.391848769
rhoF = 2499363.488
tF  = 0.204717630

then
rho' = 2543421.183
t'  = 0.208326304
chi = -1.1600190

Then Latitude (lat) = 66°36'18.820""S
         Longitude (lon) =140°04'17.040""E",,"EPSG guidance note #7-2, http://www.epsg.org",OGP,2010/07/13,2010.054,0
9831,Guam Projection,1,"Note: These formulas have been transcribed from EPSG Guidance Note #7-2. Users are encouraged to use that document rather than the text which follows as reference because limitations in the transcription will be avoided.

the forward conversion from latitude and longitude is given by: 
	x = (lon  lonO) cos(lat) / [(1  e^2 sin^2(lat))^0.5]
	E = FE + x
	N = FN + M  MO + ^2 tan(lat) [(1  e^2 sin^2(lat))^0.5] / (2a)}
where
	M = a[(1  ^2/4   3e^4/64   5e^6/256 ....)lat    (3e^2/8 + 3e^4/32 + 45e^6/1024+....)sin(2 lat) 
		+ (^4/256 + 45e^6/1024 +.....)sin(4 lat)    (35e^6/3072 + ....)sin(6 lat)  + .....]
with lat in radians and MO for latO, the latitude of the natural origin, derived in the same way.

The reverse conversion from easting and northing to latitude and longitude requires iteration of three equations. The Guam projection uses three iterations, which is satisfactory over the small area of application. First MO for the latitude of the origin latO is derived as for the forward conversion. Then:
e'   = [1  (1 ^2)^0.5] / [1 + (1  e^2)^0.5]
and
M'  =  MO + (N  FN)  {(E  FE)^2 tan(latO) [(1  e^2 sin^2(latO)^0.5] / (2a)}
mu'   =  M' / a(1   e^2/4   3e^4/64   5e^6/256 ....)
lat'   =  mu' + (3e'/2   27e'^3/32)sin(2mu') + (21e'^2/16   55e'^4/32)sin(4mu') + (151e'^3/96)sin(6mu') 
+ (1097e'^4/512)sin(8mu')

	M""  = MO + (N  FN)  {(E FE)^2 tan(lat') [(1  e^2 sin^2(lat'))^0] / (2a)}
mu""   =  M"" / a(1   e^2/4   3e^4/64   5e^6/256 ....)
lat""  =  mu"" + (3e'/2   27e'^3/32)sin(2mu"") + (21e'^2/16   55e'^4/32)sin(4mu"") + (151e'^3/96)sin(6mu"") 
	(1097  e'^4/512)sin(8mu"")

	M'''   = MO + (N  FN)  {(E  F)^2 ta(lat"") [(1  e^2 sin^2(lat"")^0.5] / (2a)}
mu'''   =  M''' / a(1   e^2/4   3e^4/64   5e^6/256 ....)
lat'''   =  mu''' + (3e'/2   27e'^3/32)sin(2mu''') + (21e'^2/16   55e'^4/32)sin(4mu''') + (151e'^3/96)sin(6mu''') 
+ (1097e'^4/512)sin(8mu''')
Then
lon = lonO + {(E  FE) . [(1  e^2 sin^2 lat''')^0.5] / (a cos lat''')}",See information source or EPSG Guidance Note 7.,Simplified form of Oblique Azimuthal Equidistant projection method.,"US Geological Survey Professional Paper 1395; ""Map Projections - A Working Manual"";  J. Snyder.",OGP,2004/04/22,,0
9832,Modified Azimuthal Equidistant,1,"Note: These formulas have been transcribed from EPSG Guidance Note #7-2. Users are encouraged to use that document rather than the text which follows as reference because limitations in the transcription will be avoided.

First calculate a constant for the projection:
nu_O = a /(1  e^2 sin^2(latO))^0.5

Then the forward conversion from latitude and longitude is given by:
nu = a /(1  e^2 sin^2(lat))^0.5
psi = atan [(1  e^2) tan(lat) + e^2 * nu_O * sin(latO)  / (nu * cos(lat))]
alpha = atan {sin (lon  lonO) / [cos(latO) * tan(psi)  sin(latO) * cos (lon  lonO)]}
G  = e sin(latO) / (1  e^2)^0.5
H = e cos(latO) * cos(alpha) / (1  e^2)^0.5
Then
if sin(alpha)) = 0,  s = asin (cos(latO) * sin(psi)  sin(latO) * cos(psi)) * SIGN(cos(alpha))
else                     s = asin [sin (lon  lonO) * cos(psi) / sin(alpha))

and in either case
c = nu_O * s {[1  s^2 * H^2 (1  H^2) /6] + [(s^3/8)GH(1-2H^2)] + (s^4/120)[H^2(4-7H^2)  3G^2(1-7H^2)]  [(s^5/48)GH]}

Then
	E = FE + * sin(alpha)
	N = FN + * cos(alpha)

For the reverse conversion from easting and northing to latitude and longitude:
	c' = [(E FE)^2 + (N  FN)^2]^0.5
alpha' = atan [(E  FE) / (N  FN)]
	A = e^2 * cos^2(latO) * cos^2(alpha') / (1  e^2)
	B 3e^2 * (1-A) * sin(latO) * cos(latO) * cos(alpha') / (1  e^2)
	D = c'nu_O
	J = D  [A (1 + AD^3 / 6]  [B (1 + 3A) D^4 / 24]
	K = 1  (* J^2 / 2)  (B *J^3 / 6)
psi' = asin (sin(latO) cos(J) + cos(latO) sin(J) cos(alpha'))

Then
lat = atan [(1  e^2 * K sin(latO) / sin(psi')) * tan(psi') / (1  e^2)]
lon = lonO + asin (sin(alpha') * sin(J) / cos(psi'))",See information source or EPSG Guidance Note 7.,Modified form of Oblique Azimuthal Equidistant projection method developed for Polynesian islands. For the distances over which these projections are used (under 800km) this modification introduces no significant error.,"US Geological Survey Professional Paper 1395; ""Map Projections - A Working Manual"";  J. Snyder.",OGP,2006/03/31,2006.200,0
9833,Hyperbolic Cassini-Soldner,1,See information source.,See information source.,,"EPSG guidance note #7-2, http://www.epsg.org",OGP,2006/06/28,,0
9834,Lambert Cylindrical Equal Area (Spherical),1,"For the forward calculation for the normal aspect of the projection in which lat1 is the latitude of the standard parallel:

E =  FE   R (lon &#8211; lonO) cos(lat1)
N =  FN   R sin(lat) / cos(lat1)

where  lat1, lat and lon are expressed in radians

R is the radius of the sphere and will normally be one of the CRS parameters. If the figure of the earth used is an ellipsoid rather than a sphere then R should be calculated as the radius of the authalic sphere using the formula for RA given in EPSG Guidance Note 7-2, section 1.2, table 3.

For the reverse calculation:

lat = asin{[(N &#8211; FN) / R] cos(lat1)}
lon = lonO   {[E &#8211; FE] / [R cos(lat1)]}

where R is as for the forward method.

See information source for formulas for oblique and polar aspects and examples.",See information source.,This is the spherical form of the projection.  See coordinate operation method Lambert Cylindrical Equal Area (code 9835) for ellipsoidal form.  Differences of several tens of metres result from comparison of the two methods.,"USGS Professional Paper 1395, ""Map Projections - A Working Manual"" by John P. Snyder.",OGP,2009/06/07,2007.078 2009.023,0
9835,Lambert Cylindrical Equal Area,1,See information source.,See information source.,This is the ellipsoidal form of the projection.,"USGS Professional Paper 1395, ""Map Projections - A Working Manual"" by John P. Snyder.",OGP,2007/11/01,,0
9836,Geocentric/topocentric conversions,1,"Note: These formulas have been transcribed from EPSG Guidance Note #7-2. Users are encouraged to use that document rather than the text which follows as reference because limitations in the transcription will be avoided.

First it is necessary to derive ellipsoidal values Po, Lo of the topocentric origin from their geocentric values Xo, Yo, Zo through the reverse formulas given in method 9602.

Then topocentric coordinates [U, V, W] are computed as follows:

U =  (X-Xo) sin Lo + (Y-Yo) cos Lo
V =  (XXo) sin Po cos Lo  (YYo) sin Po sin Lo + (ZZo) cos Po
W = (XXo) cos Po cos Lo + (YYo) cos Po sin Lo + (ZZo) sin Po 


The reverse formulas to calculate geocentric coordinates from topocentric coordinates are:

X = Xo  U sin Lo   V sin Po cos Lo + W cos Po cos Lo
Y = Yo + U cos Lo  V sin Po sin Lo  + W cos Po sin Lo 
Z = Zo + V cos Po + W sin Po","For Geocentric CRS = 	WGS 84 (EPSG CRS code 4978)
and		
Topocentric origin Xo 	=	3652 755.3058 m
Topocentric origin Yo 	=	  319 574.6799 m
Topocentric origin Zo	=	5201 547.3536 m

Ellipsoid parameters:	a = 6378137m.0  1/f = 298.2572236

First calculate additional ellipsoid parameters:
e^2 = 0.006694380
eta = 0.006739497
b = 6356752.314

Next, derive Po, Lo from Xo,Yo,Zo by the formulas given in method 9602:
p	=	3666708.2376	
q	=	0.9583523313	
Po	=	0.9599310885	rad
Lo	=	0.0872664625	rad

Forward calculation for point with geocentric coordinates:
X= 3771 793.968
Y=  140 253.342
Z= 5124 304.349

gives topocentric coordinates
U= -189 013.869
V= -128 642.040
W=    -4 220.171",,"EPSG guidance note #7-2, http://www.epsg.org",OGP,2007/11/01,,0
9837,Geographic/topocentric conversions,1,"Note: These formulas have been transcribed from EPSG Guidance Note #7-2. Users are encouraged to use that document rather than the text which follows as reference because limitations in the transcription will be avoided.

To convert latitude P, longitude L and ellipsoidal height h into topocentric coordinates U,V,W: 

U = (nu + h) cos P sin (L  Lo)
V = (nu + h) [sin P cos Po  cos P sin Po cos (L  Lo)] + e^2 (nuO sin Po  nu sin P ) cos Po 
W = (nu + h) [sin P sin Po + cos P cos Po cos (L  Lo)] + e^2 (nuO sin Po  nu sin P ) sin Po  (nuO  ho)

where Po, Lo and ho are the ellipsoidal coordinates of the topocentric origin

and nu is the radius of curvature in the prime vertical at latitude P = a /(1  e^2 sin^2 P)^0.5
nuO is the radius of curvature in the prime vertical at latitude Po = a /(1  e^2 sin^2 Po)^0.5
	e is the eccentricity of the ellipsoid here e^2 = (a^2  b^2)/a^2 = 2f  f^2


The reverse formulae to convert topocentric coordinates (U, V, W) into latitude, longitude and ellipsoidal height (P, L, h) first draws on the reverse case of method 9836 to derive geocentric coordinates X, Y, Z and then on the reverse case of method 9602 to derive latitude, longitude and height.","For Geographic 3D CRS = WGS 84 (EPSG CRS code 4979)
and				
Topocentric origin latitude Po =  55deg N 
Topocentric origin longitude Lo = 5 deg E
Topocentric origin ellipsoidal height ho = 	200 metres		

Ellipsoid parameters: 	= 6378137.0 metres, 1/f = 298.25722236

First calculate additional ellipsoid parameter e^2 and radius of curvature nuO at the topocentric origin:
e^2=0.006694380
nuO	=	0. 6392510.727

Forward calculation for: 
Latitude P = 	53°48'382""N
Longitude L = 	2°07'468""E
Height h 	=	73.0 metres		

nu	=	6392088.017
then 	
U 	 =	189 013.869 m
V 	 =	128 642.040 m
W 	=	    4 220.171 m

Reverse calculation for:
U 	=	189 013.869 m
V 	=	128 642.040 m
W 	=	    4 220.171 m

First calculate additional ellipsoid parameter e^2 and radius of curvature nuO at the topocentric origin:
e^2 = 0.006694380
nuO = 6392510.727

then the following intermediate terms:

Xo = 3652755.306
Yo = 319574.680
Zo = 5201547.353
X = 3771793.968
Y = 140253.342
Z = 5124304.349
eta = 0.006739496674
b = 6356752.314
p = 3774400.712
q = .937549875
P = 0.9391511015 rad
L = 0.0371676591 rad
nu = 6392088.017

for a final result of: 

Latitude P = 	53°48'33.820""N
Longitude L 	=	2°07'46.380""E
Height h = 	73.0 metres",,"EPSG guidance note #7-2, http://www.epsg.org",OGP,2007/11/01,,0
9838,Vertical Perspective,0,"Note: These formulas have been transcribed from EPSG Guidance Note #7-2. Users are encouraged to use that document rather than the text which follows as reference because limitations in the transcription will be avoided.

This general case deals with a viewing point at a finite height hv above the origin. If the viewing point is at infinity, the formulas for the orthographic case (method code 9839) should be used.

The forward equations for the Vertical Perspective to convert geographical 3D coordinates (lat, lon, h) to Easting (E) and Northing (N) begin with the formulas of thje Geographic/topocentric conversions method (code 9836) to convert the geographical coordinates to topocentric coordinates U, V, W. The perspective projection origin is coincident with the topographic origin and has coordinates (latO, lonO, hO).

U = (nu + h) cos P sin (L  Lo)
V = (nu + h) [sin P cos Po  cos P sin Po cos (L  Lo)] + e^2 (nuO sin Po  nu sin P ) cos Po 
W = (nu + h) [sin P sin Po + cos P cos Po cos (L  Lo)] + e^2 (nuO sin Po  nu sin P ) sin Po  (nuO  ho)

Then, given the height hv of the perspective viewing point above the origin, the perspective coordinates (E, N) are calculated from topocentric coordinates (U, V, W) as:

E = U * hv / (hv  W)
N = V * hv / (hv  W)

The reverse calculation from E,N to U,V,W and lat,lon,h is indeterminate.",See EPSG Guidance Note 7-2.,"For a viewing point height approaching or at infinity, see the Vertical Perspective (orthographic case) (method code 9839).","EPSG guidance note #7-2, http://www.epsg.org",OGP,2007/11/01,,0
9839,Vertical Perspective (Orthographic case),0,"Note: These formulas have been transcribed from EPSG Guidance Note #7-2. Users are encouraged to use that document rather than the text which follows as reference because limitations in the transcription will be avoided.

The orthographic vertical perspective is a special case of the vertical perspective with the viewing point (hv) at infinity. Therefore, all projection ""rays"" are parallel to one another and all are perpendicular to the tangent plane. Since the rays are parallel, coordinates in the tangent-plane are the same in any other parallel mapping plane, i.e. are consistent for any value of ho, which therefore becomes irrelevant to the forward formulas.

The orthographic vertical perspective forward conversion from 3D geographic coordinates latitude, longitude and ellipsoidal height (lat, lon, h) to Easting (E) and Northing (N) is given by:

E = U = limit (U hv / (hv  W), hv -> infinity)
N = V = limit (V hv / (hv  W), hv -> infinity)

where, as in Sections 2.2.3 and 1.3.17.2:

U = (* + h) cos * sin (*  *O)
V = (* + h) [sin * cos *O  cos * sin *O cos (*  *O)] + e2 (*O sin *O  * sin * ) cos *O 

The reverse calculation from E,N to U,V,W and *,*,h is indeterminate.",See EPSG Guidance Note 7-2.,This is a special case of the general Vertical Perspective (method code 9838) in which the viewing point at infinity.,"EPSG guidance note #7-2, http://www.epsg.org",OGP,2007/11/01,,0
9840,Orthographic,1,"Note: These formulas have been transcribed from EPSG Guidance Note #7-2. Users are encouraged to use that document rather than the text which follows as reference because limitations in the transcription will be avoided.

The Orthographic Projection forward conversion from 2D geographic coordinates latitude and longitude (lat, lon) and the origin on the ellipsoid (latO, lonO) is given by:

E = FE + nu cos(lat) sin (lon  lonO)
N = FN + nu [sin(lat) cos(latO)  cos(lat) sin(latO) cos (lon  lonO)] + e^2 (nuO sin(latO)  nu sin(lat)) cos(latO) 

where
nu is the prime vertical radius of curvature at latitude lat; nu = a /(1  e^2 sin^2(lat))^0.5,
nuO is the prime vertical radius of curvature at latitude of origin latO; nuO = a /(1  e^2 sin^2(latO)^0.5,
e is the eccentricity of the ellipsoid and e^2 = (a^2  b^2)/a^2 = 2f  f^2
a and b are the ellipsoidal semi-major and semi-minor axes,
1/f is the inverse flattening, and 
the latitude and longitude of the projection origin are latO and lonO.

These formulas are similar to those for the orthographic case of the vertical perspective (method code 9839) except that, for the Orthographic Projection given here, h = 0 and the term (nu + h) reduces to nu. The projection origin is at the topocentric system origin latO, lonO with false origin coordinates FE and FN. 

For the reverse formulas for latitude and longitude corresponding to a given Easting (E) and Northing (N), iteration is required as the prime vertical radius (nu) is a function of latitude. 

Begin by seeding the iteration with the center of projection (or some better guess): 
lat = latO
lon = lonO

Enter the iteration here with the (next) best estimates of lat and lon. Then solve for the radii of curvature in the prime vertical (nu) and meridian (rho):
nu = a / (1  e^2 sin^2(lat))^0.5
rho = a (1  e^2) / (1  e^2 sin^2(lat))^1.5

Compute test values of E and N (E' and N') using the forward equations:
E' = FE + nu cos(lat) sin(lon  lonO)
N' = FN + nu [sin(lat) cos(latO)  cos(lat) sin(latO) cos(lon  lonO)] + e^2 (nuO sin(latO)  nu sin(lat) ) cos(latO)

Partially differentiate the forward equations to solve for the elements of the Jacobian matrix: 
J11 = dE/dlat =  rho sin(lat) sin(lon  lonO) 
J12 = dE/dlon = nu cos(lat) cos(lon  lonO) 
J21 = dN/dlat = rho [cos(lat) cos(latO) + sin(lat) sin(latO) cos(lon  lonO)]
J22 = dN/dlon = nu sin(latO) cos(lat) sin (lon  lonO) 

Solve for the determinant of the Jacobian:
D = J11 J22  J12 J21

Solve the northerly and easterly differences this iteration: 
dE = E  E'
dN= N  N'

Adjust the latitude and longitude for the next iteration by inverting the Jacobian and multiplying by the differences: 
lat = lat + (J22 dE  J12 dN) / D
lon = lon + (J21 dE + J11 dN) / D

Return to the entry point with new estimates of latitude and longitude and iterate until the change in lat and lon is not significant.",See EPSG Guidance Note 7-2.,"If the natural origin of the projection is at the topocentric origin, this is a special case of the Vertical Perspective (orthographic case) (method code 9839) in which the ellipsoid height of all mapped points is zero (h = 0).","EPSG guidance note #7-2, http://www.epsg.org",OGP,2007/11/01,,0
9841,Mercator (1SP) (Spherical),1,See information source.,See information source.,,"USGS Professional Paper 1395, ""Map Projections - A Working Manual"" by John P. Snyder.",OGP,2008/03/14,2008.114,1
9842,Equidistant Cylindrical,1,See EPSG Guidance Note #7-2.,,"See method code 9823 for spherical development. See also Pseudo Plate Carree, method code 9825.",ESRI,OGP,2008/03/14,2009.023,1
9843,Geographic 2D CRS axis order reversal,1,"The axis order reversal operates on coordinates of a point whose order change is described by the following matrix operation:

[Derived CRS 1st coordinate ]    =  [ 0   1 ]  *  [Base CRS 1st coordinate ]
[Derived CRS 2nd coordinate]        [ 1   0 ]     [Base CRS 2nd coordinate]",(none),This is a parameter-less conversion  to reverse the order of the axes of a geographic 2D CRS.,OGP,OGP,2008/03/30,,0
9844,Geographic 3D CRS axis order change,1,"The axis order change operates on coordinates of a point whose order change is described by the following matrix operation:

[Derived CRS 1st coordinate]        [ 0   1   0 ]     [Base CRS 1st coordinate ]
[Derived CRS 2nd coordinate]   =  [ 1   0   0 ]  *  [Base CRS 2nd coordinate]
[Derived CRS 3rd coordinate]        [ 0   0   0 ]     [Base CRS 3rd coordinate ]",(none),This is a parameter-less conversion to change the order of coordinates of a geographic 3D CRS.,OGP,OGP,2008/03/30,,0
